"use client";

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsList, TabsTrigger, TabsContent } from "@/components/ui/tabs";
import { Accordion, AccordionItem, AccordionTrigger, AccordionContent } from "@/components/ui/accordion";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { useState } from "react";
import Link from "next/link";
import { FaArrowLeft } from "react-icons/fa";

const features = [
  {
    id: "intro",
    title: "Gi·ªõi thi·ªáu ScholarAI",
    short: "N·ªÅn t·∫£ng AI h·ªó tr·ª£ h√†nh tr√¨nh du h·ªçc t·ª´ A ƒë·∫øn Z.",
    detail: [
      "ScholarAI l√† tr·ª£ l√Ω th√¥ng minh gi√∫p b·∫°n t·ª´ng b∆∞·ªõc tr√™n h√†nh tr√¨nh du h·ªçc: t·ª´ t∆∞ v·∫•n ch·ªçn tr∆∞·ªùng, chu·∫©n b·ªã gi·∫•y t·ªù, ƒë·∫øn l·∫≠p k·∫ø ho·∫°ch t√†i ch√≠nh.",
      "B·∫°n c√≥ th·ªÉ tr√≤ chuy·ªán v·ªõi AI b·∫±ng ti·∫øng Vi·ªát ho·∫∑c ti·∫øng Anh, kh√¥ng c·∫ßn ki·∫øn th·ª©c chuy√™n s√¢u.",
    ],
  },
  {
    id: "select_school",
    title: "T∆∞ v·∫•n ch·ªçn tr∆∞·ªùng v√† ng√†nh",
    short: "AI ph√¢n t√≠ch h·ªì s∆° v√† s·ªü th√≠ch ƒë·ªÉ g·ª£i √Ω tr∆∞·ªùng ph√π h·ª£p.",
    detail: ["B·∫°n ch·ªâ c·∫ßn nh·∫≠p c√°c th√¥ng tin nh∆∞ h·ªçc l·ª±c, s·ªü th√≠ch, qu·ªëc gia mu·ªën ƒë·∫øn.", "AI s·∫Ω g·ª£i √Ω danh s√°ch c√°c tr∆∞·ªùng ph√π h·ª£p nh·∫•t, k√®m l√Ω do ƒë·ªÅ xu·∫•t."],
  },
  {
    id: "legal_checklist",
    title: "Checklist gi·∫•y t·ªù ph√°p l√Ω",
    short: "T·∫°o danh s√°ch c√°c gi·∫•y t·ªù c·∫ßn chu·∫©n b·ªã v√† theo d√µi ti·∫øn ƒë·ªô.",
    detail: [
      "AI s·∫Ω h·ªèi b·∫°n c√°c c√¢u h·ªèi v√† sinh ra danh s√°ch gi·∫•y t·ªù nh∆∞ Visa, I-20, b·∫£ng ƒëi·ªÉm, h·ªô chi·∫øu, t√†i ch√≠nh.",
      "B·∫°n c√≥ th·ªÉ ƒë√°nh d·∫•u ho√†n th√†nh t·ª´ng gi·∫•y t·ªù v√† theo d√µi tr·∫°ng th√°i.",
    ],
  },
  {
    id: "cost_plan",
    title: "T√≠nh to√°n chi ph√≠ v√† l·∫≠p k·∫ø ho·∫°ch",
    short: "D·ª± to√°n h·ªçc ph√≠, sinh ho·∫°t, b·∫£o hi·ªÉm, t√†i ch√≠nh c·∫ßn chu·∫©n b·ªã.",
    detail: ["B·∫°n nh·∫≠p ng√¢n s√°ch v√† th·ªùi gian d·ª± ƒë·ªãnh du h·ªçc.", "AI gi√∫p t√≠nh to√°n chi ti·∫øt v√† g·ª£i √Ω k·∫ø ho·∫°ch ph√π h·ª£p."],
  },
  {
    id: "chat_agent",
    title: "Tr√≤ chuy·ªán c√πng AI",
    short: "Chat v·ªõi tr·ª£ l√Ω ·∫£o ƒë·ªÉ gi·∫£i ƒë√°p m·ªçi th·∫Øc m·∫Øc v·ªÅ du h·ªçc.",
    detail: [
      "B·∫°n c√≥ th·ªÉ h·ªèi b·∫•t k·ª≥ ƒëi·ªÅu g√¨ nh∆∞ c√°ch ch·ªçn ng√†nh, c√°ch xin h·ªçc b·ªïng, visa, vi·ªác l√†m sau t·ªët nghi·ªáp...",
      "AI lu√¥n s·∫µn s√†ng tr·∫£ l·ªùi v√† ƒëi·ªÅu h∆∞·ªõng b·∫°n t·ªõi b∆∞·ªõc ti·∫øp theo ph√π h·ª£p.",
    ],
  },
];

export default function FeaturesPage() {
  const [search, setSearch] = useState("");

  const filtered = features.filter((f) => f.title.toLowerCase().includes(search.toLowerCase()) || f.short.toLowerCase().includes(search.toLowerCase()));

  return (
    <div className="max-w-4xl mx-auto p-6">
      <div className="mb-6">
        <Link href="/">
          <Button variant="outline" className="mb-4">
            <FaArrowLeft className="mr-2 w-4 h-4" />
            Quay v·ªÅ trang ch·ªß
          </Button>
        </Link>
        <h1 className="text-3xl font-bold mb-4">üìò H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng ScholarAI</h1>
        <p className="text-muted-foreground mb-6">Kh√°m ph√° c√°c t√≠nh nƒÉng ch√≠nh v√† c√°ch s·ª≠ d·ª•ng ƒë·ªÉ h·ªó tr·ª£ h√†nh tr√¨nh du h·ªçc c·ªßa b·∫°n.</p>
      </div>

      <Input placeholder="T√¨m t√≠nh nƒÉng..." className="mb-6" value={search} onChange={(e) => setSearch(e.target.value)} />

      <Tabs defaultValue="all">
        <TabsList className="mb-4">
          <TabsTrigger value="all">T·∫•t c·∫£</TabsTrigger>
          {features.map((f) => (
            <TabsTrigger key={f.id} value={f.id}>
              {f.title}
            </TabsTrigger>
          ))}
        </TabsList>

        <TabsContent value="all">
          <div className="grid md:grid-cols-2 gap-4">
            {filtered.map((f) => (
              <Card key={f.id}>
                <CardHeader>
                  <CardTitle>{f.title}</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="mb-3 text-muted-foreground">{f.short}</p>
                  <Accordion type="single" collapsible>
                    <AccordionItem value="info">
                      <AccordionTrigger>Chi ti·∫øt h∆∞·ªõng d·∫´n</AccordionTrigger>
                      <AccordionContent>
                        <ul className="list-disc pl-4 text-sm space-y-1">
                          {f.detail.map((d, i) => (
                            <li key={i}>{d}</li>
                          ))}
                        </ul>
                      </AccordionContent>
                    </AccordionItem>
                  </Accordion>
                </CardContent>
              </Card>
            ))}
          </div>
        </TabsContent>

        {features.map((f) => (
          <TabsContent key={f.id} value={f.id}>
            <Card>
              <CardHeader>
                <CardTitle>{f.title}</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground mb-3">{f.short}</p>
                <ul className="list-disc pl-4 space-y-1">
                  {f.detail.map((d, i) => (
                    <li key={i}>{d}</li>
                  ))}
                </ul>
              </CardContent>
            </Card>
          </TabsContent>
        ))}
      </Tabs>
    </div>
  );
}
