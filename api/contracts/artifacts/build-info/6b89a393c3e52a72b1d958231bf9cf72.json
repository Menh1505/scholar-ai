{
	"id": "6b89a393c3e52a72b1d958231bf9cf72",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ScholarClaimer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"./ScholarPoint.sol\";\r\n\r\ncontract ScholarPointClaimer {\r\n    ScholarPoint public immutable token;\r\n    constructor(ScholarPoint _token) { token = _token; }\r\n\r\n    /// Gọi kèm amount để mint đúng amount token cho msg.sender\r\n    function claim(uint256 amount) external {\r\n        token.mint(msg.sender, amount);\r\n    }\r\n}\r\n"
			},
			"contracts/ScholarPoint.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\";\r\nimport \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\";\r\n\r\ncontract ScholarPoint is ERC20, AccessControl {\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n\r\n    constructor() ERC20(\"Scholar Point\", \"SPT\") {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(MINTER_ROLE, msg.sender);\r\n    }\r\n\r\n    function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function decimals() public pure override returns (uint8) { return 0; }\r\n}\r\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/ScholarClaimer.sol": {
				"ScholarPointClaimer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ScholarPoint",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract ScholarPoint",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ScholarClaimer.sol\":93:396  contract ScholarPointClaimer {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/ScholarClaimer.sol\":171:223  constructor(ScholarPoint _token) { token = _token; } */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ScholarClaimer.sol\":214:220  _token */\n  dup1\n    /* \"contracts/ScholarClaimer.sol\":206:220  token = _token */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ScholarClaimer.sol\":171:223  constructor(ScholarPoint _token) { token = _token; } */\n  pop\n    /* \"contracts/ScholarClaimer.sol\":93:396  contract ScholarPointClaimer {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:683   */\ntag_12:\n    /* \"#utility.yul\":624:631   */\n  0x00\n    /* \"#utility.yul\":653:677   */\n  tag_23\n    /* \"#utility.yul\":671:676   */\n  dup3\n    /* \"#utility.yul\":653:677   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":642:677   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:849   */\ntag_13:\n    /* \"#utility.yul\":781:824   */\n  tag_25\n    /* \"#utility.yul\":818:823   */\n  dup2\n    /* \"#utility.yul\":781:824   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":774:779   */\n  dup2\n    /* \"#utility.yul\":771:825   */\n  eq\n    /* \"#utility.yul\":761:843   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":839:840   */\n  0x00\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":829:841   */\n  revert\n    /* \"#utility.yul\":761:843   */\ntag_26:\n    /* \"#utility.yul\":689:849   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":855:1036   */\ntag_14:\n    /* \"#utility.yul\":931:936   */\n  0x00\n    /* \"#utility.yul\":962:968   */\n  dup2\n    /* \"#utility.yul\":956:969   */\n  mload\n    /* \"#utility.yul\":947:969   */\n  swap1\n  pop\n    /* \"#utility.yul\":978:1030   */\n  tag_28\n    /* \"#utility.yul\":1024:1029   */\n  dup2\n    /* \"#utility.yul\":978:1030   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":855:1036   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1042:1431   */\ntag_3:\n    /* \"#utility.yul\":1131:1137   */\n  0x00\n    /* \"#utility.yul\":1180:1182   */\n  0x20\n    /* \"#utility.yul\":1168:1177   */\n  dup3\n    /* \"#utility.yul\":1159:1166   */\n  dup5\n    /* \"#utility.yul\":1155:1178   */\n  sub\n    /* \"#utility.yul\":1151:1183   */\n  slt\n    /* \"#utility.yul\":1148:1267   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1186:1265   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1148:1267   */\ntag_30:\n    /* \"#utility.yul\":1306:1307   */\n  0x00\n    /* \"#utility.yul\":1331:1414   */\n  tag_32\n    /* \"#utility.yul\":1406:1413   */\n  dup5\n    /* \"#utility.yul\":1397:1403   */\n  dup3\n    /* \"#utility.yul\":1386:1395   */\n  dup6\n    /* \"#utility.yul\":1382:1404   */\n  add\n    /* \"#utility.yul\":1331:1414   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1321:1414   */\n  swap2\n  pop\n    /* \"#utility.yul\":1277:1424   */\n  pop\n    /* \"#utility.yul\":1042:1431   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ScholarClaimer.sol\":93:396  contract ScholarPointClaimer {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xceebf77a833b30520287ddd9478ff51abbdffa30aa90a8d655dba0e8a79ce0c1\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ScholarClaimer.sol\":93:396  contract ScholarPointClaimer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x379607f5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/ScholarClaimer.sol\":304:393  function claim(uint256 amount) external {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/ScholarClaimer.sol\":129:164  ScholarPoint public immutable token */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ScholarClaimer.sol\":304:393  function claim(uint256 amount) external {... */\n    tag_8:\n        /* \"contracts/ScholarClaimer.sol\":355:360  token */\n      immutable(\"0xceebf77a833b30520287ddd9478ff51abbdffa30aa90a8d655dba0e8a79ce0c1\")\n        /* \"contracts/ScholarClaimer.sol\":355:365  token.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"contracts/ScholarClaimer.sol\":366:376  msg.sender */\n      caller\n        /* \"contracts/ScholarClaimer.sol\":378:384  amount */\n      dup4\n        /* \"contracts/ScholarClaimer.sol\":355:385  token.mint(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_14\n      swap3\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_16\n      jumpi\n      revert(0x00, 0x00)\n    tag_16:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ScholarClaimer.sol\":304:393  function claim(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/ScholarClaimer.sol\":129:164  ScholarPoint public immutable token */\n    tag_10:\n      immutable(\"0xceebf77a833b30520287ddd9478ff51abbdffa30aa90a8d655dba0e8a79ce0c1\")\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_20:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_22:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_23:\n        /* \"#utility.yul\":490:514   */\n      tag_40\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_22\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_41\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_41:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_24:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_43\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_23\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_7:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_46\n      tag_20\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":766:885   */\n    tag_45:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_47\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_24\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_25:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1217   */\n    tag_26:\n        /* \"#utility.yul\":1185:1188   */\n      0x00\n        /* \"#utility.yul\":1206:1211   */\n      dup2\n        /* \"#utility.yul\":1199:1211   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1223:1365   */\n    tag_27:\n        /* \"#utility.yul\":1273:1282   */\n      0x00\n        /* \"#utility.yul\":1306:1359   */\n      tag_51\n        /* \"#utility.yul\":1324:1358   */\n      tag_52\n        /* \"#utility.yul\":1333:1357   */\n      tag_53\n        /* \"#utility.yul\":1351:1356   */\n      dup5\n        /* \"#utility.yul\":1333:1357   */\n      tag_25\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1324:1358   */\n      tag_26\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1306:1359   */\n      tag_25\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1293:1359   */\n      swap1\n      pop\n        /* \"#utility.yul\":1223:1365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1371:1497   */\n    tag_28:\n        /* \"#utility.yul\":1421:1430   */\n      0x00\n        /* \"#utility.yul\":1454:1491   */\n      tag_55\n        /* \"#utility.yul\":1485:1490   */\n      dup3\n        /* \"#utility.yul\":1454:1491   */\n      tag_27\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1441:1491   */\n      swap1\n      pop\n        /* \"#utility.yul\":1371:1497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1503:1648   */\n    tag_29:\n        /* \"#utility.yul\":1572:1581   */\n      0x00\n        /* \"#utility.yul\":1605:1642   */\n      tag_57\n        /* \"#utility.yul\":1636:1641   */\n      dup3\n        /* \"#utility.yul\":1605:1642   */\n      tag_28\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1592:1642   */\n      swap1\n      pop\n        /* \"#utility.yul\":1503:1648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1654:1823   */\n    tag_30:\n        /* \"#utility.yul\":1760:1816   */\n      tag_59\n        /* \"#utility.yul\":1810:1815   */\n      dup2\n        /* \"#utility.yul\":1760:1816   */\n      tag_29\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1755:1758   */\n      dup3\n        /* \"#utility.yul\":1748:1817   */\n      mstore\n        /* \"#utility.yul\":1654:1823   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1829:2089   */\n    tag_12:\n        /* \"#utility.yul\":1941:1945   */\n      0x00\n        /* \"#utility.yul\":1979:1981   */\n      0x20\n        /* \"#utility.yul\":1968:1977   */\n      dup3\n        /* \"#utility.yul\":1964:1982   */\n      add\n        /* \"#utility.yul\":1956:1982   */\n      swap1\n      pop\n        /* \"#utility.yul\":1992:2082   */\n      tag_61\n        /* \"#utility.yul\":2079:2080   */\n      0x00\n        /* \"#utility.yul\":2068:2077   */\n      dup4\n        /* \"#utility.yul\":2064:2081   */\n      add\n        /* \"#utility.yul\":2055:2061   */\n      dup5\n        /* \"#utility.yul\":1992:2082   */\n      tag_30\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1829:2089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2095:2191   */\n    tag_31:\n        /* \"#utility.yul\":2132:2139   */\n      0x00\n        /* \"#utility.yul\":2161:2185   */\n      tag_63\n        /* \"#utility.yul\":2179:2184   */\n      dup3\n        /* \"#utility.yul\":2161:2185   */\n      tag_25\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2150:2185   */\n      swap1\n      pop\n        /* \"#utility.yul\":2095:2191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2197:2315   */\n    tag_32:\n        /* \"#utility.yul\":2284:2308   */\n      tag_65\n        /* \"#utility.yul\":2302:2307   */\n      dup2\n        /* \"#utility.yul\":2284:2308   */\n      tag_31\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2279:2282   */\n      dup3\n        /* \"#utility.yul\":2272:2309   */\n      mstore\n        /* \"#utility.yul\":2197:2315   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2321:2439   */\n    tag_33:\n        /* \"#utility.yul\":2408:2432   */\n      tag_67\n        /* \"#utility.yul\":2426:2431   */\n      dup2\n        /* \"#utility.yul\":2408:2432   */\n      tag_22\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2403:2406   */\n      dup3\n        /* \"#utility.yul\":2396:2433   */\n      mstore\n        /* \"#utility.yul\":2321:2439   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2445:2777   */\n    tag_15:\n        /* \"#utility.yul\":2566:2570   */\n      0x00\n        /* \"#utility.yul\":2604:2606   */\n      0x40\n        /* \"#utility.yul\":2593:2602   */\n      dup3\n        /* \"#utility.yul\":2589:2607   */\n      add\n        /* \"#utility.yul\":2581:2607   */\n      swap1\n      pop\n        /* \"#utility.yul\":2617:2688   */\n      tag_69\n        /* \"#utility.yul\":2685:2686   */\n      0x00\n        /* \"#utility.yul\":2674:2683   */\n      dup4\n        /* \"#utility.yul\":2670:2687   */\n      add\n        /* \"#utility.yul\":2661:2667   */\n      dup6\n        /* \"#utility.yul\":2617:2688   */\n      tag_32\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2698:2770   */\n      tag_70\n        /* \"#utility.yul\":2766:2768   */\n      0x20\n        /* \"#utility.yul\":2755:2764   */\n      dup4\n        /* \"#utility.yul\":2751:2769   */\n      add\n        /* \"#utility.yul\":2742:2748   */\n      dup5\n        /* \"#utility.yul\":2698:2770   */\n      tag_33\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2445:2777   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d2f039b2dab1bd1b24b0cdfba61312349b95ff3994e50afa3a491ba8428fdcd864736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_ScholarPoint_$91_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ScholarPoint_$91_fromMemory": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ScholarPoint_$91": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ScholarPoint_$91": {
									"entryPoint": 176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1434:11",
										"nodeType": "YulBlock",
										"src": "0:1434:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "632:51:11",
													"nodeType": "YulBlock",
													"src": "632:51:11",
													"statements": [
														{
															"nativeSrc": "642:35:11",
															"nodeType": "YulAssignment",
															"src": "642:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "671:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "653:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "653:17:11"
																},
																"nativeSrc": "653:24:11",
																"nodeType": "YulFunctionCall",
																"src": "653:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "642:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ScholarPoint_$91",
												"nativeSrc": "568:115:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "614:5:11",
														"nodeType": "YulTypedName",
														"src": "614:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "624:7:11",
														"nodeType": "YulTypedName",
														"src": "624:7:11",
														"type": ""
													}
												],
												"src": "568:115:11"
											},
											{
												"body": {
													"nativeSrc": "751:98:11",
													"nodeType": "YulBlock",
													"src": "751:98:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "827:16:11",
																"nodeType": "YulBlock",
																"src": "827:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:11",
																					"nodeType": "YulLiteral",
																					"src": "836:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:1:11",
																					"nodeType": "YulLiteral",
																					"src": "839:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "829:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "829:6:11"
																			},
																			"nativeSrc": "829:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "829:12:11"
																		},
																		"nativeSrc": "829:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "829:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "774:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "774:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "818:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "818:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ScholarPoint_$91",
																					"nativeSrc": "781:36:11",
																					"nodeType": "YulIdentifier",
																					"src": "781:36:11"
																				},
																				"nativeSrc": "781:43:11",
																				"nodeType": "YulFunctionCall",
																				"src": "781:43:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "771:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:11"
																		},
																		"nativeSrc": "771:54:11",
																		"nodeType": "YulFunctionCall",
																		"src": "771:54:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "764:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:11"
																},
																"nativeSrc": "764:62:11",
																"nodeType": "YulFunctionCall",
																"src": "764:62:11"
															},
															"nativeSrc": "761:82:11",
															"nodeType": "YulIf",
															"src": "761:82:11"
														}
													]
												},
												"name": "validator_revert_t_contract$_ScholarPoint_$91",
												"nativeSrc": "689:160:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "744:5:11",
														"nodeType": "YulTypedName",
														"src": "744:5:11",
														"type": ""
													}
												],
												"src": "689:160:11"
											},
											{
												"body": {
													"nativeSrc": "937:99:11",
													"nodeType": "YulBlock",
													"src": "937:99:11",
													"statements": [
														{
															"nativeSrc": "947:22:11",
															"nodeType": "YulAssignment",
															"src": "947:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "962:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "956:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "956:5:11"
																},
																"nativeSrc": "956:13:11",
																"nodeType": "YulFunctionCall",
																"src": "956:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "947:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "947:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ScholarPoint_$91",
																	"nativeSrc": "978:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "978:45:11"
																},
																"nativeSrc": "978:52:11",
																"nodeType": "YulFunctionCall",
																"src": "978:52:11"
															},
															"nativeSrc": "978:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "978:52:11"
														}
													]
												},
												"name": "abi_decode_t_contract$_ScholarPoint_$91_fromMemory",
												"nativeSrc": "855:181:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "915:6:11",
														"nodeType": "YulTypedName",
														"src": "915:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "923:3:11",
														"nodeType": "YulTypedName",
														"src": "923:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "931:5:11",
														"nodeType": "YulTypedName",
														"src": "931:5:11",
														"type": ""
													}
												],
												"src": "855:181:11"
											},
											{
												"body": {
													"nativeSrc": "1138:293:11",
													"nodeType": "YulBlock",
													"src": "1138:293:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1184:83:11",
																"nodeType": "YulBlock",
																"src": "1184:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1186:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1186:77:11"
																			},
																			"nativeSrc": "1186:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1186:79:11"
																		},
																		"nativeSrc": "1186:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1186:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1159:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1159:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1168:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1168:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1155:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1155:3:11"
																		},
																		"nativeSrc": "1155:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1155:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1180:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1180:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1151:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1151:3:11"
																},
																"nativeSrc": "1151:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1151:32:11"
															},
															"nativeSrc": "1148:119:11",
															"nodeType": "YulIf",
															"src": "1148:119:11"
														},
														{
															"nativeSrc": "1277:147:11",
															"nodeType": "YulBlock",
															"src": "1277:147:11",
															"statements": [
																{
																	"nativeSrc": "1292:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1292:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1306:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1296:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1296:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1321:93:11",
																	"nodeType": "YulAssignment",
																	"src": "1321:93:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1386:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1386:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1397:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1397:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1382:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1382:3:11"
																				},
																				"nativeSrc": "1382:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1382:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1406:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1406:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ScholarPoint_$91_fromMemory",
																			"nativeSrc": "1331:50:11",
																			"nodeType": "YulIdentifier",
																			"src": "1331:50:11"
																		},
																		"nativeSrc": "1331:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1331:83:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1321:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1321:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ScholarPoint_$91_fromMemory",
												"nativeSrc": "1042:389:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1108:9:11",
														"nodeType": "YulTypedName",
														"src": "1108:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1119:7:11",
														"nodeType": "YulTypedName",
														"src": "1119:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1131:6:11",
														"nodeType": "YulTypedName",
														"src": "1131:6:11",
														"type": ""
													}
												],
												"src": "1042:389:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ScholarPoint_$91(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ScholarPoint_$91(value) {\n        if iszero(eq(value, cleanup_t_contract$_ScholarPoint_$91(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ScholarPoint_$91_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ScholarPoint_$91(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ScholarPoint_$91_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ScholarPoint_$91_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b506040516103c43803806103c4833981810160405281019061003191906100da565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050610105565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100988261006f565b9050919050565b5f6100a98261008e565b9050919050565b6100b98161009f565b81146100c3575f5ffd5b50565b5f815190506100d4816100b0565b92915050565b5f602082840312156100ef576100ee61006b565b5b5f6100fc848285016100c6565b91505092915050565b6080516102a26101225f395f81816074015260ff01526102a25ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063379607f514610038578063fc0c546a14610054575b5f5ffd5b610052600480360381019061004d9190610158565b610072565b005b61005c6100fd565b60405161006991906101fd565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016100cd929190610245565b5f604051808303815f87803b1580156100e4575f5ffd5b505af11580156100f6573d5f5f3e3d5ffd5b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5ffd5b5f819050919050565b61013781610125565b8114610141575f5ffd5b50565b5f813590506101528161012e565b92915050565b5f6020828403121561016d5761016c610121565b5b5f61017a84828501610144565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6101c56101c06101bb84610183565b6101a2565b610183565b9050919050565b5f6101d6826101ab565b9050919050565b5f6101e7826101cc565b9050919050565b6101f7816101dd565b82525050565b5f6020820190506102105f8301846101ee565b92915050565b5f61022082610183565b9050919050565b61023081610216565b82525050565b61023f81610125565b82525050565b5f6040820190506102585f830185610227565b6102656020830184610236565b939250505056fea2646970667358221220d2f039b2dab1bd1b24b0cdfba61312349b95ff3994e50afa3a491ba8428fdcd864736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3C4 CODESIZE SUB DUP1 PUSH2 0x3C4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xDA JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x105 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98 DUP3 PUSH2 0x6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA9 DUP3 PUSH2 0x8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9 DUP2 PUSH2 0x9F JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD4 DUP2 PUSH2 0xB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF JUMPI PUSH2 0xEE PUSH2 0x6B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2A2 PUSH2 0x122 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH1 0x74 ADD MSTORE PUSH1 0xFF ADD MSTORE PUSH2 0x2A2 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x379607F5 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x54 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x72 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69 SWAP2 SWAP1 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD SWAP3 SWAP2 SWAP1 PUSH2 0x245 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137 DUP2 PUSH2 0x125 JUMP JUMPDEST DUP2 EQ PUSH2 0x141 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152 DUP2 PUSH2 0x12E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D JUMPI PUSH2 0x16C PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A DUP5 DUP3 DUP6 ADD PUSH2 0x144 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C5 PUSH2 0x1C0 PUSH2 0x1BB DUP5 PUSH2 0x183 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D6 DUP3 PUSH2 0x1AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7 DUP3 PUSH2 0x1CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F7 DUP2 PUSH2 0x1DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x210 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x220 DUP3 PUSH2 0x183 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x230 DUP2 PUSH2 0x216 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x23F DUP2 PUSH2 0x125 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x258 PUSH0 DUP4 ADD DUP6 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x265 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x236 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 CREATE CODECOPY 0xB2 0xDA 0xB1 0xBD SHL 0x24 0xB0 0xCD EXTSTATICCALL 0xA6 SGT SLT CALLVALUE SWAP12 SWAP6 SELFDESTRUCT CODECOPY SWAP5 JUMPF 0xAFA GASPRICE BLOBHASH SHL 0xA8 TIMESTAMP DUP16 0xDC 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "93:303:0:-:0;;;171:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;214:6;206:14;;;;;;;;;;171:52;93:303;;88:117:11;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:115::-;624:7;653:24;671:5;653:24;:::i;:::-;642:35;;568:115;;;:::o;689:160::-;781:43;818:5;781:43;:::i;:::-;774:5;771:54;761:82;;839:1;836;829:12;761:82;689:160;:::o;855:181::-;931:5;962:6;956:13;947:22;;978:52;1024:5;978:52;:::i;:::-;855:181;;;;:::o;1042:389::-;1131:6;1180:2;1168:9;1159:7;1155:23;1151:32;1148:119;;;1186:79;;:::i;:::-;1148:119;1306:1;1331:83;1406:7;1397:6;1386:9;1382:22;1331:83;:::i;:::-;1321:93;;1277:147;1042:389;;;;:::o;93:303:0:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@claim_31": {
									"entryPoint": 114,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@token_5": {
									"entryPoint": 253,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ScholarPoint_$91_to_t_address_fromStack": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ScholarPoint_$91__to_t_address__fromStack_reversed": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ScholarPoint_$91_to_t_address": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2780:11",
										"nodeType": "YulBlock",
										"src": "0:2780:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:32:11",
													"nodeType": "YulBlock",
													"src": "379:32:11",
													"statements": [
														{
															"nativeSrc": "389:16:11",
															"nodeType": "YulAssignment",
															"src": "389:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:11",
																"nodeType": "YulIdentifier",
																"src": "400:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:77:11"
											},
											{
												"body": {
													"nativeSrc": "460:79:11",
													"nodeType": "YulBlock",
													"src": "460:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:11",
																"nodeType": "YulBlock",
																"src": "517:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:11",
																					"nodeType": "YulLiteral",
																					"src": "526:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:11",
																					"nodeType": "YulLiteral",
																					"src": "529:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:11"
																			},
																			"nativeSrc": "519:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:11"
																		},
																		"nativeSrc": "519:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:11"
																				},
																				"nativeSrc": "490:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:11"
																		},
																		"nativeSrc": "480:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:11"
																},
																"nativeSrc": "473:43:11",
																"nodeType": "YulFunctionCall",
																"src": "473:43:11"
															},
															"nativeSrc": "470:63:11",
															"nodeType": "YulIf",
															"src": "470:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:11",
														"nodeType": "YulTypedName",
														"src": "453:5:11",
														"type": ""
													}
												],
												"src": "417:122:11"
											},
											{
												"body": {
													"nativeSrc": "597:87:11",
													"nodeType": "YulBlock",
													"src": "597:87:11",
													"statements": [
														{
															"nativeSrc": "607:29:11",
															"nodeType": "YulAssignment",
															"src": "607:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:11"
																},
																"nativeSrc": "616:20:11",
																"nodeType": "YulFunctionCall",
																"src": "616:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:11"
																},
																"nativeSrc": "645:33:11",
																"nodeType": "YulFunctionCall",
																"src": "645:33:11"
															},
															"nativeSrc": "645:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:11",
														"nodeType": "YulTypedName",
														"src": "575:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:11",
														"nodeType": "YulTypedName",
														"src": "583:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:11",
														"nodeType": "YulTypedName",
														"src": "591:5:11",
														"type": ""
													}
												],
												"src": "545:139:11"
											},
											{
												"body": {
													"nativeSrc": "756:263:11",
													"nodeType": "YulBlock",
													"src": "756:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:11",
																"nodeType": "YulBlock",
																"src": "802:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:11"
																			},
																			"nativeSrc": "804:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:11"
																		},
																		"nativeSrc": "804:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:11"
																		},
																		"nativeSrc": "773:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:11",
																		"nodeType": "YulLiteral",
																		"src": "798:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:11"
																},
																"nativeSrc": "769:32:11",
																"nodeType": "YulFunctionCall",
																"src": "769:32:11"
															},
															"nativeSrc": "766:119:11",
															"nodeType": "YulIf",
															"src": "766:119:11"
														},
														{
															"nativeSrc": "895:117:11",
															"nodeType": "YulBlock",
															"src": "895:117:11",
															"statements": [
																{
																	"nativeSrc": "910:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:11",
																		"nodeType": "YulLiteral",
																		"src": "924:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:11",
																			"nodeType": "YulTypedName",
																			"src": "914:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:11",
																	"nodeType": "YulAssignment",
																	"src": "939:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:11"
																				},
																				"nativeSrc": "970:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:11"
																		},
																		"nativeSrc": "949:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:11",
														"nodeType": "YulTypedName",
														"src": "726:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:11",
														"nodeType": "YulTypedName",
														"src": "737:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:11",
														"nodeType": "YulTypedName",
														"src": "749:6:11",
														"type": ""
													}
												],
												"src": "690:329:11"
											},
											{
												"body": {
													"nativeSrc": "1070:81:11",
													"nodeType": "YulBlock",
													"src": "1070:81:11",
													"statements": [
														{
															"nativeSrc": "1080:65:11",
															"nodeType": "YulAssignment",
															"src": "1080:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:11",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:11"
																},
																"nativeSrc": "1091:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:11",
														"nodeType": "YulTypedName",
														"src": "1052:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:11",
														"nodeType": "YulTypedName",
														"src": "1062:7:11",
														"type": ""
													}
												],
												"src": "1025:126:11"
											},
											{
												"body": {
													"nativeSrc": "1189:28:11",
													"nodeType": "YulBlock",
													"src": "1189:28:11",
													"statements": [
														{
															"nativeSrc": "1199:12:11",
															"nodeType": "YulAssignment",
															"src": "1199:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "1206:5:11",
																"nodeType": "YulIdentifier",
																"src": "1206:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1199:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1199:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1157:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1175:5:11",
														"nodeType": "YulTypedName",
														"src": "1175:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1185:3:11",
														"nodeType": "YulTypedName",
														"src": "1185:3:11",
														"type": ""
													}
												],
												"src": "1157:60:11"
											},
											{
												"body": {
													"nativeSrc": "1283:82:11",
													"nodeType": "YulBlock",
													"src": "1283:82:11",
													"statements": [
														{
															"nativeSrc": "1293:66:11",
															"nodeType": "YulAssignment",
															"src": "1293:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1351:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1351:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1333:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1333:17:11"
																				},
																				"nativeSrc": "1333:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1333:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1324:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "1324:8:11"
																		},
																		"nativeSrc": "1324:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1324:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1306:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1306:17:11"
																},
																"nativeSrc": "1306:53:11",
																"nodeType": "YulFunctionCall",
																"src": "1306:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1293:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "1293:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1223:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1263:5:11",
														"nodeType": "YulTypedName",
														"src": "1263:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1273:9:11",
														"nodeType": "YulTypedName",
														"src": "1273:9:11",
														"type": ""
													}
												],
												"src": "1223:142:11"
											},
											{
												"body": {
													"nativeSrc": "1431:66:11",
													"nodeType": "YulBlock",
													"src": "1431:66:11",
													"statements": [
														{
															"nativeSrc": "1441:50:11",
															"nodeType": "YulAssignment",
															"src": "1441:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1485:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1485:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1454:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "1454:30:11"
																},
																"nativeSrc": "1454:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1454:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1441:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "1441:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1371:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:11",
														"nodeType": "YulTypedName",
														"src": "1411:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1421:9:11",
														"nodeType": "YulTypedName",
														"src": "1421:9:11",
														"type": ""
													}
												],
												"src": "1371:126:11"
											},
											{
												"body": {
													"nativeSrc": "1582:66:11",
													"nodeType": "YulBlock",
													"src": "1582:66:11",
													"statements": [
														{
															"nativeSrc": "1592:50:11",
															"nodeType": "YulAssignment",
															"src": "1592:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1636:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1636:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1605:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "1605:30:11"
																},
																"nativeSrc": "1605:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1605:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1592:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "1592:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ScholarPoint_$91_to_t_address",
												"nativeSrc": "1503:145:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1562:5:11",
														"nodeType": "YulTypedName",
														"src": "1562:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1572:9:11",
														"nodeType": "YulTypedName",
														"src": "1572:9:11",
														"type": ""
													}
												],
												"src": "1503:145:11"
											},
											{
												"body": {
													"nativeSrc": "1738:85:11",
													"nodeType": "YulBlock",
													"src": "1738:85:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1755:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1755:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1810:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1810:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ScholarPoint_$91_to_t_address",
																			"nativeSrc": "1760:49:11",
																			"nodeType": "YulIdentifier",
																			"src": "1760:49:11"
																		},
																		"nativeSrc": "1760:56:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1760:56:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1748:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1748:6:11"
																},
																"nativeSrc": "1748:69:11",
																"nodeType": "YulFunctionCall",
																"src": "1748:69:11"
															},
															"nativeSrc": "1748:69:11",
															"nodeType": "YulExpressionStatement",
															"src": "1748:69:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_ScholarPoint_$91_to_t_address_fromStack",
												"nativeSrc": "1654:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1726:5:11",
														"nodeType": "YulTypedName",
														"src": "1726:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1733:3:11",
														"nodeType": "YulTypedName",
														"src": "1733:3:11",
														"type": ""
													}
												],
												"src": "1654:169:11"
											},
											{
												"body": {
													"nativeSrc": "1946:143:11",
													"nodeType": "YulBlock",
													"src": "1946:143:11",
													"statements": [
														{
															"nativeSrc": "1956:26:11",
															"nodeType": "YulAssignment",
															"src": "1956:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1968:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1968:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1979:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1979:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1964:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1964:3:11"
																},
																"nativeSrc": "1964:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1964:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1956:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1956:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2055:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2055:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2068:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2068:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2079:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2079:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2064:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2064:3:11"
																		},
																		"nativeSrc": "2064:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2064:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ScholarPoint_$91_to_t_address_fromStack",
																	"nativeSrc": "1992:62:11",
																	"nodeType": "YulIdentifier",
																	"src": "1992:62:11"
																},
																"nativeSrc": "1992:90:11",
																"nodeType": "YulFunctionCall",
																"src": "1992:90:11"
															},
															"nativeSrc": "1992:90:11",
															"nodeType": "YulExpressionStatement",
															"src": "1992:90:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ScholarPoint_$91__to_t_address__fromStack_reversed",
												"nativeSrc": "1829:260:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1918:9:11",
														"nodeType": "YulTypedName",
														"src": "1918:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1930:6:11",
														"nodeType": "YulTypedName",
														"src": "1930:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1941:4:11",
														"nodeType": "YulTypedName",
														"src": "1941:4:11",
														"type": ""
													}
												],
												"src": "1829:260:11"
											},
											{
												"body": {
													"nativeSrc": "2140:51:11",
													"nodeType": "YulBlock",
													"src": "2140:51:11",
													"statements": [
														{
															"nativeSrc": "2150:35:11",
															"nodeType": "YulAssignment",
															"src": "2150:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2179:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2179:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2161:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2161:17:11"
																},
																"nativeSrc": "2161:24:11",
																"nodeType": "YulFunctionCall",
																"src": "2161:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2150:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2150:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2095:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2122:5:11",
														"nodeType": "YulTypedName",
														"src": "2122:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2132:7:11",
														"nodeType": "YulTypedName",
														"src": "2132:7:11",
														"type": ""
													}
												],
												"src": "2095:96:11"
											},
											{
												"body": {
													"nativeSrc": "2262:53:11",
													"nodeType": "YulBlock",
													"src": "2262:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2279:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2279:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2302:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2302:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2284:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2284:17:11"
																		},
																		"nativeSrc": "2284:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2284:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2272:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:11"
																},
																"nativeSrc": "2272:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2272:37:11"
															},
															"nativeSrc": "2272:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "2272:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2197:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2250:5:11",
														"nodeType": "YulTypedName",
														"src": "2250:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2257:3:11",
														"nodeType": "YulTypedName",
														"src": "2257:3:11",
														"type": ""
													}
												],
												"src": "2197:118:11"
											},
											{
												"body": {
													"nativeSrc": "2386:53:11",
													"nodeType": "YulBlock",
													"src": "2386:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2403:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2403:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2426:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2426:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2408:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2408:17:11"
																		},
																		"nativeSrc": "2408:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2408:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2396:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:11"
																},
																"nativeSrc": "2396:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2396:37:11"
															},
															"nativeSrc": "2396:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "2396:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2321:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2374:5:11",
														"nodeType": "YulTypedName",
														"src": "2374:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2381:3:11",
														"nodeType": "YulTypedName",
														"src": "2381:3:11",
														"type": ""
													}
												],
												"src": "2321:118:11"
											},
											{
												"body": {
													"nativeSrc": "2571:206:11",
													"nodeType": "YulBlock",
													"src": "2571:206:11",
													"statements": [
														{
															"nativeSrc": "2581:26:11",
															"nodeType": "YulAssignment",
															"src": "2581:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2593:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2593:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2604:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2604:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2589:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2589:3:11"
																},
																"nativeSrc": "2589:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2589:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2581:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2581:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2661:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2661:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2674:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2674:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2685:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2685:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2670:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2670:3:11"
																		},
																		"nativeSrc": "2670:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2670:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2617:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2617:43:11"
																},
																"nativeSrc": "2617:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2617:71:11"
															},
															"nativeSrc": "2617:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "2617:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2742:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2742:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2755:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2755:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2766:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2766:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2751:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2751:3:11"
																		},
																		"nativeSrc": "2751:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2751:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2698:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2698:43:11"
																},
																"nativeSrc": "2698:72:11",
																"nodeType": "YulFunctionCall",
																"src": "2698:72:11"
															},
															"nativeSrc": "2698:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "2698:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2445:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2535:9:11",
														"nodeType": "YulTypedName",
														"src": "2535:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2547:6:11",
														"nodeType": "YulTypedName",
														"src": "2547:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2555:6:11",
														"nodeType": "YulTypedName",
														"src": "2555:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2566:4:11",
														"nodeType": "YulTypedName",
														"src": "2566:4:11",
														"type": ""
													}
												],
												"src": "2445:332:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ScholarPoint_$91_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ScholarPoint_$91_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ScholarPoint_$91_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ScholarPoint_$91__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ScholarPoint_$91_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"5": [
									{
										"length": 32,
										"start": 116
									},
									{
										"length": 32,
										"start": 255
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063379607f514610038578063fc0c546a14610054575b5f5ffd5b610052600480360381019061004d9190610158565b610072565b005b61005c6100fd565b60405161006991906101fd565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016100cd929190610245565b5f604051808303815f87803b1580156100e4575f5ffd5b505af11580156100f6573d5f5f3e3d5ffd5b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5ffd5b5f819050919050565b61013781610125565b8114610141575f5ffd5b50565b5f813590506101528161012e565b92915050565b5f6020828403121561016d5761016c610121565b5b5f61017a84828501610144565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6101c56101c06101bb84610183565b6101a2565b610183565b9050919050565b5f6101d6826101ab565b9050919050565b5f6101e7826101cc565b9050919050565b6101f7816101dd565b82525050565b5f6020820190506102105f8301846101ee565b92915050565b5f61022082610183565b9050919050565b61023081610216565b82525050565b61023f81610125565b82525050565b5f6040820190506102585f830185610227565b6102656020830184610236565b939250505056fea2646970667358221220d2f039b2dab1bd1b24b0cdfba61312349b95ff3994e50afa3a491ba8428fdcd864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x379607F5 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x54 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x72 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69 SWAP2 SWAP1 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD SWAP3 SWAP2 SWAP1 PUSH2 0x245 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137 DUP2 PUSH2 0x125 JUMP JUMPDEST DUP2 EQ PUSH2 0x141 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x152 DUP2 PUSH2 0x12E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D JUMPI PUSH2 0x16C PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A DUP5 DUP3 DUP6 ADD PUSH2 0x144 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C5 PUSH2 0x1C0 PUSH2 0x1BB DUP5 PUSH2 0x183 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D6 DUP3 PUSH2 0x1AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7 DUP3 PUSH2 0x1CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F7 DUP2 PUSH2 0x1DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x210 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x220 DUP3 PUSH2 0x183 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x230 DUP2 PUSH2 0x216 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x23F DUP2 PUSH2 0x125 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x258 PUSH0 DUP4 ADD DUP6 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x265 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x236 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 CREATE CODECOPY 0xB2 0xDA 0xB1 0xBD SHL 0x24 0xB0 0xCD EXTSTATICCALL 0xA6 SGT SLT CALLVALUE SWAP12 SWAP6 SELFDESTRUCT CODECOPY SWAP5 JUMPF 0xAFA GASPRICE BLOBHASH SHL 0xA8 TIMESTAMP DUP16 0xDC 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "93:303:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:89;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;129:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;304:89;355:5;:10;;;366;378:6;355:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:89;:::o;129:35::-;;;:::o;88:117:11:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:60::-;1185:3;1206:5;1199:12;;1157:60;;;:::o;1223:142::-;1273:9;1306:53;1324:34;1333:24;1351:5;1333:24;:::i;:::-;1324:34;:::i;:::-;1306:53;:::i;:::-;1293:66;;1223:142;;;:::o;1371:126::-;1421:9;1454:37;1485:5;1454:37;:::i;:::-;1441:50;;1371:126;;;:::o;1503:145::-;1572:9;1605:37;1636:5;1605:37;:::i;:::-;1592:50;;1503:145;;;:::o;1654:169::-;1760:56;1810:5;1760:56;:::i;:::-;1755:3;1748:69;1654:169;;:::o;1829:260::-;1941:4;1979:2;1968:9;1964:18;1956:26;;1992:90;2079:1;2068:9;2064:17;2055:6;1992:90;:::i;:::-;1829:260;;;;:::o;2095:96::-;2132:7;2161:24;2179:5;2161:24;:::i;:::-;2150:35;;2095:96;;;:::o;2197:118::-;2284:24;2302:5;2284:24;:::i;:::-;2279:3;2272:37;2197:118;;:::o;2321:::-;2408:24;2426:5;2408:24;:::i;:::-;2403:3;2396:37;2321:118;;:::o;2445:332::-;2566:4;2604:2;2593:9;2589:18;2581:26;;2617:71;2685:1;2674:9;2670:17;2661:6;2617:71;:::i;:::-;2698:72;2766:2;2755:9;2751:18;2742:6;2698:72;:::i;:::-;2445:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "134800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claim(uint256)": "infinite",
								"token()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 396,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 93,
									"end": 396,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 93,
									"end": 396,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 171,
									"end": 223,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 223,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 223,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 171,
									"end": 223,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 171,
									"end": 223,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 171,
									"end": 223,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 171,
									"end": 223,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 171,
									"end": 223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 171,
									"end": 223,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 214,
									"end": 220,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 206,
									"end": 220,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 206,
									"end": 220,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 206,
									"end": 220,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 206,
									"end": 220,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 206,
									"end": 220,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 206,
									"end": 220,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 206,
									"end": 220,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 206,
									"end": 220,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 206,
									"end": 220,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 206,
									"end": 220,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 171,
									"end": 223,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 93,
									"end": 396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 93,
									"end": 396,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 683,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 683,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 624,
									"end": 631,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 653,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 653,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 653,
									"end": 677,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 653,
									"end": 677,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 642,
									"end": 677,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 642,
									"end": 677,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 568,
									"end": 683,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 568,
									"end": 683,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 689,
									"end": 849,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 689,
									"end": 849,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 818,
									"end": 823,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 781,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 781,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 781,
									"end": 824,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 824,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 771,
									"end": 825,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 761,
									"end": 843,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 839,
									"end": 840,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 829,
									"end": 841,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 761,
									"end": 843,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 761,
									"end": 843,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 689,
									"end": 849,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 689,
									"end": 849,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 931,
									"end": 936,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 968,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 956,
									"end": 969,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 947,
									"end": 969,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 947,
									"end": 969,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 1024,
									"end": 1029,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 978,
									"end": 1030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 978,
									"end": 1030,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 855,
									"end": 1036,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 855,
									"end": 1036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1131,
									"end": 1137,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1159,
									"end": 1166,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1155,
									"end": 1178,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1183,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 1186,
									"end": 1265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1186,
									"end": 1265,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1148,
									"end": 1267,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1406,
									"end": 1413,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1397,
									"end": 1403,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1386,
									"end": 1395,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1382,
									"end": 1404,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 1331,
									"end": 1414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1331,
									"end": 1414,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1321,
									"end": 1414,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1321,
									"end": 1414,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1277,
									"end": 1424,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1042,
									"end": 1431,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1042,
									"end": 1431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 93,
									"end": 396,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 93,
									"end": 396,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 93,
									"end": 396,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 93,
									"end": 396,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 93,
									"end": 396,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 396,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 396,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 396,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 93,
									"end": 396,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 396,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 93,
									"end": 396,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 396,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 396,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d2f039b2dab1bd1b24b0cdfba61312349b95ff3994e50afa3a491ba8428fdcd864736f6c634300081e0033",
									".code": [
										{
											"begin": 93,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "379607F5"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "FC0C546A"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 304,
											"end": 393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 304,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 304,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 304,
											"end": 393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 304,
											"end": 393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 304,
											"end": 393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 304,
											"end": 393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 304,
											"end": 393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 129,
											"end": 164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 129,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 129,
											"end": 164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 129,
											"end": 164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 129,
											"end": 164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 129,
											"end": 164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 129,
											"end": 164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 304,
											"end": 393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 360,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 355,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 355,
											"end": 365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 355,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 366,
											"end": 376,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 378,
											"end": 384,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 355,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 129,
											"end": 164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 129,
											"end": 164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 129,
											"end": 164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1188,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1199,
											"end": 1211,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1199,
											"end": 1211,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1157,
											"end": 1217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1282,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1333,
											"end": 1357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1333,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1324,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1324,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1306,
											"end": 1359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1306,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1359,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1359,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1223,
											"end": 1365,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1223,
											"end": 1365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1485,
											"end": 1490,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1454,
											"end": 1491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1441,
											"end": 1491,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1441,
											"end": 1491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1371,
											"end": 1497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1371,
											"end": 1497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1503,
											"end": 1648,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1503,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1581,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1636,
											"end": 1641,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1605,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 1605,
											"end": 1642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1605,
											"end": 1642,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1605,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1642,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1592,
											"end": 1642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1503,
											"end": 1648,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1503,
											"end": 1648,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1503,
											"end": 1648,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1503,
											"end": 1648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1823,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1654,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1760,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1760,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1760,
											"end": 1816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1760,
											"end": 1816,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1760,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1758,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1748,
											"end": 1817,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1823,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1823,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 2089,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1829,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1941,
											"end": 1945,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1981,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1956,
											"end": 1982,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1956,
											"end": 1982,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1992,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2079,
											"end": 2080,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2077,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2055,
											"end": 2061,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1992,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1992,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1992,
											"end": 2082,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1992,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 2089,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 2089,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 2089,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 2089,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2095,
											"end": 2191,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 2095,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2132,
											"end": 2139,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2179,
											"end": 2184,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 2161,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2185,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2161,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2150,
											"end": 2185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2150,
											"end": 2185,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2095,
											"end": 2191,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2095,
											"end": 2191,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2095,
											"end": 2191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2095,
											"end": 2191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2315,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2197,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2284,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2302,
											"end": 2307,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2284,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 2284,
											"end": 2308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2284,
											"end": 2308,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2284,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2279,
											"end": 2282,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2309,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2315,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2315,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2321,
											"end": 2439,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 2321,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2408,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2426,
											"end": 2431,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2408,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 2408,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2408,
											"end": 2432,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2408,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2403,
											"end": 2406,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2396,
											"end": 2433,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2321,
											"end": 2439,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2321,
											"end": 2439,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2321,
											"end": 2439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2445,
											"end": 2777,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 2445,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2566,
											"end": 2570,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2606,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2593,
											"end": 2602,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2607,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2607,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2685,
											"end": 2686,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2683,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2687,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2661,
											"end": 2667,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2617,
											"end": 2688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2688,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2617,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2766,
											"end": 2768,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2755,
											"end": 2764,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2769,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 2698,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2770,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2698,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2445,
											"end": 2777,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2445,
											"end": 2777,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2445,
											"end": 2777,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2445,
											"end": 2777,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2445,
											"end": 2777,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2445,
											"end": 2777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/ScholarClaimer.sol",
								"contracts/ScholarPoint.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/IAccessControl.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/IERC20.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claim(uint256)": "379607f5",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ScholarPoint\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ScholarPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(uint256)\":{\"notice\":\"G\\u1ecdi k\\u00e8m amount \\u0111\\u1ec3 mint \\u0111\\u00fang amount token cho msg.sender\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ScholarClaimer.sol\":\"ScholarPointClaimer\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ScholarClaimer.sol\":{\"keccak256\":\"0x749b7ff43c2cbbb3bc1931924f54e26f4606484bcfd9c82a2e8ffd4671d55f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d472ddf2946b76b91c088c2acd298b34d016a0e545f6246a582386d6e23b3a\",\"dweb:/ipfs/QmXZw2wXyArzx3Cb9B8jg9gwR6ZAyzpAYStxoNvaZ4YZji\"]},\"contracts/ScholarPoint.sol\":{\"keccak256\":\"0xd9050e07c47cad759ba2c74974011a926f1be952541f11ac0f753bc26c29a0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1336480bc7e28c23342fdc1fda50e7617fee980460485f42fc5465029708788\",\"dweb:/ipfs/QmNZpBXtgCzqBjffLtMbpxC14m66vJt4pbJrrTtYYYw1r5\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claim(uint256)": {
								"notice": "Gọi kèm amount để mint đúng amount token cho msg.sender"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/ScholarPoint.sol": {
				"ScholarPoint": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ScholarPoint.sol\":306:779  contract ScholarPoint is ERC20, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ScholarPoint.sol\":430:581  constructor() ERC20(\"Scholar Point\", \"SPT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  0x5363686f6c617220506f696e7400000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5350540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ScholarPoint.sol\":485:527  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_9\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"contracts/ScholarPoint.sol\":496:514  DEFAULT_ADMIN_ROLE */\n  0x00\n  shl\n    /* \"contracts/ScholarPoint.sol\":516:526  msg.sender */\n  caller\n    /* \"contracts/ScholarPoint.sol\":485:495  _grantRole */\n  shl(0x20, tag_10)\n    /* \"contracts/ScholarPoint.sol\":485:527  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/ScholarPoint.sol\":538:573  _grantRole(MINTER_ROLE, msg.sender) */\n  tag_11\n    /* \"contracts/ScholarPoint.sol\":397:421  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"contracts/ScholarPoint.sol\":562:572  msg.sender */\n  caller\n    /* \"contracts/ScholarPoint.sol\":538:548  _grantRole */\n  shl(0x20, tag_10)\n    /* \"contracts/ScholarPoint.sol\":538:573  _grantRole(MINTER_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/ScholarPoint.sol\":306:779  contract ScholarPoint is ERC20, AccessControl {... */\n  jump(tag_12)\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_10:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  tag_14\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6261:6265  role */\n  dup4\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6267:6274  account */\n  dup4\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n  shl(0x20, tag_15)\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_16\n  jumpi\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x05\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6298:6302  role */\n  dup6\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n  0x00\n  add\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6312:6319  account */\n  dup5\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_17\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n  shl(0x20, tag_18)\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  pop\n  jump(tag_13)\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_16:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_13:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_15:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2907:2911  bool */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  0x05\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2937:2941  role */\n  dup5\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n  0x00\n  add\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2951:2958  account */\n  dup4\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_18:\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_22:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_23:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_24:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_25:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_47:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_49\n  tag_24\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":714:798   */\ntag_48:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_26:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_27:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_28:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_29:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_54\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_28\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1429:1468   */\n  tag_55\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_30:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_31:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_32:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_59\n    /* \"#utility.yul\":1818:1852   */\n  tag_60\n    /* \"#utility.yul\":1827:1851   */\n  tag_61\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_30\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1818:1852   */\n  tag_31\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1800:1853   */\n  tag_30\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_33:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_34:\n    /* \"#utility.yul\":2056:2095   */\n  tag_64\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_32\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2117:2208   */\n  tag_65\n    /* \"#utility.yul\":2166:2207   */\n  tag_66\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_33\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_35:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_36:\n    /* \"#utility.yul\":2377:2409   */\n  tag_69\n  tag_35\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2418:2483   */\n  tag_70\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_34\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_37:\n    /* \"#utility.yul\":2555:2675   */\ntag_72:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_75\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_36\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_72)\ntag_74:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_38:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_78\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_26\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2906:2935   */\n  tag_79\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_27\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_80:\n    /* \"#utility.yul\":3133:3213   */\n  tag_81\n    /* \"#utility.yul\":3189:3211   */\n  tag_82\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_27\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_37\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_77:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_39:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_40:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_85\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_39\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_41:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_87\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_40\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_89\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_22\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_91\n  tag_23\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4038:4094   */\ntag_90:\n    /* \"#utility.yul\":4118:4156   */\n  tag_92\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_25\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4203:4270   */\n  tag_93\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_38\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_95\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_96:\n    /* \"#utility.yul\":5144:5211   */\n  tag_97\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_41\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_94)\n    /* \"#utility.yul\":4365:4983   */\ntag_95:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_98\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_26\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_99:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_99)\ntag_101:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_103\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_40\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_102:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_94:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ScholarPoint.sol\":306:779  contract ScholarPoint is ERC20, AccessControl {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ScholarPoint.sol\":306:779  contract ScholarPoint is ERC20, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/ScholarPoint.sol\":706:776  function decimals() public pure override returns (uint8) { return 0; } */\n    tag_10:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_11:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/ScholarPoint.sol\":589:698  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_16:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ScholarPoint.sol\":359:421  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_18:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_27:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_99\n      jumpi\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_100\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_101\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_100:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_99:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_104\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_106)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_110\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_111\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_112\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_113\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_112:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_116\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_111\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_117\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_118\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_117:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_119\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_120\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_119:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_51:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x05\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_57:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_122\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_51\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_122:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_124\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_125\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_124:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_127\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_128\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_127:\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ScholarPoint.sol\":706:776  function decimals() public pure override returns (uint8) { return 0; } */\n    tag_59:\n        /* \"contracts/ScholarPoint.sol\":756:761  uint8 */\n      0x00\n        /* \"contracts/ScholarPoint.sol\":772:773  0 */\n      0x00\n        /* \"contracts/ScholarPoint.sol\":765:773  return 0 */\n      swap1\n      pop\n        /* \"contracts/ScholarPoint.sol\":706:776  function decimals() public pure override returns (uint8) { return 0; } */\n      swap1\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_64:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_131\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_111\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_132\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_132:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_133\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_134\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_133:\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ScholarPoint.sol\":589:698  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {... */\n    tag_67:\n        /* \"contracts/ScholarPoint.sol\":397:421  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_136\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_125\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/ScholarPoint.sol\":673:690  _mint(to, amount) */\n      tag_138\n        /* \"contracts/ScholarPoint.sol\":679:681  to */\n      dup4\n        /* \"contracts/ScholarPoint.sol\":683:689  amount */\n      dup4\n        /* \"contracts/ScholarPoint.sol\":673:678  _mint */\n      tag_139\n        /* \"contracts/ScholarPoint.sol\":673:690  _mint(to, amount) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/ScholarPoint.sol\":589:698  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_75:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x05\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_78:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_143\n      swap1\n      tag_104\n      jump\t// in\n    tag_143:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_104\n      jump\t// in\n    tag_144:\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_146\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_145)\n    tag_146:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_147:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_147\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_81:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_85:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_149\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_111\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_150\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_120\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_150:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ScholarPoint.sol\":359:421  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_88:\n        /* \"contracts/ScholarPoint.sol\":397:421  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/ScholarPoint.sol\":359:421  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_92:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_151\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_51\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_151:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_153\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_125\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_153:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_155\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_134\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_155:\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_96:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_101:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_111:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_113:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_160\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_161\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_160:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_118:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_163\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_96\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_163:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_165:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_168\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_161\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_168:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_164:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_120:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_170:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_173:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_175\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_176\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_175:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_125:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_178\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_179\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_111\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_180\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_178:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_128:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_182\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_75\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_182:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_183\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x05\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_184\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_111\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_181)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_183:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_181:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_134:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_187\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_75\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_187:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      0x05\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_189\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_111\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_186)\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_188:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_186:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n    tag_139:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n    tag_192:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      tag_194\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n      tag_176\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      jump\t// in\n    tag_194:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_161:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_196:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_198:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_201\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_200:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_176:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_206)\n    tag_203:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_207:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_206:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_210)\n    tag_209:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_210:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_180:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_213\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_75\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_213:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_214\n      jumpi\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_214:\n        /* \"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_218:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_220:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_221:\n        /* \"#utility.yul\":561:584   */\n      tag_253\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_220\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_254:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_222:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_256\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_221\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_259\n      tag_218\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":833:952   */\n    tag_258:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_260\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_222\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_223:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_224:\n        /* \"#utility.yul\":1268:1289   */\n      tag_263\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_223\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_265\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_224\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_225:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_226:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_227:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_228:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_229:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_271\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_225\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2222:2293   */\n      tag_272\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_226\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_273\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_227\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2392:2421   */\n      tag_274\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_228\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_33:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_276\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_229\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_230:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_231:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_279\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_230\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_232:\n        /* \"#utility.yul\":3060:3084   */\n      tag_281\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_231\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      0x00\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_282:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_233:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_284\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_232\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_234:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_235:\n        /* \"#utility.yul\":3416:3440   */\n      tag_287\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_234\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      0x00\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_288:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_236:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_290\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_235\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_36:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      0x00\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_293\n      tag_218\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3709:3828   */\n    tag_292:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_294\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_233\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_295\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_236\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4214   */\n    tag_237:\n        /* \"#utility.yul\":4183:4207   */\n      tag_297\n        /* \"#utility.yul\":4201:4206   */\n      dup2\n        /* \"#utility.yul\":4183:4207   */\n      tag_234\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4178:4181   */\n      dup3\n        /* \"#utility.yul\":4171:4208   */\n      mstore\n        /* \"#utility.yul\":4096:4214   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4220:4442   */\n    tag_42:\n        /* \"#utility.yul\":4313:4317   */\n      0x00\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4340:4349   */\n      dup3\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"#utility.yul\":4328:4354   */\n      swap1\n      pop\n        /* \"#utility.yul\":4364:4435   */\n      tag_299\n        /* \"#utility.yul\":4432:4433   */\n      0x00\n        /* \"#utility.yul\":4421:4430   */\n      dup4\n        /* \"#utility.yul\":4417:4434   */\n      add\n        /* \"#utility.yul\":4408:4414   */\n      dup5\n        /* \"#utility.yul\":4364:4435   */\n      tag_237\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4220:4442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:5067   */\n    tag_45:\n        /* \"#utility.yul\":4525:4531   */\n      0x00\n        /* \"#utility.yul\":4533:4539   */\n      0x00\n        /* \"#utility.yul\":4541:4547   */\n      0x00\n        /* \"#utility.yul\":4590:4592   */\n      0x60\n        /* \"#utility.yul\":4578:4587   */\n      dup5\n        /* \"#utility.yul\":4569:4576   */\n      dup7\n        /* \"#utility.yul\":4565:4588   */\n      sub\n        /* \"#utility.yul\":4561:4593   */\n      slt\n        /* \"#utility.yul\":4558:4677   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":4596:4675   */\n      tag_302\n      tag_218\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4558:4677   */\n    tag_301:\n        /* \"#utility.yul\":4716:4717   */\n      0x00\n        /* \"#utility.yul\":4741:4794   */\n      tag_303\n        /* \"#utility.yul\":4786:4793   */\n      dup7\n        /* \"#utility.yul\":4777:4783   */\n      dup3\n        /* \"#utility.yul\":4766:4775   */\n      dup8\n        /* \"#utility.yul\":4762:4784   */\n      add\n        /* \"#utility.yul\":4741:4794   */\n      tag_233\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4731:4794   */\n      swap4\n      pop\n        /* \"#utility.yul\":4687:4804   */\n      pop\n        /* \"#utility.yul\":4843:4845   */\n      0x20\n        /* \"#utility.yul\":4869:4922   */\n      tag_304\n        /* \"#utility.yul\":4914:4921   */\n      dup7\n        /* \"#utility.yul\":4905:4911   */\n      dup3\n        /* \"#utility.yul\":4894:4903   */\n      dup8\n        /* \"#utility.yul\":4890:4912   */\n      add\n        /* \"#utility.yul\":4869:4922   */\n      tag_233\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4859:4922   */\n      swap3\n      pop\n        /* \"#utility.yul\":4814:4932   */\n      pop\n        /* \"#utility.yul\":4971:4973   */\n      0x40\n        /* \"#utility.yul\":4997:5050   */\n      tag_305\n        /* \"#utility.yul\":5042:5049   */\n      dup7\n        /* \"#utility.yul\":5033:5039   */\n      dup3\n        /* \"#utility.yul\":5022:5031   */\n      dup8\n        /* \"#utility.yul\":5018:5040   */\n      add\n        /* \"#utility.yul\":4997:5050   */\n      tag_236\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4987:5050   */\n      swap2\n      pop\n        /* \"#utility.yul\":4942:5060   */\n      pop\n        /* \"#utility.yul\":4448:5067   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5073:5150   */\n    tag_238:\n        /* \"#utility.yul\":5110:5117   */\n      0x00\n        /* \"#utility.yul\":5139:5144   */\n      dup2\n        /* \"#utility.yul\":5128:5144   */\n      swap1\n      pop\n        /* \"#utility.yul\":5073:5150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5156:5278   */\n    tag_239:\n        /* \"#utility.yul\":5229:5253   */\n      tag_308\n        /* \"#utility.yul\":5247:5252   */\n      dup2\n        /* \"#utility.yul\":5229:5253   */\n      tag_238\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5222:5227   */\n      dup2\n        /* \"#utility.yul\":5219:5254   */\n      eq\n        /* \"#utility.yul\":5209:5272   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":5268:5269   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      0x00\n        /* \"#utility.yul\":5258:5270   */\n      revert\n        /* \"#utility.yul\":5209:5272   */\n    tag_309:\n        /* \"#utility.yul\":5156:5278   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5284:5423   */\n    tag_240:\n        /* \"#utility.yul\":5330:5335   */\n      0x00\n        /* \"#utility.yul\":5368:5374   */\n      dup2\n        /* \"#utility.yul\":5355:5375   */\n      calldataload\n        /* \"#utility.yul\":5346:5375   */\n      swap1\n      pop\n        /* \"#utility.yul\":5384:5417   */\n      tag_311\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5384:5417   */\n      tag_239\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5284:5423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5429:5758   */\n    tag_50:\n        /* \"#utility.yul\":5488:5494   */\n      0x00\n        /* \"#utility.yul\":5537:5539   */\n      0x20\n        /* \"#utility.yul\":5525:5534   */\n      dup3\n        /* \"#utility.yul\":5516:5523   */\n      dup5\n        /* \"#utility.yul\":5512:5535   */\n      sub\n        /* \"#utility.yul\":5508:5540   */\n      slt\n        /* \"#utility.yul\":5505:5624   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":5543:5622   */\n      tag_314\n      tag_218\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5505:5624   */\n    tag_313:\n        /* \"#utility.yul\":5663:5664   */\n      0x00\n        /* \"#utility.yul\":5688:5741   */\n      tag_315\n        /* \"#utility.yul\":5733:5740   */\n      dup5\n        /* \"#utility.yul\":5724:5730   */\n      dup3\n        /* \"#utility.yul\":5713:5722   */\n      dup6\n        /* \"#utility.yul\":5709:5731   */\n      add\n        /* \"#utility.yul\":5688:5741   */\n      tag_240\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5678:5741   */\n      swap2\n      pop\n        /* \"#utility.yul\":5634:5751   */\n      pop\n        /* \"#utility.yul\":5429:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:5882   */\n    tag_241:\n        /* \"#utility.yul\":5851:5875   */\n      tag_317\n        /* \"#utility.yul\":5869:5874   */\n      dup2\n        /* \"#utility.yul\":5851:5875   */\n      tag_238\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5846:5849   */\n      dup3\n        /* \"#utility.yul\":5839:5876   */\n      mstore\n        /* \"#utility.yul\":5764:5882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6110   */\n    tag_53:\n        /* \"#utility.yul\":5981:5985   */\n      0x00\n        /* \"#utility.yul\":6019:6021   */\n      0x20\n        /* \"#utility.yul\":6008:6017   */\n      dup3\n        /* \"#utility.yul\":6004:6022   */\n      add\n        /* \"#utility.yul\":5996:6022   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6103   */\n      tag_319\n        /* \"#utility.yul\":6100:6101   */\n      0x00\n        /* \"#utility.yul\":6089:6098   */\n      dup4\n        /* \"#utility.yul\":6085:6102   */\n      add\n        /* \"#utility.yul\":6076:6082   */\n      dup5\n        /* \"#utility.yul\":6032:6103   */\n      tag_241\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5888:6110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6116:6590   */\n    tag_56:\n        /* \"#utility.yul\":6184:6190   */\n      0x00\n        /* \"#utility.yul\":6192:6198   */\n      0x00\n        /* \"#utility.yul\":6241:6243   */\n      0x40\n        /* \"#utility.yul\":6229:6238   */\n      dup4\n        /* \"#utility.yul\":6220:6227   */\n      dup6\n        /* \"#utility.yul\":6216:6239   */\n      sub\n        /* \"#utility.yul\":6212:6244   */\n      slt\n        /* \"#utility.yul\":6209:6328   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":6247:6326   */\n      tag_322\n      tag_218\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6209:6328   */\n    tag_321:\n        /* \"#utility.yul\":6367:6368   */\n      0x00\n        /* \"#utility.yul\":6392:6445   */\n      tag_323\n        /* \"#utility.yul\":6437:6444   */\n      dup6\n        /* \"#utility.yul\":6428:6434   */\n      dup3\n        /* \"#utility.yul\":6417:6426   */\n      dup7\n        /* \"#utility.yul\":6413:6435   */\n      add\n        /* \"#utility.yul\":6392:6445   */\n      tag_240\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":6382:6445   */\n      swap3\n      pop\n        /* \"#utility.yul\":6338:6455   */\n      pop\n        /* \"#utility.yul\":6494:6496   */\n      0x20\n        /* \"#utility.yul\":6520:6573   */\n      tag_324\n        /* \"#utility.yul\":6565:6572   */\n      dup6\n        /* \"#utility.yul\":6556:6562   */\n      dup3\n        /* \"#utility.yul\":6545:6554   */\n      dup7\n        /* \"#utility.yul\":6541:6563   */\n      add\n        /* \"#utility.yul\":6520:6573   */\n      tag_233\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6510:6573   */\n      swap2\n      pop\n        /* \"#utility.yul\":6465:6583   */\n      pop\n        /* \"#utility.yul\":6116:6590   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6596:6682   */\n    tag_242:\n        /* \"#utility.yul\":6631:6638   */\n      0x00\n        /* \"#utility.yul\":6671:6675   */\n      0xff\n        /* \"#utility.yul\":6664:6669   */\n      dup3\n        /* \"#utility.yul\":6660:6676   */\n      and\n        /* \"#utility.yul\":6649:6676   */\n      swap1\n      pop\n        /* \"#utility.yul\":6596:6682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6688:6800   */\n    tag_243:\n        /* \"#utility.yul\":6771:6793   */\n      tag_327\n        /* \"#utility.yul\":6787:6792   */\n      dup2\n        /* \"#utility.yul\":6771:6793   */\n      tag_242\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":6766:6769   */\n      dup3\n        /* \"#utility.yul\":6759:6794   */\n      mstore\n        /* \"#utility.yul\":6688:6800   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6806:7020   */\n    tag_61:\n        /* \"#utility.yul\":6895:6899   */\n      0x00\n        /* \"#utility.yul\":6933:6935   */\n      0x20\n        /* \"#utility.yul\":6922:6931   */\n      dup3\n        /* \"#utility.yul\":6918:6936   */\n      add\n        /* \"#utility.yul\":6910:6936   */\n      swap1\n      pop\n        /* \"#utility.yul\":6946:7013   */\n      tag_329\n        /* \"#utility.yul\":7010:7011   */\n      0x00\n        /* \"#utility.yul\":6999:7008   */\n      dup4\n        /* \"#utility.yul\":6995:7012   */\n      add\n        /* \"#utility.yul\":6986:6992   */\n      dup5\n        /* \"#utility.yul\":6946:7013   */\n      tag_243\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6806:7020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7026:7355   */\n    tag_70:\n        /* \"#utility.yul\":7085:7091   */\n      0x00\n        /* \"#utility.yul\":7134:7136   */\n      0x20\n        /* \"#utility.yul\":7122:7131   */\n      dup3\n        /* \"#utility.yul\":7113:7120   */\n      dup5\n        /* \"#utility.yul\":7109:7132   */\n      sub\n        /* \"#utility.yul\":7105:7137   */\n      slt\n        /* \"#utility.yul\":7102:7221   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":7140:7219   */\n      tag_332\n      tag_218\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7102:7221   */\n    tag_331:\n        /* \"#utility.yul\":7260:7261   */\n      0x00\n        /* \"#utility.yul\":7285:7338   */\n      tag_333\n        /* \"#utility.yul\":7330:7337   */\n      dup5\n        /* \"#utility.yul\":7321:7327   */\n      dup3\n        /* \"#utility.yul\":7310:7319   */\n      dup6\n        /* \"#utility.yul\":7306:7328   */\n      add\n        /* \"#utility.yul\":7285:7338   */\n      tag_233\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":7275:7338   */\n      swap2\n      pop\n        /* \"#utility.yul\":7231:7348   */\n      pop\n        /* \"#utility.yul\":7026:7355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7835   */\n    tag_95:\n        /* \"#utility.yul\":7429:7435   */\n      0x00\n        /* \"#utility.yul\":7437:7443   */\n      0x00\n        /* \"#utility.yul\":7486:7488   */\n      0x40\n        /* \"#utility.yul\":7474:7483   */\n      dup4\n        /* \"#utility.yul\":7465:7472   */\n      dup6\n        /* \"#utility.yul\":7461:7484   */\n      sub\n        /* \"#utility.yul\":7457:7489   */\n      slt\n        /* \"#utility.yul\":7454:7573   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":7492:7571   */\n      tag_336\n      tag_218\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7454:7573   */\n    tag_335:\n        /* \"#utility.yul\":7612:7613   */\n      0x00\n        /* \"#utility.yul\":7637:7690   */\n      tag_337\n        /* \"#utility.yul\":7682:7689   */\n      dup6\n        /* \"#utility.yul\":7673:7679   */\n      dup3\n        /* \"#utility.yul\":7662:7671   */\n      dup7\n        /* \"#utility.yul\":7658:7680   */\n      add\n        /* \"#utility.yul\":7637:7690   */\n      tag_233\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":7627:7690   */\n      swap3\n      pop\n        /* \"#utility.yul\":7583:7700   */\n      pop\n        /* \"#utility.yul\":7739:7741   */\n      0x20\n        /* \"#utility.yul\":7765:7818   */\n      tag_338\n        /* \"#utility.yul\":7810:7817   */\n      dup6\n        /* \"#utility.yul\":7801:7807   */\n      dup3\n        /* \"#utility.yul\":7790:7799   */\n      dup7\n        /* \"#utility.yul\":7786:7808   */\n      add\n        /* \"#utility.yul\":7765:7818   */\n      tag_233\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":7755:7818   */\n      swap2\n      pop\n        /* \"#utility.yul\":7710:7828   */\n      pop\n        /* \"#utility.yul\":7361:7835   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7841:8021   */\n    tag_244:\n        /* \"#utility.yul\":7889:7966   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7886:7887   */\n      0x00\n        /* \"#utility.yul\":7879:7967   */\n      mstore\n        /* \"#utility.yul\":7986:7990   */\n      0x22\n        /* \"#utility.yul\":7983:7984   */\n      0x04\n        /* \"#utility.yul\":7976:7991   */\n      mstore\n        /* \"#utility.yul\":8010:8014   */\n      0x24\n        /* \"#utility.yul\":8007:8008   */\n      0x00\n        /* \"#utility.yul\":8000:8015   */\n      revert\n        /* \"#utility.yul\":8027:8347   */\n    tag_104:\n        /* \"#utility.yul\":8071:8077   */\n      0x00\n        /* \"#utility.yul\":8108:8109   */\n      0x02\n        /* \"#utility.yul\":8102:8106   */\n      dup3\n        /* \"#utility.yul\":8098:8110   */\n      div\n        /* \"#utility.yul\":8088:8110   */\n      swap1\n      pop\n        /* \"#utility.yul\":8155:8156   */\n      0x01\n        /* \"#utility.yul\":8149:8153   */\n      dup3\n        /* \"#utility.yul\":8145:8157   */\n      and\n        /* \"#utility.yul\":8176:8194   */\n      dup1\n        /* \"#utility.yul\":8166:8247   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":8232:8236   */\n      0x7f\n        /* \"#utility.yul\":8224:8230   */\n      dup3\n        /* \"#utility.yul\":8220:8237   */\n      and\n        /* \"#utility.yul\":8210:8237   */\n      swap2\n      pop\n        /* \"#utility.yul\":8166:8247   */\n    tag_341:\n        /* \"#utility.yul\":8294:8296   */\n      0x20\n        /* \"#utility.yul\":8286:8292   */\n      dup3\n        /* \"#utility.yul\":8283:8297   */\n      lt\n        /* \"#utility.yul\":8263:8281   */\n      dup2\n        /* \"#utility.yul\":8260:8298   */\n      sub\n        /* \"#utility.yul\":8257:8341   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":8313:8331   */\n      tag_343\n      tag_244\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8257:8341   */\n    tag_342:\n        /* \"#utility.yul\":8078:8347   */\n      pop\n        /* \"#utility.yul\":8027:8347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8353:8471   */\n    tag_245:\n        /* \"#utility.yul\":8440:8464   */\n      tag_345\n        /* \"#utility.yul\":8458:8463   */\n      dup2\n        /* \"#utility.yul\":8440:8464   */\n      tag_231\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8435:8438   */\n      dup3\n        /* \"#utility.yul\":8428:8465   */\n      mstore\n        /* \"#utility.yul\":8353:8471   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8477:8919   */\n    tag_167:\n        /* \"#utility.yul\":8626:8630   */\n      0x00\n        /* \"#utility.yul\":8664:8666   */\n      0x60\n        /* \"#utility.yul\":8653:8662   */\n      dup3\n        /* \"#utility.yul\":8649:8667   */\n      add\n        /* \"#utility.yul\":8641:8667   */\n      swap1\n      pop\n        /* \"#utility.yul\":8677:8748   */\n      tag_347\n        /* \"#utility.yul\":8745:8746   */\n      0x00\n        /* \"#utility.yul\":8734:8743   */\n      dup4\n        /* \"#utility.yul\":8730:8747   */\n      add\n        /* \"#utility.yul\":8721:8727   */\n      dup7\n        /* \"#utility.yul\":8677:8748   */\n      tag_245\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":8758:8830   */\n      tag_348\n        /* \"#utility.yul\":8826:8828   */\n      0x20\n        /* \"#utility.yul\":8815:8824   */\n      dup4\n        /* \"#utility.yul\":8811:8829   */\n      add\n        /* \"#utility.yul\":8802:8808   */\n      dup6\n        /* \"#utility.yul\":8758:8830   */\n      tag_237\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":8840:8912   */\n      tag_349\n        /* \"#utility.yul\":8908:8910   */\n      0x40\n        /* \"#utility.yul\":8897:8906   */\n      dup4\n        /* \"#utility.yul\":8893:8911   */\n      add\n        /* \"#utility.yul\":8884:8890   */\n      dup5\n        /* \"#utility.yul\":8840:8912   */\n      tag_237\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":8477:8919   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8925:9147   */\n    tag_172:\n        /* \"#utility.yul\":9018:9022   */\n      0x00\n        /* \"#utility.yul\":9056:9058   */\n      0x20\n        /* \"#utility.yul\":9045:9054   */\n      dup3\n        /* \"#utility.yul\":9041:9059   */\n      add\n        /* \"#utility.yul\":9033:9059   */\n      swap1\n      pop\n        /* \"#utility.yul\":9069:9140   */\n      tag_351\n        /* \"#utility.yul\":9137:9138   */\n      0x00\n        /* \"#utility.yul\":9126:9135   */\n      dup4\n        /* \"#utility.yul\":9122:9139   */\n      add\n        /* \"#utility.yul\":9113:9119   */\n      dup5\n        /* \"#utility.yul\":9069:9140   */\n      tag_245\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":8925:9147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9153:9333   */\n    tag_246:\n        /* \"#utility.yul\":9201:9278   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9198:9199   */\n      0x00\n        /* \"#utility.yul\":9191:9279   */\n      mstore\n        /* \"#utility.yul\":9298:9302   */\n      0x11\n        /* \"#utility.yul\":9295:9296   */\n      0x04\n        /* \"#utility.yul\":9288:9303   */\n      mstore\n        /* \"#utility.yul\":9322:9326   */\n      0x24\n        /* \"#utility.yul\":9319:9320   */\n      0x00\n        /* \"#utility.yul\":9312:9327   */\n      revert\n        /* \"#utility.yul\":9339:9530   */\n    tag_205:\n        /* \"#utility.yul\":9379:9382   */\n      0x00\n        /* \"#utility.yul\":9398:9418   */\n      tag_354\n        /* \"#utility.yul\":9416:9417   */\n      dup3\n        /* \"#utility.yul\":9398:9418   */\n      tag_234\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":9393:9418   */\n      swap2\n      pop\n        /* \"#utility.yul\":9432:9452   */\n      tag_355\n        /* \"#utility.yul\":9450:9451   */\n      dup4\n        /* \"#utility.yul\":9432:9452   */\n      tag_234\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9427:9452   */\n      swap3\n      pop\n        /* \"#utility.yul\":9475:9476   */\n      dup3\n        /* \"#utility.yul\":9472:9473   */\n      dup3\n        /* \"#utility.yul\":9468:9477   */\n      add\n        /* \"#utility.yul\":9461:9477   */\n      swap1\n      pop\n        /* \"#utility.yul\":9496:9499   */\n      dup1\n        /* \"#utility.yul\":9493:9494   */\n      dup3\n        /* \"#utility.yul\":9490:9500   */\n      gt\n        /* \"#utility.yul\":9487:9523   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":9503:9521   */\n      tag_357\n      tag_246\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":9487:9523   */\n    tag_356:\n        /* \"#utility.yul\":9339:9530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9536:9868   */\n    tag_216:\n        /* \"#utility.yul\":9657:9661   */\n      0x00\n        /* \"#utility.yul\":9695:9697   */\n      0x40\n        /* \"#utility.yul\":9684:9693   */\n      dup3\n        /* \"#utility.yul\":9680:9698   */\n      add\n        /* \"#utility.yul\":9672:9698   */\n      swap1\n      pop\n        /* \"#utility.yul\":9708:9779   */\n      tag_359\n        /* \"#utility.yul\":9776:9777   */\n      0x00\n        /* \"#utility.yul\":9765:9774   */\n      dup4\n        /* \"#utility.yul\":9761:9778   */\n      add\n        /* \"#utility.yul\":9752:9758   */\n      dup6\n        /* \"#utility.yul\":9708:9779   */\n      tag_245\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9789:9861   */\n      tag_360\n        /* \"#utility.yul\":9857:9859   */\n      0x20\n        /* \"#utility.yul\":9846:9855   */\n      dup4\n        /* \"#utility.yul\":9842:9860   */\n      add\n        /* \"#utility.yul\":9833:9839   */\n      dup5\n        /* \"#utility.yul\":9789:9861   */\n      tag_241\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":9536:9868   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200922b4efce6eb9da6292e1e51c6a8cf294931d9c462bc93b3be79dbeb485890f64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_65": {
									"entryPoint": null,
									"id": 65,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_660": {
									"entryPoint": null,
									"id": 660,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_349": {
									"entryPoint": 231,
									"id": 349,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1239": {
									"entryPoint": 577,
									"id": 1239,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_173": {
									"entryPoint": 477,
									"id": 173,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 918,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:11",
										"nodeType": "YulBlock",
										"src": "0:5231:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:11",
													"nodeType": "YulBlock",
													"src": "66:40:11",
													"statements": [
														{
															"nativeSrc": "77:22:11",
															"nodeType": "YulAssignment",
															"src": "77:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:11"
																},
																"nativeSrc": "87:12:11",
																"nodeType": "YulFunctionCall",
																"src": "87:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:11",
														"nodeType": "YulTypedName",
														"src": "49:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:11",
														"nodeType": "YulTypedName",
														"src": "59:6:11",
														"type": ""
													}
												],
												"src": "7:99:11"
											},
											{
												"body": {
													"nativeSrc": "140:152:11",
													"nodeType": "YulBlock",
													"src": "140:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:11",
																		"nodeType": "YulLiteral",
																		"src": "157:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:11",
																		"nodeType": "YulLiteral",
																		"src": "160:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:11"
																},
																"nativeSrc": "150:88:11",
																"nodeType": "YulFunctionCall",
																"src": "150:88:11"
															},
															"nativeSrc": "150:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:11",
																		"nodeType": "YulLiteral",
																		"src": "254:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:11",
																		"nodeType": "YulLiteral",
																		"src": "257:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:11"
																},
																"nativeSrc": "247:15:11",
																"nodeType": "YulFunctionCall",
																"src": "247:15:11"
															},
															"nativeSrc": "247:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:11",
																		"nodeType": "YulLiteral",
																		"src": "278:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:11",
																		"nodeType": "YulLiteral",
																		"src": "281:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:11"
																},
																"nativeSrc": "271:15:11",
																"nodeType": "YulFunctionCall",
																"src": "271:15:11"
															},
															"nativeSrc": "271:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:11"
											},
											{
												"body": {
													"nativeSrc": "326:152:11",
													"nodeType": "YulBlock",
													"src": "326:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:11",
																		"nodeType": "YulLiteral",
																		"src": "343:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:11",
																		"nodeType": "YulLiteral",
																		"src": "346:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:11"
																},
																"nativeSrc": "336:88:11",
																"nodeType": "YulFunctionCall",
																"src": "336:88:11"
															},
															"nativeSrc": "336:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:11",
																		"nodeType": "YulLiteral",
																		"src": "440:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:11",
																		"nodeType": "YulLiteral",
																		"src": "443:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:11"
																},
																"nativeSrc": "433:15:11",
																"nodeType": "YulFunctionCall",
																"src": "433:15:11"
															},
															"nativeSrc": "433:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:11",
																		"nodeType": "YulLiteral",
																		"src": "464:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:11",
																		"nodeType": "YulLiteral",
																		"src": "467:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:11"
																},
																"nativeSrc": "457:15:11",
																"nodeType": "YulFunctionCall",
																"src": "457:15:11"
															},
															"nativeSrc": "457:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:11"
											},
											{
												"body": {
													"nativeSrc": "535:269:11",
													"nodeType": "YulBlock",
													"src": "535:269:11",
													"statements": [
														{
															"nativeSrc": "545:22:11",
															"nodeType": "YulAssignment",
															"src": "545:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:11",
																		"nodeType": "YulLiteral",
																		"src": "565:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:11"
																},
																"nativeSrc": "555:12:11",
																"nodeType": "YulFunctionCall",
																"src": "555:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:11"
																}
															]
														},
														{
															"nativeSrc": "576:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:11",
																		"nodeType": "YulLiteral",
																		"src": "612:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:11"
																},
																"nativeSrc": "602:12:11",
																"nodeType": "YulFunctionCall",
																"src": "602:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:11",
																	"nodeType": "YulTypedName",
																	"src": "580:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:11",
																"nodeType": "YulBlock",
																"src": "653:51:11",
																"statements": [
																	{
																		"nativeSrc": "667:27:11",
																		"nodeType": "YulAssignment",
																		"src": "667:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:11",
																					"nodeType": "YulLiteral",
																					"src": "689:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:11"
																			},
																			"nativeSrc": "677:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:11"
																},
																"nativeSrc": "626:26:11",
																"nodeType": "YulFunctionCall",
																"src": "626:26:11"
															},
															"nativeSrc": "623:81:11",
															"nodeType": "YulIf",
															"src": "623:81:11"
														},
														{
															"body": {
																"nativeSrc": "756:42:11",
																"nodeType": "YulBlock",
																"src": "756:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:11"
																			},
																			"nativeSrc": "770:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:11"
																		},
																		"nativeSrc": "770:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:11",
																				"nodeType": "YulLiteral",
																				"src": "751:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:11"
																		},
																		"nativeSrc": "740:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:11"
																},
																"nativeSrc": "717:38:11",
																"nodeType": "YulFunctionCall",
																"src": "717:38:11"
															},
															"nativeSrc": "714:84:11",
															"nodeType": "YulIf",
															"src": "714:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:11",
														"nodeType": "YulTypedName",
														"src": "519:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:11",
														"nodeType": "YulTypedName",
														"src": "528:6:11",
														"type": ""
													}
												],
												"src": "484:320:11"
											},
											{
												"body": {
													"nativeSrc": "864:87:11",
													"nodeType": "YulBlock",
													"src": "864:87:11",
													"statements": [
														{
															"nativeSrc": "874:11:11",
															"nodeType": "YulAssignment",
															"src": "874:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:11",
																"nodeType": "YulIdentifier",
																"src": "882:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:11",
																		"nodeType": "YulLiteral",
																		"src": "902:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:11"
																},
																"nativeSrc": "895:14:11",
																"nodeType": "YulFunctionCall",
																"src": "895:14:11"
															},
															"nativeSrc": "895:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:11"
														},
														{
															"nativeSrc": "918:26:11",
															"nodeType": "YulAssignment",
															"src": "918:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:11",
																		"nodeType": "YulLiteral",
																		"src": "936:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:11",
																		"nodeType": "YulLiteral",
																		"src": "939:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:11"
																},
																"nativeSrc": "926:18:11",
																"nodeType": "YulFunctionCall",
																"src": "926:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:11",
														"nodeType": "YulTypedName",
														"src": "851:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:11",
														"nodeType": "YulTypedName",
														"src": "859:4:11",
														"type": ""
													}
												],
												"src": "810:141:11"
											},
											{
												"body": {
													"nativeSrc": "1001:49:11",
													"nodeType": "YulBlock",
													"src": "1001:49:11",
													"statements": [
														{
															"nativeSrc": "1011:33:11",
															"nodeType": "YulAssignment",
															"src": "1011:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:11"
																		},
																		"nativeSrc": "1025:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:11"
																},
																"nativeSrc": "1021:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:11",
														"nodeType": "YulTypedName",
														"src": "984:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:11",
														"nodeType": "YulTypedName",
														"src": "994:6:11",
														"type": ""
													}
												],
												"src": "957:93:11"
											},
											{
												"body": {
													"nativeSrc": "1109:54:11",
													"nodeType": "YulBlock",
													"src": "1109:54:11",
													"statements": [
														{
															"nativeSrc": "1119:37:11",
															"nodeType": "YulAssignment",
															"src": "1119:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:11"
																},
																"nativeSrc": "1140:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:11",
														"nodeType": "YulTypedName",
														"src": "1084:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:11",
														"nodeType": "YulTypedName",
														"src": "1090:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:11",
														"nodeType": "YulTypedName",
														"src": "1100:8:11",
														"type": ""
													}
												],
												"src": "1056:107:11"
											},
											{
												"body": {
													"nativeSrc": "1245:317:11",
													"nodeType": "YulBlock",
													"src": "1245:317:11",
													"statements": [
														{
															"nativeSrc": "1255:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:11"
																},
																"nativeSrc": "1272:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:11",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:11",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:11"
																},
																"nativeSrc": "1311:97:11",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:11",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:11",
															"nodeType": "YulAssignment",
															"src": "1417:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:11"
																},
																"nativeSrc": "1429:39:11",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:11"
																}
															]
														},
														{
															"nativeSrc": "1477:30:11",
															"nodeType": "YulAssignment",
															"src": "1477:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:11"
																		},
																		"nativeSrc": "1497:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:11"
																},
																"nativeSrc": "1486:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:11"
																}
															]
														},
														{
															"nativeSrc": "1516:40:11",
															"nodeType": "YulAssignment",
															"src": "1516:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:11"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:11"
																		},
																		"nativeSrc": "1536:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:11"
																},
																"nativeSrc": "1526:30:11",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:11",
														"nodeType": "YulTypedName",
														"src": "1206:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:11",
														"nodeType": "YulTypedName",
														"src": "1213:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:11",
														"nodeType": "YulTypedName",
														"src": "1225:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:11",
														"nodeType": "YulTypedName",
														"src": "1238:6:11",
														"type": ""
													}
												],
												"src": "1169:393:11"
											},
											{
												"body": {
													"nativeSrc": "1613:32:11",
													"nodeType": "YulBlock",
													"src": "1613:32:11",
													"statements": [
														{
															"nativeSrc": "1623:16:11",
															"nodeType": "YulAssignment",
															"src": "1623:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:11",
																"nodeType": "YulIdentifier",
																"src": "1634:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:11",
														"nodeType": "YulTypedName",
														"src": "1595:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:11",
														"nodeType": "YulTypedName",
														"src": "1605:7:11",
														"type": ""
													}
												],
												"src": "1568:77:11"
											},
											{
												"body": {
													"nativeSrc": "1683:28:11",
													"nodeType": "YulBlock",
													"src": "1683:28:11",
													"statements": [
														{
															"nativeSrc": "1693:12:11",
															"nodeType": "YulAssignment",
															"src": "1693:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:11",
																"nodeType": "YulIdentifier",
																"src": "1700:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:11",
														"nodeType": "YulTypedName",
														"src": "1669:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:11",
														"nodeType": "YulTypedName",
														"src": "1679:3:11",
														"type": ""
													}
												],
												"src": "1651:60:11"
											},
											{
												"body": {
													"nativeSrc": "1777:82:11",
													"nodeType": "YulBlock",
													"src": "1777:82:11",
													"statements": [
														{
															"nativeSrc": "1787:66:11",
															"nodeType": "YulAssignment",
															"src": "1787:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:11"
																				},
																				"nativeSrc": "1827:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:11"
																		},
																		"nativeSrc": "1818:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:11"
																},
																"nativeSrc": "1800:53:11",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:11",
														"nodeType": "YulTypedName",
														"src": "1757:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:11",
														"nodeType": "YulTypedName",
														"src": "1767:9:11",
														"type": ""
													}
												],
												"src": "1717:142:11"
											},
											{
												"body": {
													"nativeSrc": "1912:28:11",
													"nodeType": "YulBlock",
													"src": "1912:28:11",
													"statements": [
														{
															"nativeSrc": "1922:12:11",
															"nodeType": "YulAssignment",
															"src": "1922:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:11",
																"nodeType": "YulIdentifier",
																"src": "1929:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:11",
														"nodeType": "YulTypedName",
														"src": "1898:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:11",
														"nodeType": "YulTypedName",
														"src": "1908:3:11",
														"type": ""
													}
												],
												"src": "1865:75:11"
											},
											{
												"body": {
													"nativeSrc": "2022:193:11",
													"nodeType": "YulBlock",
													"src": "2022:193:11",
													"statements": [
														{
															"nativeSrc": "2032:63:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:11"
																},
																"nativeSrc": "2056:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:11",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:11"
																				},
																				"nativeSrc": "2145:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:11",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:11",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:11"
																				},
																				"nativeSrc": "2166:41:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:11"
																		},
																		"nativeSrc": "2117:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:11"
																},
																"nativeSrc": "2104:105:11",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:11"
															},
															"nativeSrc": "2104:105:11",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:11",
														"nodeType": "YulTypedName",
														"src": "1999:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:11",
														"nodeType": "YulTypedName",
														"src": "2005:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:11",
														"nodeType": "YulTypedName",
														"src": "2013:7:11",
														"type": ""
													}
												],
												"src": "1946:269:11"
											},
											{
												"body": {
													"nativeSrc": "2270:24:11",
													"nodeType": "YulBlock",
													"src": "2270:24:11",
													"statements": [
														{
															"nativeSrc": "2280:8:11",
															"nodeType": "YulAssignment",
															"src": "2280:8:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:11",
																"nodeType": "YulLiteral",
																"src": "2287:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:11",
														"nodeType": "YulTypedName",
														"src": "2266:3:11",
														"type": ""
													}
												],
												"src": "2221:73:11"
											},
											{
												"body": {
													"nativeSrc": "2353:136:11",
													"nodeType": "YulBlock",
													"src": "2353:136:11",
													"statements": [
														{
															"nativeSrc": "2363:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:11"
																},
																"nativeSrc": "2377:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:11"
																},
																"nativeSrc": "2418:65:11",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:11"
															},
															"nativeSrc": "2418:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:11",
														"nodeType": "YulTypedName",
														"src": "2339:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:11",
														"nodeType": "YulTypedName",
														"src": "2345:6:11",
														"type": ""
													}
												],
												"src": "2300:189:11"
											},
											{
												"body": {
													"nativeSrc": "2545:136:11",
													"nodeType": "YulBlock",
													"src": "2545:136:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:11",
																"nodeType": "YulBlock",
																"src": "2612:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:11",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:11"
																			},
																			"nativeSrc": "2626:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:11"
																		},
																		"nativeSrc": "2626:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:11"
																},
																"nativeSrc": "2562:14:11",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:11"
															},
															"nativeSrc": "2555:120:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:11",
																"nodeType": "YulBlock",
																"src": "2577:26:11",
																"statements": [
																	{
																		"nativeSrc": "2579:22:11",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:11"
																			},
																			"nativeSrc": "2588:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:11",
																"nodeType": "YulBlock",
																"src": "2559:2:11",
																"statements": []
															},
															"src": "2555:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:11",
														"nodeType": "YulTypedName",
														"src": "2533:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:11",
														"nodeType": "YulTypedName",
														"src": "2540:3:11",
														"type": ""
													}
												],
												"src": "2495:186:11"
											},
											{
												"body": {
													"nativeSrc": "2766:464:11",
													"nodeType": "YulBlock",
													"src": "2766:464:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:11",
																"nodeType": "YulBlock",
																"src": "2792:431:11",
																"statements": [
																	{
																		"nativeSrc": "2806:54:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:11",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:11"
																			},
																			"nativeSrc": "2822:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:11",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:11",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:11"
																					},
																					"nativeSrc": "2906:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:11"
																			},
																			"nativeSrc": "2892:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:11",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:11",
																			"nodeType": "YulBlock",
																			"src": "3093:27:11",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:11",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:11",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:11",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:11"
																			},
																			"nativeSrc": "3074:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:11"
																		},
																		"nativeSrc": "3071:49:11",
																		"nodeType": "YulIf",
																		"src": "3071:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:11",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:11",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:11"
																							},
																							"nativeSrc": "3189:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:11"
																					},
																					"nativeSrc": "3175:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:11",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:11"
																			},
																			"nativeSrc": "3133:80:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:11"
																		},
																		"nativeSrc": "3133:80:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:11"
																},
																"nativeSrc": "2780:11:11",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:11"
															},
															"nativeSrc": "2777:446:11",
															"nodeType": "YulIf",
															"src": "2777:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:11",
														"nodeType": "YulTypedName",
														"src": "2742:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:11",
														"nodeType": "YulTypedName",
														"src": "2749:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:11",
														"nodeType": "YulTypedName",
														"src": "2754:10:11",
														"type": ""
													}
												],
												"src": "2687:543:11"
											},
											{
												"body": {
													"nativeSrc": "3299:54:11",
													"nodeType": "YulBlock",
													"src": "3299:54:11",
													"statements": [
														{
															"nativeSrc": "3309:37:11",
															"nodeType": "YulAssignment",
															"src": "3309:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:11"
																},
																"nativeSrc": "3330:16:11",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:11",
														"nodeType": "YulTypedName",
														"src": "3274:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:11",
														"nodeType": "YulTypedName",
														"src": "3280:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:11",
														"nodeType": "YulTypedName",
														"src": "3290:8:11",
														"type": ""
													}
												],
												"src": "3236:117:11"
											},
											{
												"body": {
													"nativeSrc": "3410:118:11",
													"nodeType": "YulBlock",
													"src": "3410:118:11",
													"statements": [
														{
															"nativeSrc": "3420:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:11"
																				},
																				"nativeSrc": "3465:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:11"
																				},
																				"nativeSrc": "3480:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:11"
																		},
																		"nativeSrc": "3436:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:11"
																},
																"nativeSrc": "3432:56:11",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:11",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:11",
															"nodeType": "YulAssignment",
															"src": "3497:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:11"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:11"
																},
																"nativeSrc": "3507:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:11",
														"nodeType": "YulTypedName",
														"src": "3387:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:11",
														"nodeType": "YulTypedName",
														"src": "3393:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:11",
														"nodeType": "YulTypedName",
														"src": "3403:6:11",
														"type": ""
													}
												],
												"src": "3359:169:11"
											},
											{
												"body": {
													"nativeSrc": "3614:214:11",
													"nodeType": "YulBlock",
													"src": "3614:214:11",
													"statements": [
														{
															"nativeSrc": "3747:37:11",
															"nodeType": "YulAssignment",
															"src": "3747:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:11"
																},
																"nativeSrc": "3755:29:11",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:11"
																}
															]
														},
														{
															"nativeSrc": "3793:29:11",
															"nodeType": "YulAssignment",
															"src": "3793:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:11"
																		},
																		"nativeSrc": "3810:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:11"
																},
																"nativeSrc": "3801:21:11",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:11",
														"nodeType": "YulTypedName",
														"src": "3595:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:11",
														"nodeType": "YulTypedName",
														"src": "3601:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:11",
														"nodeType": "YulTypedName",
														"src": "3609:4:11",
														"type": ""
													}
												],
												"src": "3533:295:11"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:11",
													"nodeType": "YulBlock",
													"src": "3925:1303:11",
													"statements": [
														{
															"nativeSrc": "3936:51:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:11"
																},
																"nativeSrc": "3950:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:11",
																"nodeType": "YulBlock",
																"src": "4072:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:11"
																			},
																			"nativeSrc": "4074:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:11"
																		},
																		"nativeSrc": "4074:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:11",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:11"
																},
																"nativeSrc": "4041:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:11"
															},
															"nativeSrc": "4038:56:11",
															"nodeType": "YulIf",
															"src": "4038:56:11"
														},
														{
															"nativeSrc": "4104:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:11"
																		},
																		"nativeSrc": "4144:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:11"
																},
																"nativeSrc": "4118:38:11",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:11"
																},
																"nativeSrc": "4203:67:11",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:11"
															},
															"nativeSrc": "4203:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:11"
														},
														{
															"nativeSrc": "4280:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:11",
																"nodeType": "YulLiteral",
																"src": "4297:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:11",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:11",
															"nodeType": "YulAssignment",
															"src": "4308:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:11",
																"nodeType": "YulLiteral",
																"src": "4321:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:11",
																		"nodeType": "YulBlock",
																		"src": "4372:611:11",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:11",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:11"
																							},
																							"nativeSrc": "4413:9:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:11"
																					},
																					"nativeSrc": "4401:22:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:11",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:11"
																					},
																					"nativeSrc": "4451:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:11",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:11",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:11",
																					"nodeType": "YulBlock",
																					"src": "4569:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:11"
																												},
																												"nativeSrc": "4608:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:11"
																										},
																										"nativeSrc": "4602:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:11"
																								},
																								"nativeSrc": "4587:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:11"
																							},
																							"nativeSrc": "4587:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:11"
																						},
																						{
																							"nativeSrc": "4646:24:11",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:11",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:11"
																								},
																								"nativeSrc": "4656:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:11",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:11",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:11"
																								},
																								"nativeSrc": "4700:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:11"
																					},
																					"nativeSrc": "4532:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:11"
																				},
																				"nativeSrc": "4524:208:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:11",
																					"nodeType": "YulBlock",
																					"src": "4547:21:11",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:11",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:11",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:11"
																								},
																								"nativeSrc": "4554:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:11",
																					"nodeType": "YulBlock",
																					"src": "4528:3:11",
																					"statements": []
																				},
																				"src": "4524:208:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:11",
																					"nodeType": "YulBlock",
																					"src": "4768:156:11",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:11"
																										},
																										"nativeSrc": "4809:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:11"
																								},
																								"nativeSrc": "4803:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:11",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:11",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:11"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:11",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:11"
																												},
																												"nativeSrc": "4891:17:11",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:11",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:11"
																										},
																										"nativeSrc": "4861:48:11",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:11"
																								},
																								"nativeSrc": "4846:64:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:11"
																							},
																							"nativeSrc": "4846:64:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:11"
																					},
																					"nativeSrc": "4748:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:11"
																				},
																				"nativeSrc": "4745:179:11",
																				"nodeType": "YulIf",
																				"src": "4745:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:11",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:11"
																									},
																									"nativeSrc": "4954:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:11",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:11"
																							},
																							"nativeSrc": "4950:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:11"
																					},
																					"nativeSrc": "4937:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:11"
																				},
																				"nativeSrc": "4937:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:11"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:11",
																	"nodeType": "YulCase",
																	"src": "4365:618:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:11",
																		"nodeType": "YulBlock",
																		"src": "5000:222:11",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:11",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:11",
																					"nodeType": "YulBlock",
																					"src": "5051:67:11",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:11",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:11"
																										},
																										"nativeSrc": "5084:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:11"
																								},
																								"nativeSrc": "5078:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:11"
																				},
																				"nativeSrc": "5041:77:11",
																				"nodeType": "YulIf",
																				"src": "5041:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:11"
																							},
																							"nativeSrc": "5144:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:11"
																					},
																					"nativeSrc": "5131:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:11"
																				},
																				"nativeSrc": "5131:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:11"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:11",
																	"nodeType": "YulCase",
																	"src": "4992:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:11"
																},
																"nativeSrc": "4342:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:11"
															},
															"nativeSrc": "4335:887:11",
															"nodeType": "YulSwitch",
															"src": "4335:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:11",
														"nodeType": "YulTypedName",
														"src": "3914:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:11",
														"nodeType": "YulTypedName",
														"src": "3920:3:11",
														"type": ""
													}
												],
												"src": "3833:1395:11"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040518060400160405280600d81526020017f5363686f6c617220506f696e74000000000000000000000000000000000000008152506040518060400160405280600381526020017f5350540000000000000000000000000000000000000000000000000000000000815250816003908161008b9190610485565b50806004908161009b9190610485565b5050506100b05f5f1b336100e760201b60201c565b506100e17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6336100e760201b60201c565b50610554565b5f6100f883836101dd60201b60201c565b6101d357600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061017061024160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506101d7565b5f90505b92915050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806102c357607f821691505b6020821081036102d6576102d561027f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103387fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102fd565b61034286836102fd565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61038661038161037c8461035a565b610363565b61035a565b9050919050565b5f819050919050565b61039f8361036c565b6103b36103ab8261038d565b848454610309565b825550505050565b5f5f905090565b6103ca6103bb565b6103d5818484610396565b505050565b5b818110156103f8576103ed5f826103c2565b6001810190506103db565b5050565b601f82111561043d5761040e816102dc565b610417846102ee565b81016020851015610426578190505b61043a610432856102ee565b8301826103da565b50505b505050565b5f82821c905092915050565b5f61045d5f1984600802610442565b1980831691505092915050565b5f610475838361044e565b9150826002028217905092915050565b61048e82610248565b67ffffffffffffffff8111156104a7576104a6610252565b5b6104b182546102ac565b6104bc8282856103fc565b5f60209050601f8311600181146104ed575f84156104db578287015190505b6104e5858261046a565b86555061054c565b601f1984166104fb866102dc565b5f5b82811015610522578489015182556001820191506020850194506020810190506104fd565b8683101561053f578489015161053b601f89168261044e565b8355505b6001600288020188555050505b505050505050565b611648806105615f395ff3fe608060405234801561000f575f5ffd5b5060043610610114575f3560e01c806340c10f19116100a0578063a217fddf1161006f578063a217fddf14610304578063a9059cbb14610322578063d539139314610352578063d547741f14610370578063dd62ed3e1461038c57610114565b806340c10f191461026a57806370a082311461028657806391d14854146102b657806395d89b41146102e657610114565b806323b872dd116100e757806323b872dd146101b4578063248a9ca3146101e45780632f2ff15d14610214578063313ce5671461023057806336568abe1461024e57610114565b806301ffc9a71461011857806306fdde0314610148578063095ea7b31461016657806318160ddd14610196575b5f5ffd5b610132600480360381019061012d919061113f565b6103bc565b60405161013f9190611184565b60405180910390f35b610150610435565b60405161015d919061120d565b60405180910390f35b610180600480360381019061017b91906112ba565b6104c5565b60405161018d9190611184565b60405180910390f35b61019e6104e7565b6040516101ab9190611307565b60405180910390f35b6101ce60048036038101906101c99190611320565b6104f0565b6040516101db9190611184565b60405180910390f35b6101fe60048036038101906101f991906113a3565b61051e565b60405161020b91906113dd565b60405180910390f35b61022e600480360381019061022991906113f6565b61053b565b005b61023861055d565b604051610245919061144f565b60405180910390f35b610268600480360381019061026391906113f6565b610564565b005b610284600480360381019061027f91906112ba565b6105df565b005b6102a0600480360381019061029b9190611468565b610618565b6040516102ad9190611307565b60405180910390f35b6102d060048036038101906102cb91906113f6565b61065d565b6040516102dd9190611184565b60405180910390f35b6102ee6106c1565b6040516102fb919061120d565b60405180910390f35b61030c610751565b60405161031991906113dd565b60405180910390f35b61033c600480360381019061033791906112ba565b610757565b6040516103499190611184565b60405180910390f35b61035a610779565b60405161036791906113dd565b60405180910390f35b61038a600480360381019061038591906113f6565b61079d565b005b6103a660048036038101906103a19190611493565b6107bf565b6040516103b39190611307565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042e575061042d82610841565b5b9050919050565b606060038054610444906114fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610470906114fe565b80156104bb5780601f10610492576101008083540402835291602001916104bb565b820191905f5260205f20905b81548152906001019060200180831161049e57829003601f168201915b5050505050905090565b5f5f6104cf6108aa565b90506104dc8185856108b1565b600191505092915050565b5f600254905090565b5f5f6104fa6108aa565b90506105078582856108c3565b610512858585610956565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b6105448261051e565b61054d81610a46565b6105578383610a5a565b50505050565b5f5f905090565b61056c6108aa565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105d0576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105da8282610b44565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661060981610a46565b6106138383610c2e565b505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6060600480546106d0906114fe565b80601f01602080910402602001604051908101604052809291908181526020018280546106fc906114fe565b80156107475780601f1061071e57610100808354040283529160200191610747565b820191905f5260205f20905b81548152906001019060200180831161072a57829003601f168201915b5050505050905090565b5f5f1b81565b5f5f6107616108aa565b905061076e818585610956565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6107a68261051e565b6107af81610a46565b6107b98383610b44565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6108be8383836001610cad565b505050565b5f6108ce84846107bf565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156109505781811015610941578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109389392919061153d565b60405180910390fd5b61094f84848484035f610cad565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109c6575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109bd9190611572565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a36575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a2d9190611572565b60405180910390fd5b610a41838383610e7c565b505050565b610a5781610a526108aa565b611095565b50565b5f610a65838361065d565b610b3a57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ad76108aa565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610b3e565b5f90505b92915050565b5f610b4f838361065d565b15610c24575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bc16108aa565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610c28565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c9e575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c959190611572565b60405180910390fd5b610ca95f8383610e7c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d1d575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d149190611572565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d8d575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d849190611572565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e76578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e6d9190611307565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ecc578060025f828254610ec091906115b8565b92505081905550610f9a565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f55578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f4c9392919061153d565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fe1578060025f828254039250508190555061102b565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110889190611307565b60405180910390a3505050565b61109f828261065d565b6110e25780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016110d99291906115eb565b60405180910390fd5b5050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61111e816110ea565b8114611128575f5ffd5b50565b5f8135905061113981611115565b92915050565b5f60208284031215611154576111536110e6565b5b5f6111618482850161112b565b91505092915050565b5f8115159050919050565b61117e8161116a565b82525050565b5f6020820190506111975f830184611175565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6111df8261119d565b6111e981856111a7565b93506111f98185602086016111b7565b611202816111c5565b840191505092915050565b5f6020820190508181035f83015261122581846111d5565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112568261122d565b9050919050565b6112668161124c565b8114611270575f5ffd5b50565b5f813590506112818161125d565b92915050565b5f819050919050565b61129981611287565b81146112a3575f5ffd5b50565b5f813590506112b481611290565b92915050565b5f5f604083850312156112d0576112cf6110e6565b5b5f6112dd85828601611273565b92505060206112ee858286016112a6565b9150509250929050565b61130181611287565b82525050565b5f60208201905061131a5f8301846112f8565b92915050565b5f5f5f60608486031215611337576113366110e6565b5b5f61134486828701611273565b935050602061135586828701611273565b9250506040611366868287016112a6565b9150509250925092565b5f819050919050565b61138281611370565b811461138c575f5ffd5b50565b5f8135905061139d81611379565b92915050565b5f602082840312156113b8576113b76110e6565b5b5f6113c58482850161138f565b91505092915050565b6113d781611370565b82525050565b5f6020820190506113f05f8301846113ce565b92915050565b5f5f6040838503121561140c5761140b6110e6565b5b5f6114198582860161138f565b925050602061142a85828601611273565b9150509250929050565b5f60ff82169050919050565b61144981611434565b82525050565b5f6020820190506114625f830184611440565b92915050565b5f6020828403121561147d5761147c6110e6565b5b5f61148a84828501611273565b91505092915050565b5f5f604083850312156114a9576114a86110e6565b5b5f6114b685828601611273565b92505060206114c785828601611273565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061151557607f821691505b602082108103611528576115276114d1565b5b50919050565b6115378161124c565b82525050565b5f6060820190506115505f83018661152e565b61155d60208301856112f8565b61156a60408301846112f8565b949350505050565b5f6020820190506115855f83018461152e565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115c282611287565b91506115cd83611287565b92508282019050808211156115e5576115e461158b565b5b92915050565b5f6040820190506115fe5f83018561152e565b61160b60208301846113ce565b939250505056fea26469706673582212200922b4efce6eb9da6292e1e51c6a8cf294931d9c462bc93b3be79dbeb485890f64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5363686F6C617220506F696E7400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5350540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x485 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x485 JUMP JUMPDEST POP POP POP PUSH2 0xB0 PUSH0 PUSH0 SHL CALLER PUSH2 0xE7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xE1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0xE7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x554 JUMP JUMPDEST PUSH0 PUSH2 0xF8 DUP4 DUP4 PUSH2 0x1DD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1D3 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x170 PUSH2 0x241 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1D7 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2D6 JUMPI PUSH2 0x2D5 PUSH2 0x27F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x338 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x342 DUP7 DUP4 PUSH2 0x2FD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x386 PUSH2 0x381 PUSH2 0x37C DUP5 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39F DUP4 PUSH2 0x36C JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0x3AB DUP3 PUSH2 0x38D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x309 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3CA PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x3D5 DUP2 DUP5 DUP5 PUSH2 0x396 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3F8 JUMPI PUSH2 0x3ED PUSH0 DUP3 PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x43D JUMPI PUSH2 0x40E DUP2 PUSH2 0x2DC JUMP JUMPDEST PUSH2 0x417 DUP5 PUSH2 0x2EE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x426 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x43A PUSH2 0x432 DUP6 PUSH2 0x2EE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3DA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x45D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x442 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x475 DUP4 DUP4 PUSH2 0x44E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x48E DUP3 PUSH2 0x248 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A7 JUMPI PUSH2 0x4A6 PUSH2 0x252 JUMP JUMPDEST JUMPDEST PUSH2 0x4B1 DUP3 SLOAD PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x4BC DUP3 DUP3 DUP6 PUSH2 0x3FC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4ED JUMPI PUSH0 DUP5 ISZERO PUSH2 0x4DB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4E5 DUP6 DUP3 PUSH2 0x46A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x54C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4FB DUP7 PUSH2 0x2DC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x522 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4FD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x53F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x53B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x44E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1648 DUP1 PUSH2 0x561 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E6 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x24E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x113F JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x13A3 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x757 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x79D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x42E JUMPI POP PUSH2 0x42D DUP3 PUSH2 0x841 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x14FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x470 SWAP1 PUSH2 0x14FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x492 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4CF PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP PUSH2 0x4DC DUP2 DUP6 DUP6 PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4FA PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP PUSH2 0x507 DUP6 DUP3 DUP6 PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0x512 DUP6 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x544 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x54D DUP2 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x557 DUP4 DUP4 PUSH2 0xA5A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x56C PUSH2 0x8AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DA DUP3 DUP3 PUSH2 0xB44 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x609 DUP2 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x613 DUP4 DUP4 PUSH2 0xC2E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6D0 SWAP1 PUSH2 0x14FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6FC SWAP1 PUSH2 0x14FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x747 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x747 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x72A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x761 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP PUSH2 0x76E DUP2 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x7A6 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x7AF DUP2 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x7B9 DUP4 DUP4 PUSH2 0xB44 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCAD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CE DUP5 DUP5 PUSH2 0x7BF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x950 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x941 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCAD JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA41 DUP4 DUP4 DUP4 PUSH2 0xE7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA57 DUP2 PUSH2 0xA52 PUSH2 0x8AA JUMP JUMPDEST PUSH2 0x1095 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xA65 DUP4 DUP4 PUSH2 0x65D JUMP JUMPDEST PUSH2 0xB3A JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xAD7 PUSH2 0x8AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xB3E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB4F DUP4 DUP4 PUSH2 0x65D JUMP JUMPDEST ISZERO PUSH2 0xC24 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBC1 PUSH2 0x8AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC28 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC95 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA9 PUSH0 DUP4 DUP4 PUSH2 0xE7C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE76 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE6D SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF9A JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF55 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x102B JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1088 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x109F DUP3 DUP3 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x10E2 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP3 SWAP2 SWAP1 PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111E DUP2 PUSH2 0x10EA JUMP JUMPDEST DUP2 EQ PUSH2 0x1128 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1139 DUP2 PUSH2 0x1115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1154 JUMPI PUSH2 0x1153 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1161 DUP5 DUP3 DUP6 ADD PUSH2 0x112B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117E DUP2 PUSH2 0x116A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1197 PUSH0 DUP4 ADD DUP5 PUSH2 0x1175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11DF DUP3 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x11E9 DUP2 DUP6 PUSH2 0x11A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x11F9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x1202 DUP2 PUSH2 0x11C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1225 DUP2 DUP5 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1256 DUP3 PUSH2 0x122D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1266 DUP2 PUSH2 0x124C JUMP JUMPDEST DUP2 EQ PUSH2 0x1270 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1281 DUP2 PUSH2 0x125D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1299 DUP2 PUSH2 0x1287 JUMP JUMPDEST DUP2 EQ PUSH2 0x12A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B4 DUP2 PUSH2 0x1290 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D0 JUMPI PUSH2 0x12CF PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12DD DUP6 DUP3 DUP7 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12EE DUP6 DUP3 DUP7 ADD PUSH2 0x12A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1301 DUP2 PUSH2 0x1287 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131A PUSH0 DUP4 ADD DUP5 PUSH2 0x12F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1337 JUMPI PUSH2 0x1336 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1344 DUP7 DUP3 DUP8 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1355 DUP7 DUP3 DUP8 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1366 DUP7 DUP3 DUP8 ADD PUSH2 0x12A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1382 DUP2 PUSH2 0x1370 JUMP JUMPDEST DUP2 EQ PUSH2 0x138C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x139D DUP2 PUSH2 0x1379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B8 JUMPI PUSH2 0x13B7 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13C5 DUP5 DUP3 DUP6 ADD PUSH2 0x138F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D7 DUP2 PUSH2 0x1370 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x13CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140C JUMPI PUSH2 0x140B PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1419 DUP6 DUP3 DUP7 ADD PUSH2 0x138F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x142A DUP6 DUP3 DUP7 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1449 DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1462 PUSH0 DUP4 ADD DUP5 PUSH2 0x1440 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147D JUMPI PUSH2 0x147C PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x148A DUP5 DUP3 DUP6 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14A9 JUMPI PUSH2 0x14A8 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B6 DUP6 DUP3 DUP7 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14C7 DUP6 DUP3 DUP7 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1515 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1528 JUMPI PUSH2 0x1527 PUSH2 0x14D1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1537 DUP2 PUSH2 0x124C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1550 PUSH0 DUP4 ADD DUP7 PUSH2 0x152E JUMP JUMPDEST PUSH2 0x155D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x156A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12F8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1585 PUSH0 DUP4 ADD DUP5 PUSH2 0x152E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15C2 DUP3 PUSH2 0x1287 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CD DUP4 PUSH2 0x1287 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15E5 JUMPI PUSH2 0x15E4 PUSH2 0x158B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15FE PUSH0 DUP4 ADD DUP6 PUSH2 0x152E JUMP JUMPDEST PUSH2 0x160B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13CE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x22 0xB4 0xEF 0xCE PUSH15 0xB9DA6292E1E51C6A8CF294931D9C46 0x2B 0xC9 EXTCODESIZE EXTCODESIZE SWAPN 0x9D 0xBE 0xB4 DUP6 DUP10 0xF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "306:473:1:-:0;;;430:151;;;;;;;;;;1582:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;485:42:1::1;2241:4:2;496:18:1;;516:10;485;;;:42;;:::i;:::-;;538:35;397:24;562:10;538;;;:35;;:::i;:::-;;306:473:::0;;6155:316:2;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2830:136::-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;306:473:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_122": {
									"entryPoint": 1873,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_45": {
									"entryPoint": 1913,
									"id": 45,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1014": {
									"entryPoint": 2225,
									"id": 1014,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1074": {
									"entryPoint": 3245,
									"id": 1074,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkRole_186": {
									"entryPoint": 2630,
									"id": 186,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_207": {
									"entryPoint": 4245,
									"id": 207,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_349": {
									"entryPoint": 2650,
									"id": 349,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_963": {
									"entryPoint": 3118,
									"id": 963,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1239": {
									"entryPoint": 2218,
									"id": 1239,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_387": {
									"entryPoint": 2884,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1122": {
									"entryPoint": 2243,
									"id": 1122,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_853": {
									"entryPoint": 2390,
									"id": 853,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_930": {
									"entryPoint": 3708,
									"id": 930,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_750": {
									"entryPoint": 1983,
									"id": 750,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_774": {
									"entryPoint": 1221,
									"id": 774,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_709": {
									"entryPoint": 1560,
									"id": 709,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_90": {
									"entryPoint": 1373,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_221": {
									"entryPoint": 1310,
									"id": 221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_240": {
									"entryPoint": 1339,
									"id": 240,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_173": {
									"entryPoint": 1629,
									"id": 173,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_81": {
									"entryPoint": 1503,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_669": {
									"entryPoint": 1077,
									"id": 669,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_282": {
									"entryPoint": 1380,
									"id": 282,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_259": {
									"entryPoint": 1949,
									"id": 259,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1280": {
									"entryPoint": 2113,
									"id": 1280,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_155": {
									"entryPoint": 956,
									"id": 155,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_678": {
									"entryPoint": 1729,
									"id": 678,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_696": {
									"entryPoint": 1255,
									"id": 696,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_806": {
									"entryPoint": 1264,
									"id": 806,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_733": {
									"entryPoint": 1879,
									"id": 733,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 5611,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5437,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4535,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5515,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 4985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9871:11",
										"nodeType": "YulBlock",
										"src": "0:9871:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "378:105:11",
													"nodeType": "YulBlock",
													"src": "378:105:11",
													"statements": [
														{
															"nativeSrc": "388:89:11",
															"nodeType": "YulAssignment",
															"src": "388:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:11",
																		"nodeType": "YulLiteral",
																		"src": "410:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:11"
																},
																"nativeSrc": "399:78:11",
																"nodeType": "YulFunctionCall",
																"src": "399:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:11",
														"nodeType": "YulTypedName",
														"src": "360:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:11",
														"nodeType": "YulTypedName",
														"src": "370:7:11",
														"type": ""
													}
												],
												"src": "334:149:11"
											},
											{
												"body": {
													"nativeSrc": "531:78:11",
													"nodeType": "YulBlock",
													"src": "531:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:11",
																"nodeType": "YulBlock",
																"src": "587:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:11",
																					"nodeType": "YulLiteral",
																					"src": "596:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "599:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:11"
																			},
																			"nativeSrc": "589:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:11"
																		},
																		"nativeSrc": "589:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:11"
																				},
																				"nativeSrc": "561:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:11"
																		},
																		"nativeSrc": "551:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:11"
																},
																"nativeSrc": "544:42:11",
																"nodeType": "YulFunctionCall",
																"src": "544:42:11"
															},
															"nativeSrc": "541:62:11",
															"nodeType": "YulIf",
															"src": "541:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:11",
														"nodeType": "YulTypedName",
														"src": "524:5:11",
														"type": ""
													}
												],
												"src": "489:120:11"
											},
											{
												"body": {
													"nativeSrc": "666:86:11",
													"nodeType": "YulBlock",
													"src": "666:86:11",
													"statements": [
														{
															"nativeSrc": "676:29:11",
															"nodeType": "YulAssignment",
															"src": "676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:11"
																},
																"nativeSrc": "685:20:11",
																"nodeType": "YulFunctionCall",
																"src": "685:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:11"
																},
																"nativeSrc": "714:32:11",
																"nodeType": "YulFunctionCall",
																"src": "714:32:11"
															},
															"nativeSrc": "714:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:11",
														"nodeType": "YulTypedName",
														"src": "644:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:11",
														"nodeType": "YulTypedName",
														"src": "652:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:11",
														"nodeType": "YulTypedName",
														"src": "660:5:11",
														"type": ""
													}
												],
												"src": "615:137:11"
											},
											{
												"body": {
													"nativeSrc": "823:262:11",
													"nodeType": "YulBlock",
													"src": "823:262:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:11",
																"nodeType": "YulBlock",
																"src": "869:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:11"
																			},
																			"nativeSrc": "871:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:11"
																		},
																		"nativeSrc": "871:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:11"
																		},
																		"nativeSrc": "840:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:11",
																		"nodeType": "YulLiteral",
																		"src": "865:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:11"
																},
																"nativeSrc": "836:32:11",
																"nodeType": "YulFunctionCall",
																"src": "836:32:11"
															},
															"nativeSrc": "833:119:11",
															"nodeType": "YulIf",
															"src": "833:119:11"
														},
														{
															"nativeSrc": "962:116:11",
															"nodeType": "YulBlock",
															"src": "962:116:11",
															"statements": [
																{
																	"nativeSrc": "977:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:11",
																		"nodeType": "YulLiteral",
																		"src": "991:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:11",
																			"nodeType": "YulTypedName",
																			"src": "981:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:11",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:11"
																				},
																				"nativeSrc": "1036:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:11"
																		},
																		"nativeSrc": "1016:52:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:11",
														"nodeType": "YulTypedName",
														"src": "793:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:11",
														"nodeType": "YulTypedName",
														"src": "804:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:11",
														"nodeType": "YulTypedName",
														"src": "816:6:11",
														"type": ""
													}
												],
												"src": "758:327:11"
											},
											{
												"body": {
													"nativeSrc": "1133:48:11",
													"nodeType": "YulBlock",
													"src": "1133:48:11",
													"statements": [
														{
															"nativeSrc": "1143:32:11",
															"nodeType": "YulAssignment",
															"src": "1143:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:11"
																		},
																		"nativeSrc": "1161:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:11"
																},
																"nativeSrc": "1154:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:11",
														"nodeType": "YulTypedName",
														"src": "1115:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:11",
														"nodeType": "YulTypedName",
														"src": "1125:7:11",
														"type": ""
													}
												],
												"src": "1091:90:11"
											},
											{
												"body": {
													"nativeSrc": "1246:50:11",
													"nodeType": "YulBlock",
													"src": "1246:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:11"
																		},
																		"nativeSrc": "1268:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:11"
																},
																"nativeSrc": "1256:34:11",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:11"
															},
															"nativeSrc": "1256:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:11",
														"nodeType": "YulTypedName",
														"src": "1234:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:11",
														"nodeType": "YulTypedName",
														"src": "1241:3:11",
														"type": ""
													}
												],
												"src": "1187:109:11"
											},
											{
												"body": {
													"nativeSrc": "1394:118:11",
													"nodeType": "YulBlock",
													"src": "1394:118:11",
													"statements": [
														{
															"nativeSrc": "1404:26:11",
															"nodeType": "YulAssignment",
															"src": "1404:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:11"
																},
																"nativeSrc": "1412:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:11"
																		},
																		"nativeSrc": "1487:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:11"
																},
																"nativeSrc": "1440:65:11",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:11"
															},
															"nativeSrc": "1440:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:11",
														"nodeType": "YulTypedName",
														"src": "1366:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:11",
														"nodeType": "YulTypedName",
														"src": "1378:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:11",
														"nodeType": "YulTypedName",
														"src": "1389:4:11",
														"type": ""
													}
												],
												"src": "1302:210:11"
											},
											{
												"body": {
													"nativeSrc": "1577:40:11",
													"nodeType": "YulBlock",
													"src": "1577:40:11",
													"statements": [
														{
															"nativeSrc": "1588:22:11",
															"nodeType": "YulAssignment",
															"src": "1588:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:11"
																},
																"nativeSrc": "1598:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:11",
														"nodeType": "YulTypedName",
														"src": "1560:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:11",
														"nodeType": "YulTypedName",
														"src": "1570:6:11",
														"type": ""
													}
												],
												"src": "1518:99:11"
											},
											{
												"body": {
													"nativeSrc": "1719:73:11",
													"nodeType": "YulBlock",
													"src": "1719:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:11"
																},
																"nativeSrc": "1729:19:11",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:11"
															},
															"nativeSrc": "1729:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:11"
														},
														{
															"nativeSrc": "1757:29:11",
															"nodeType": "YulAssignment",
															"src": "1757:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:11"
																},
																"nativeSrc": "1772:14:11",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:11",
														"nodeType": "YulTypedName",
														"src": "1691:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:11",
														"nodeType": "YulTypedName",
														"src": "1696:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:11",
														"nodeType": "YulTypedName",
														"src": "1707:11:11",
														"type": ""
													}
												],
												"src": "1623:169:11"
											},
											{
												"body": {
													"nativeSrc": "1860:77:11",
													"nodeType": "YulBlock",
													"src": "1860:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:11"
																},
																"nativeSrc": "1871:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:11"
															},
															"nativeSrc": "1871:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:11"
																		},
																		"nativeSrc": "1910:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:11"
																},
																"nativeSrc": "1903:27:11",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:11"
															},
															"nativeSrc": "1903:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:11",
														"nodeType": "YulTypedName",
														"src": "1842:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:11",
														"nodeType": "YulTypedName",
														"src": "1847:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:11",
														"nodeType": "YulTypedName",
														"src": "1852:6:11",
														"type": ""
													}
												],
												"src": "1798:139:11"
											},
											{
												"body": {
													"nativeSrc": "1991:54:11",
													"nodeType": "YulBlock",
													"src": "1991:54:11",
													"statements": [
														{
															"nativeSrc": "2001:38:11",
															"nodeType": "YulAssignment",
															"src": "2001:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:11"
																		},
																		"nativeSrc": "2015:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:11"
																		},
																		"nativeSrc": "2031:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:11"
																},
																"nativeSrc": "2011:28:11",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:11",
														"nodeType": "YulTypedName",
														"src": "1974:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:11",
														"nodeType": "YulTypedName",
														"src": "1984:6:11",
														"type": ""
													}
												],
												"src": "1943:102:11"
											},
											{
												"body": {
													"nativeSrc": "2143:285:11",
													"nodeType": "YulBlock",
													"src": "2143:285:11",
													"statements": [
														{
															"nativeSrc": "2153:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:11"
																},
																"nativeSrc": "2167:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:11",
															"nodeType": "YulAssignment",
															"src": "2215:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:11"
																},
																"nativeSrc": "2222:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:11"
																		},
																		"nativeSrc": "2337:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:11"
																},
																"nativeSrc": "2302:65:11",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:11"
															},
															"nativeSrc": "2302:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:11"
														},
														{
															"nativeSrc": "2376:46:11",
															"nodeType": "YulAssignment",
															"src": "2376:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:11"
																		},
																		"nativeSrc": "2392:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:11"
																},
																"nativeSrc": "2383:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:11",
														"nodeType": "YulTypedName",
														"src": "2124:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:11",
														"nodeType": "YulTypedName",
														"src": "2131:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:11",
														"nodeType": "YulTypedName",
														"src": "2139:3:11",
														"type": ""
													}
												],
												"src": "2051:377:11"
											},
											{
												"body": {
													"nativeSrc": "2552:195:11",
													"nodeType": "YulBlock",
													"src": "2552:195:11",
													"statements": [
														{
															"nativeSrc": "2562:26:11",
															"nodeType": "YulAssignment",
															"src": "2562:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:11"
																},
																"nativeSrc": "2570:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:11"
																		},
																		"nativeSrc": "2605:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:11"
																		},
																		"nativeSrc": "2624:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:11"
																},
																"nativeSrc": "2598:47:11",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:11"
															},
															"nativeSrc": "2598:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:11"
														},
														{
															"nativeSrc": "2654:86:11",
															"nodeType": "YulAssignment",
															"src": "2654:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:11"
																},
																"nativeSrc": "2662:78:11",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:11",
														"nodeType": "YulTypedName",
														"src": "2524:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:11",
														"nodeType": "YulTypedName",
														"src": "2536:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:11",
														"nodeType": "YulTypedName",
														"src": "2547:4:11",
														"type": ""
													}
												],
												"src": "2434:313:11"
											},
											{
												"body": {
													"nativeSrc": "2798:81:11",
													"nodeType": "YulBlock",
													"src": "2798:81:11",
													"statements": [
														{
															"nativeSrc": "2808:65:11",
															"nodeType": "YulAssignment",
															"src": "2808:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:11",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:11"
																},
																"nativeSrc": "2819:54:11",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:11",
														"nodeType": "YulTypedName",
														"src": "2780:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:11",
														"nodeType": "YulTypedName",
														"src": "2790:7:11",
														"type": ""
													}
												],
												"src": "2753:126:11"
											},
											{
												"body": {
													"nativeSrc": "2930:51:11",
													"nodeType": "YulBlock",
													"src": "2930:51:11",
													"statements": [
														{
															"nativeSrc": "2940:35:11",
															"nodeType": "YulAssignment",
															"src": "2940:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:11"
																},
																"nativeSrc": "2951:24:11",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:11",
														"nodeType": "YulTypedName",
														"src": "2912:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:11",
														"nodeType": "YulTypedName",
														"src": "2922:7:11",
														"type": ""
													}
												],
												"src": "2885:96:11"
											},
											{
												"body": {
													"nativeSrc": "3030:79:11",
													"nodeType": "YulBlock",
													"src": "3030:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:11",
																"nodeType": "YulBlock",
																"src": "3087:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:11"
																			},
																			"nativeSrc": "3089:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:11"
																		},
																		"nativeSrc": "3089:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:11"
																				},
																				"nativeSrc": "3060:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:11"
																		},
																		"nativeSrc": "3050:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:11"
																},
																"nativeSrc": "3043:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:11"
															},
															"nativeSrc": "3040:63:11",
															"nodeType": "YulIf",
															"src": "3040:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:11",
														"nodeType": "YulTypedName",
														"src": "3023:5:11",
														"type": ""
													}
												],
												"src": "2987:122:11"
											},
											{
												"body": {
													"nativeSrc": "3167:87:11",
													"nodeType": "YulBlock",
													"src": "3167:87:11",
													"statements": [
														{
															"nativeSrc": "3177:29:11",
															"nodeType": "YulAssignment",
															"src": "3177:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:11"
																},
																"nativeSrc": "3186:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:11"
																},
																"nativeSrc": "3215:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:11"
															},
															"nativeSrc": "3215:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:11",
														"nodeType": "YulTypedName",
														"src": "3145:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:11",
														"nodeType": "YulTypedName",
														"src": "3153:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:11",
														"nodeType": "YulTypedName",
														"src": "3161:5:11",
														"type": ""
													}
												],
												"src": "3115:139:11"
											},
											{
												"body": {
													"nativeSrc": "3305:32:11",
													"nodeType": "YulBlock",
													"src": "3305:32:11",
													"statements": [
														{
															"nativeSrc": "3315:16:11",
															"nodeType": "YulAssignment",
															"src": "3315:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:11",
																"nodeType": "YulIdentifier",
																"src": "3326:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:11",
														"nodeType": "YulTypedName",
														"src": "3287:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:11",
														"nodeType": "YulTypedName",
														"src": "3297:7:11",
														"type": ""
													}
												],
												"src": "3260:77:11"
											},
											{
												"body": {
													"nativeSrc": "3386:79:11",
													"nodeType": "YulBlock",
													"src": "3386:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:11",
																"nodeType": "YulBlock",
																"src": "3443:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:11"
																			},
																			"nativeSrc": "3445:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:11"
																		},
																		"nativeSrc": "3445:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:11"
																				},
																				"nativeSrc": "3416:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:11"
																		},
																		"nativeSrc": "3406:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:11"
																},
																"nativeSrc": "3399:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:11"
															},
															"nativeSrc": "3396:63:11",
															"nodeType": "YulIf",
															"src": "3396:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:11",
														"nodeType": "YulTypedName",
														"src": "3379:5:11",
														"type": ""
													}
												],
												"src": "3343:122:11"
											},
											{
												"body": {
													"nativeSrc": "3523:87:11",
													"nodeType": "YulBlock",
													"src": "3523:87:11",
													"statements": [
														{
															"nativeSrc": "3533:29:11",
															"nodeType": "YulAssignment",
															"src": "3533:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:11"
																},
																"nativeSrc": "3542:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:11"
																},
																"nativeSrc": "3571:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:11"
															},
															"nativeSrc": "3571:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:11",
														"nodeType": "YulTypedName",
														"src": "3501:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:11",
														"nodeType": "YulTypedName",
														"src": "3509:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:11",
														"nodeType": "YulTypedName",
														"src": "3517:5:11",
														"type": ""
													}
												],
												"src": "3471:139:11"
											},
											{
												"body": {
													"nativeSrc": "3699:391:11",
													"nodeType": "YulBlock",
													"src": "3699:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:11",
																"nodeType": "YulBlock",
																"src": "3745:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:11"
																			},
																			"nativeSrc": "3747:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:11"
																		},
																		"nativeSrc": "3747:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:11"
																		},
																		"nativeSrc": "3716:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:11"
																},
																"nativeSrc": "3712:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:11"
															},
															"nativeSrc": "3709:119:11",
															"nodeType": "YulIf",
															"src": "3709:119:11"
														},
														{
															"nativeSrc": "3838:117:11",
															"nodeType": "YulBlock",
															"src": "3838:117:11",
															"statements": [
																{
																	"nativeSrc": "3853:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:11"
																				},
																				"nativeSrc": "3913:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:11"
																		},
																		"nativeSrc": "3892:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:11",
															"nodeType": "YulBlock",
															"src": "3965:118:11",
															"statements": [
																{
																	"nativeSrc": "3980:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:11"
																				},
																				"nativeSrc": "4041:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:11"
																		},
																		"nativeSrc": "4020:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:11",
														"nodeType": "YulTypedName",
														"src": "3661:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:11",
														"nodeType": "YulTypedName",
														"src": "3672:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:11",
														"nodeType": "YulTypedName",
														"src": "3684:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:11",
														"nodeType": "YulTypedName",
														"src": "3692:6:11",
														"type": ""
													}
												],
												"src": "3616:474:11"
											},
											{
												"body": {
													"nativeSrc": "4161:53:11",
													"nodeType": "YulBlock",
													"src": "4161:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4178:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4178:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4201:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4201:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4183:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "4183:17:11"
																		},
																		"nativeSrc": "4183:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:11"
																},
																"nativeSrc": "4171:37:11",
																"nodeType": "YulFunctionCall",
																"src": "4171:37:11"
															},
															"nativeSrc": "4171:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "4171:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4096:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:11",
														"nodeType": "YulTypedName",
														"src": "4149:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4156:3:11",
														"nodeType": "YulTypedName",
														"src": "4156:3:11",
														"type": ""
													}
												],
												"src": "4096:118:11"
											},
											{
												"body": {
													"nativeSrc": "4318:124:11",
													"nodeType": "YulBlock",
													"src": "4318:124:11",
													"statements": [
														{
															"nativeSrc": "4328:26:11",
															"nodeType": "YulAssignment",
															"src": "4328:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:11"
																},
																"nativeSrc": "4336:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4336:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4408:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4421:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4432:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4432:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4417:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:11"
																		},
																		"nativeSrc": "4417:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4364:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4364:43:11"
																},
																"nativeSrc": "4364:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4364:71:11"
															},
															"nativeSrc": "4364:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4364:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4220:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:11",
														"nodeType": "YulTypedName",
														"src": "4290:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4302:6:11",
														"nodeType": "YulTypedName",
														"src": "4302:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4313:4:11",
														"nodeType": "YulTypedName",
														"src": "4313:4:11",
														"type": ""
													}
												],
												"src": "4220:222:11"
											},
											{
												"body": {
													"nativeSrc": "4548:519:11",
													"nodeType": "YulBlock",
													"src": "4548:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4594:83:11",
																"nodeType": "YulBlock",
																"src": "4594:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4596:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4596:77:11"
																			},
																			"nativeSrc": "4596:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4596:79:11"
																		},
																		"nativeSrc": "4596:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4596:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4569:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4569:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4578:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4578:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4565:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:11"
																		},
																		"nativeSrc": "4565:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4565:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4590:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4590:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4561:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:11"
																},
																"nativeSrc": "4561:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4561:32:11"
															},
															"nativeSrc": "4558:119:11",
															"nodeType": "YulIf",
															"src": "4558:119:11"
														},
														{
															"nativeSrc": "4687:117:11",
															"nodeType": "YulBlock",
															"src": "4687:117:11",
															"statements": [
																{
																	"nativeSrc": "4702:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4702:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4716:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4716:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4706:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4706:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4731:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4731:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4766:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4766:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4777:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4777:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4762:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4762:3:11"
																				},
																				"nativeSrc": "4762:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4762:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4786:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4786:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4741:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4741:20:11"
																		},
																		"nativeSrc": "4741:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4731:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4731:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4814:118:11",
															"nodeType": "YulBlock",
															"src": "4814:118:11",
															"statements": [
																{
																	"nativeSrc": "4829:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4829:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4843:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4843:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4833:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4833:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4859:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4859:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4894:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4894:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4905:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4905:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4890:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4890:3:11"
																				},
																				"nativeSrc": "4890:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4890:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4914:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4914:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4869:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4869:20:11"
																		},
																		"nativeSrc": "4869:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4869:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4859:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4859:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4942:118:11",
															"nodeType": "YulBlock",
															"src": "4942:118:11",
															"statements": [
																{
																	"nativeSrc": "4957:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4957:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4971:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4971:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4961:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4961:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4987:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4987:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5022:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5022:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5033:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5033:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5018:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5018:3:11"
																				},
																				"nativeSrc": "5018:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5018:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5042:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5042:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4997:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4997:20:11"
																		},
																		"nativeSrc": "4997:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4997:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4987:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4987:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4448:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4502:9:11",
														"nodeType": "YulTypedName",
														"src": "4502:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4513:7:11",
														"nodeType": "YulTypedName",
														"src": "4513:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4525:6:11",
														"nodeType": "YulTypedName",
														"src": "4525:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4533:6:11",
														"nodeType": "YulTypedName",
														"src": "4533:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4541:6:11",
														"nodeType": "YulTypedName",
														"src": "4541:6:11",
														"type": ""
													}
												],
												"src": "4448:619:11"
											},
											{
												"body": {
													"nativeSrc": "5118:32:11",
													"nodeType": "YulBlock",
													"src": "5118:32:11",
													"statements": [
														{
															"nativeSrc": "5128:16:11",
															"nodeType": "YulAssignment",
															"src": "5128:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "5139:5:11",
																"nodeType": "YulIdentifier",
																"src": "5139:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5128:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "5128:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5073:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:11",
														"nodeType": "YulTypedName",
														"src": "5100:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5110:7:11",
														"nodeType": "YulTypedName",
														"src": "5110:7:11",
														"type": ""
													}
												],
												"src": "5073:77:11"
											},
											{
												"body": {
													"nativeSrc": "5199:79:11",
													"nodeType": "YulBlock",
													"src": "5199:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5256:16:11",
																"nodeType": "YulBlock",
																"src": "5256:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5265:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5265:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5268:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5268:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5258:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5258:6:11"
																			},
																			"nativeSrc": "5258:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5258:12:11"
																		},
																		"nativeSrc": "5258:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5258:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5222:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5222:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5247:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5247:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5229:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "5229:17:11"
																				},
																				"nativeSrc": "5229:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5229:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5219:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:11"
																		},
																		"nativeSrc": "5219:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5219:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5212:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:11"
																},
																"nativeSrc": "5212:43:11",
																"nodeType": "YulFunctionCall",
																"src": "5212:43:11"
															},
															"nativeSrc": "5209:63:11",
															"nodeType": "YulIf",
															"src": "5209:63:11"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5156:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5192:5:11",
														"nodeType": "YulTypedName",
														"src": "5192:5:11",
														"type": ""
													}
												],
												"src": "5156:122:11"
											},
											{
												"body": {
													"nativeSrc": "5336:87:11",
													"nodeType": "YulBlock",
													"src": "5336:87:11",
													"statements": [
														{
															"nativeSrc": "5346:29:11",
															"nodeType": "YulAssignment",
															"src": "5346:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5368:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5368:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5355:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5355:12:11"
																},
																"nativeSrc": "5355:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5355:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5346:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5346:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5411:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5411:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5384:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "5384:26:11"
																},
																"nativeSrc": "5384:33:11",
																"nodeType": "YulFunctionCall",
																"src": "5384:33:11"
															},
															"nativeSrc": "5384:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "5384:33:11"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5284:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5314:6:11",
														"nodeType": "YulTypedName",
														"src": "5314:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5322:3:11",
														"nodeType": "YulTypedName",
														"src": "5322:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5330:5:11",
														"nodeType": "YulTypedName",
														"src": "5330:5:11",
														"type": ""
													}
												],
												"src": "5284:139:11"
											},
											{
												"body": {
													"nativeSrc": "5495:263:11",
													"nodeType": "YulBlock",
													"src": "5495:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5541:83:11",
																"nodeType": "YulBlock",
																"src": "5541:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5543:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5543:77:11"
																			},
																			"nativeSrc": "5543:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5543:79:11"
																		},
																		"nativeSrc": "5543:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5543:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5516:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5516:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5525:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5525:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5512:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5512:3:11"
																		},
																		"nativeSrc": "5512:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5512:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5537:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5537:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5508:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5508:3:11"
																},
																"nativeSrc": "5508:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5508:32:11"
															},
															"nativeSrc": "5505:119:11",
															"nodeType": "YulIf",
															"src": "5505:119:11"
														},
														{
															"nativeSrc": "5634:117:11",
															"nodeType": "YulBlock",
															"src": "5634:117:11",
															"statements": [
																{
																	"nativeSrc": "5649:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5649:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5663:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5663:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5653:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5653:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5678:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5678:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5713:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5713:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5724:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5724:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5709:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5709:3:11"
																				},
																				"nativeSrc": "5709:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5709:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5733:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5733:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5688:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5688:20:11"
																		},
																		"nativeSrc": "5688:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5688:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5678:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5678:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5429:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5465:9:11",
														"nodeType": "YulTypedName",
														"src": "5465:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5476:7:11",
														"nodeType": "YulTypedName",
														"src": "5476:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5488:6:11",
														"nodeType": "YulTypedName",
														"src": "5488:6:11",
														"type": ""
													}
												],
												"src": "5429:329:11"
											},
											{
												"body": {
													"nativeSrc": "5829:53:11",
													"nodeType": "YulBlock",
													"src": "5829:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5846:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5846:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5869:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5869:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5851:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "5851:17:11"
																		},
																		"nativeSrc": "5851:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5851:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5839:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5839:6:11"
																},
																"nativeSrc": "5839:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5839:37:11"
															},
															"nativeSrc": "5839:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "5839:37:11"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5764:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:11",
														"nodeType": "YulTypedName",
														"src": "5817:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5824:3:11",
														"nodeType": "YulTypedName",
														"src": "5824:3:11",
														"type": ""
													}
												],
												"src": "5764:118:11"
											},
											{
												"body": {
													"nativeSrc": "5986:124:11",
													"nodeType": "YulBlock",
													"src": "5986:124:11",
													"statements": [
														{
															"nativeSrc": "5996:26:11",
															"nodeType": "YulAssignment",
															"src": "5996:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6008:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6008:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6019:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6004:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:11"
																},
																"nativeSrc": "6004:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6004:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5996:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5996:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6076:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6089:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6089:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6100:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6100:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6085:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:11"
																		},
																		"nativeSrc": "6085:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6085:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6032:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6032:43:11"
																},
																"nativeSrc": "6032:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6032:71:11"
															},
															"nativeSrc": "6032:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6032:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5888:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5958:9:11",
														"nodeType": "YulTypedName",
														"src": "5958:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5970:6:11",
														"nodeType": "YulTypedName",
														"src": "5970:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5981:4:11",
														"nodeType": "YulTypedName",
														"src": "5981:4:11",
														"type": ""
													}
												],
												"src": "5888:222:11"
											},
											{
												"body": {
													"nativeSrc": "6199:391:11",
													"nodeType": "YulBlock",
													"src": "6199:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6245:83:11",
																"nodeType": "YulBlock",
																"src": "6245:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6247:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6247:77:11"
																			},
																			"nativeSrc": "6247:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6247:79:11"
																		},
																		"nativeSrc": "6247:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6247:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6220:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6220:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6229:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6229:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6216:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6216:3:11"
																		},
																		"nativeSrc": "6216:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6216:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6241:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6241:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6212:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6212:3:11"
																},
																"nativeSrc": "6212:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6212:32:11"
															},
															"nativeSrc": "6209:119:11",
															"nodeType": "YulIf",
															"src": "6209:119:11"
														},
														{
															"nativeSrc": "6338:117:11",
															"nodeType": "YulBlock",
															"src": "6338:117:11",
															"statements": [
																{
																	"nativeSrc": "6353:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6353:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6367:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6367:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6357:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6357:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6382:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6382:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6417:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6417:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6428:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6428:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6413:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6413:3:11"
																				},
																				"nativeSrc": "6413:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6413:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6437:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6437:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6392:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6392:20:11"
																		},
																		"nativeSrc": "6392:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6392:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6382:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6382:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6465:118:11",
															"nodeType": "YulBlock",
															"src": "6465:118:11",
															"statements": [
																{
																	"nativeSrc": "6480:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6480:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6494:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6494:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6484:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6484:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6510:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6510:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6545:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6545:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6556:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6556:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6541:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6541:3:11"
																				},
																				"nativeSrc": "6541:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6541:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6565:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6565:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6520:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6520:20:11"
																		},
																		"nativeSrc": "6520:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6520:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6510:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6510:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6116:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6161:9:11",
														"nodeType": "YulTypedName",
														"src": "6161:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6172:7:11",
														"nodeType": "YulTypedName",
														"src": "6172:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6184:6:11",
														"nodeType": "YulTypedName",
														"src": "6184:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6192:6:11",
														"nodeType": "YulTypedName",
														"src": "6192:6:11",
														"type": ""
													}
												],
												"src": "6116:474:11"
											},
											{
												"body": {
													"nativeSrc": "6639:43:11",
													"nodeType": "YulBlock",
													"src": "6639:43:11",
													"statements": [
														{
															"nativeSrc": "6649:27:11",
															"nodeType": "YulAssignment",
															"src": "6649:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6664:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6664:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6671:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6671:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6660:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:11"
																},
																"nativeSrc": "6660:16:11",
																"nodeType": "YulFunctionCall",
																"src": "6660:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6649:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "6649:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6596:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6621:5:11",
														"nodeType": "YulTypedName",
														"src": "6621:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6631:7:11",
														"nodeType": "YulTypedName",
														"src": "6631:7:11",
														"type": ""
													}
												],
												"src": "6596:86:11"
											},
											{
												"body": {
													"nativeSrc": "6749:51:11",
													"nodeType": "YulBlock",
													"src": "6749:51:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6766:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6766:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6787:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6787:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6771:15:11",
																			"nodeType": "YulIdentifier",
																			"src": "6771:15:11"
																		},
																		"nativeSrc": "6771:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6771:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6759:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:11"
																},
																"nativeSrc": "6759:35:11",
																"nodeType": "YulFunctionCall",
																"src": "6759:35:11"
															},
															"nativeSrc": "6759:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "6759:35:11"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6688:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6737:5:11",
														"nodeType": "YulTypedName",
														"src": "6737:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6744:3:11",
														"nodeType": "YulTypedName",
														"src": "6744:3:11",
														"type": ""
													}
												],
												"src": "6688:112:11"
											},
											{
												"body": {
													"nativeSrc": "6900:120:11",
													"nodeType": "YulBlock",
													"src": "6900:120:11",
													"statements": [
														{
															"nativeSrc": "6910:26:11",
															"nodeType": "YulAssignment",
															"src": "6910:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6922:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6922:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6918:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6918:3:11"
																},
																"nativeSrc": "6918:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6918:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6910:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6910:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6986:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6986:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6999:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6999:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7010:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7010:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6995:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6995:3:11"
																		},
																		"nativeSrc": "6995:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6995:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6946:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "6946:39:11"
																},
																"nativeSrc": "6946:67:11",
																"nodeType": "YulFunctionCall",
																"src": "6946:67:11"
															},
															"nativeSrc": "6946:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "6946:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6806:214:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6872:9:11",
														"nodeType": "YulTypedName",
														"src": "6872:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6884:6:11",
														"nodeType": "YulTypedName",
														"src": "6884:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6895:4:11",
														"nodeType": "YulTypedName",
														"src": "6895:4:11",
														"type": ""
													}
												],
												"src": "6806:214:11"
											},
											{
												"body": {
													"nativeSrc": "7092:263:11",
													"nodeType": "YulBlock",
													"src": "7092:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7138:83:11",
																"nodeType": "YulBlock",
																"src": "7138:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7140:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7140:77:11"
																			},
																			"nativeSrc": "7140:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7140:79:11"
																		},
																		"nativeSrc": "7140:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7140:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7113:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7113:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7122:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7122:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7109:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:11"
																		},
																		"nativeSrc": "7109:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7134:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7134:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7105:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7105:3:11"
																},
																"nativeSrc": "7105:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7105:32:11"
															},
															"nativeSrc": "7102:119:11",
															"nodeType": "YulIf",
															"src": "7102:119:11"
														},
														{
															"nativeSrc": "7231:117:11",
															"nodeType": "YulBlock",
															"src": "7231:117:11",
															"statements": [
																{
																	"nativeSrc": "7246:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7246:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7260:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7260:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7250:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7250:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7275:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7275:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7310:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7310:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7321:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7321:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7306:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7306:3:11"
																				},
																				"nativeSrc": "7306:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7306:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7330:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7330:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7285:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7285:20:11"
																		},
																		"nativeSrc": "7285:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7285:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7275:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7275:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7026:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7062:9:11",
														"nodeType": "YulTypedName",
														"src": "7062:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7073:7:11",
														"nodeType": "YulTypedName",
														"src": "7073:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7085:6:11",
														"nodeType": "YulTypedName",
														"src": "7085:6:11",
														"type": ""
													}
												],
												"src": "7026:329:11"
											},
											{
												"body": {
													"nativeSrc": "7444:391:11",
													"nodeType": "YulBlock",
													"src": "7444:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7490:83:11",
																"nodeType": "YulBlock",
																"src": "7490:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7492:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7492:77:11"
																			},
																			"nativeSrc": "7492:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7492:79:11"
																		},
																		"nativeSrc": "7492:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7492:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7465:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7465:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7474:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7474:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7461:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7461:3:11"
																		},
																		"nativeSrc": "7461:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7461:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7486:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7486:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7457:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7457:3:11"
																},
																"nativeSrc": "7457:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7457:32:11"
															},
															"nativeSrc": "7454:119:11",
															"nodeType": "YulIf",
															"src": "7454:119:11"
														},
														{
															"nativeSrc": "7583:117:11",
															"nodeType": "YulBlock",
															"src": "7583:117:11",
															"statements": [
																{
																	"nativeSrc": "7598:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7598:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7612:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7612:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7602:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7602:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7627:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7627:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7662:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7662:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7673:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7673:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7658:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7658:3:11"
																				},
																				"nativeSrc": "7658:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7658:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7682:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7682:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7637:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7637:20:11"
																		},
																		"nativeSrc": "7637:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7637:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7627:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7627:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7710:118:11",
															"nodeType": "YulBlock",
															"src": "7710:118:11",
															"statements": [
																{
																	"nativeSrc": "7725:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7725:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7739:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7739:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7729:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7729:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7755:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7755:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7790:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7790:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7801:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7801:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7786:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7786:3:11"
																				},
																				"nativeSrc": "7786:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7786:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7810:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7810:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7765:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7765:20:11"
																		},
																		"nativeSrc": "7765:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7765:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7755:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7755:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7361:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7406:9:11",
														"nodeType": "YulTypedName",
														"src": "7406:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7417:7:11",
														"nodeType": "YulTypedName",
														"src": "7417:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7429:6:11",
														"nodeType": "YulTypedName",
														"src": "7429:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7437:6:11",
														"nodeType": "YulTypedName",
														"src": "7437:6:11",
														"type": ""
													}
												],
												"src": "7361:474:11"
											},
											{
												"body": {
													"nativeSrc": "7869:152:11",
													"nodeType": "YulBlock",
													"src": "7869:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7886:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7886:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:77:11",
																		"nodeType": "YulLiteral",
																		"src": "7889:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7879:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7879:6:11"
																},
																"nativeSrc": "7879:88:11",
																"nodeType": "YulFunctionCall",
																"src": "7879:88:11"
															},
															"nativeSrc": "7879:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "7879:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7983:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7983:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7986:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7986:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7976:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7976:6:11"
																},
																"nativeSrc": "7976:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7976:15:11"
															},
															"nativeSrc": "7976:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7976:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8007:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8007:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8010:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8010:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8000:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:11"
																},
																"nativeSrc": "8000:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8000:15:11"
															},
															"nativeSrc": "8000:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8000:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7841:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7841:180:11"
											},
											{
												"body": {
													"nativeSrc": "8078:269:11",
													"nodeType": "YulBlock",
													"src": "8078:269:11",
													"statements": [
														{
															"nativeSrc": "8088:22:11",
															"nodeType": "YulAssignment",
															"src": "8088:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8102:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8102:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8108:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8108:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8098:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8098:3:11"
																},
																"nativeSrc": "8098:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8098:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8088:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8088:6:11"
																}
															]
														},
														{
															"nativeSrc": "8119:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8119:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8149:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8149:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8155:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8155:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8145:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8145:3:11"
																},
																"nativeSrc": "8145:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8145:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8123:18:11",
																	"nodeType": "YulTypedName",
																	"src": "8123:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8196:51:11",
																"nodeType": "YulBlock",
																"src": "8196:51:11",
																"statements": [
																	{
																		"nativeSrc": "8210:27:11",
																		"nodeType": "YulAssignment",
																		"src": "8210:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8224:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "8224:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8232:4:11",
																					"nodeType": "YulLiteral",
																					"src": "8232:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8220:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8220:3:11"
																			},
																			"nativeSrc": "8220:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8220:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8210:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8210:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8176:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "8176:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8169:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8169:6:11"
																},
																"nativeSrc": "8169:26:11",
																"nodeType": "YulFunctionCall",
																"src": "8169:26:11"
															},
															"nativeSrc": "8166:81:11",
															"nodeType": "YulIf",
															"src": "8166:81:11"
														},
														{
															"body": {
																"nativeSrc": "8299:42:11",
																"nodeType": "YulBlock",
																"src": "8299:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8313:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8313:16:11"
																			},
																			"nativeSrc": "8313:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8313:18:11"
																		},
																		"nativeSrc": "8313:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8313:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8263:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "8263:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8286:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8286:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8294:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8294:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8283:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "8283:2:11"
																		},
																		"nativeSrc": "8283:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8283:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8260:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8260:2:11"
																},
																"nativeSrc": "8260:38:11",
																"nodeType": "YulFunctionCall",
																"src": "8260:38:11"
															},
															"nativeSrc": "8257:84:11",
															"nodeType": "YulIf",
															"src": "8257:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8027:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8062:4:11",
														"nodeType": "YulTypedName",
														"src": "8062:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8071:6:11",
														"nodeType": "YulTypedName",
														"src": "8071:6:11",
														"type": ""
													}
												],
												"src": "8027:320:11"
											},
											{
												"body": {
													"nativeSrc": "8418:53:11",
													"nodeType": "YulBlock",
													"src": "8418:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8435:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8435:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8458:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "8458:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8440:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "8440:17:11"
																		},
																		"nativeSrc": "8440:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8440:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8428:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8428:6:11"
																},
																"nativeSrc": "8428:37:11",
																"nodeType": "YulFunctionCall",
																"src": "8428:37:11"
															},
															"nativeSrc": "8428:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "8428:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8353:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8406:5:11",
														"nodeType": "YulTypedName",
														"src": "8406:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8413:3:11",
														"nodeType": "YulTypedName",
														"src": "8413:3:11",
														"type": ""
													}
												],
												"src": "8353:118:11"
											},
											{
												"body": {
													"nativeSrc": "8631:288:11",
													"nodeType": "YulBlock",
													"src": "8631:288:11",
													"statements": [
														{
															"nativeSrc": "8641:26:11",
															"nodeType": "YulAssignment",
															"src": "8641:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8653:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8653:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8664:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8664:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8649:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8649:3:11"
																},
																"nativeSrc": "8649:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8649:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8641:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8641:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8721:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8721:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8734:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8734:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8745:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8745:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8730:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8730:3:11"
																		},
																		"nativeSrc": "8730:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8730:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8677:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "8677:43:11"
																},
																"nativeSrc": "8677:71:11",
																"nodeType": "YulFunctionCall",
																"src": "8677:71:11"
															},
															"nativeSrc": "8677:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "8677:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8802:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8802:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8815:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8815:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8826:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8826:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8811:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8811:3:11"
																		},
																		"nativeSrc": "8811:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8811:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8758:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "8758:43:11"
																},
																"nativeSrc": "8758:72:11",
																"nodeType": "YulFunctionCall",
																"src": "8758:72:11"
															},
															"nativeSrc": "8758:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "8758:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8884:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8884:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8897:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8897:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8908:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8908:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8893:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8893:3:11"
																		},
																		"nativeSrc": "8893:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8893:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8840:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "8840:43:11"
																},
																"nativeSrc": "8840:72:11",
																"nodeType": "YulFunctionCall",
																"src": "8840:72:11"
															},
															"nativeSrc": "8840:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "8840:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8477:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8587:9:11",
														"nodeType": "YulTypedName",
														"src": "8587:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8599:6:11",
														"nodeType": "YulTypedName",
														"src": "8599:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8607:6:11",
														"nodeType": "YulTypedName",
														"src": "8607:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8615:6:11",
														"nodeType": "YulTypedName",
														"src": "8615:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8626:4:11",
														"nodeType": "YulTypedName",
														"src": "8626:4:11",
														"type": ""
													}
												],
												"src": "8477:442:11"
											},
											{
												"body": {
													"nativeSrc": "9023:124:11",
													"nodeType": "YulBlock",
													"src": "9023:124:11",
													"statements": [
														{
															"nativeSrc": "9033:26:11",
															"nodeType": "YulAssignment",
															"src": "9033:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9045:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9045:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9056:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9056:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9041:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9041:3:11"
																},
																"nativeSrc": "9041:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9041:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9033:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9033:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9113:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9113:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9126:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9126:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9137:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9137:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9122:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9122:3:11"
																		},
																		"nativeSrc": "9122:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9122:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9069:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9069:43:11"
																},
																"nativeSrc": "9069:71:11",
																"nodeType": "YulFunctionCall",
																"src": "9069:71:11"
															},
															"nativeSrc": "9069:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "9069:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8925:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8995:9:11",
														"nodeType": "YulTypedName",
														"src": "8995:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9007:6:11",
														"nodeType": "YulTypedName",
														"src": "9007:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9018:4:11",
														"nodeType": "YulTypedName",
														"src": "9018:4:11",
														"type": ""
													}
												],
												"src": "8925:222:11"
											},
											{
												"body": {
													"nativeSrc": "9181:152:11",
													"nodeType": "YulBlock",
													"src": "9181:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9198:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9198:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9201:77:11",
																		"nodeType": "YulLiteral",
																		"src": "9201:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9191:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9191:6:11"
																},
																"nativeSrc": "9191:88:11",
																"nodeType": "YulFunctionCall",
																"src": "9191:88:11"
															},
															"nativeSrc": "9191:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "9191:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9295:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9295:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9298:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9298:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9288:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9288:6:11"
																},
																"nativeSrc": "9288:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9288:15:11"
															},
															"nativeSrc": "9288:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9288:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9319:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9319:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9322:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9322:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9312:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9312:6:11"
																},
																"nativeSrc": "9312:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9312:15:11"
															},
															"nativeSrc": "9312:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9312:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9153:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "9153:180:11"
											},
											{
												"body": {
													"nativeSrc": "9383:147:11",
													"nodeType": "YulBlock",
													"src": "9383:147:11",
													"statements": [
														{
															"nativeSrc": "9393:25:11",
															"nodeType": "YulAssignment",
															"src": "9393:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9416:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9416:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9398:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9398:17:11"
																},
																"nativeSrc": "9398:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9398:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9393:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9393:1:11"
																}
															]
														},
														{
															"nativeSrc": "9427:25:11",
															"nodeType": "YulAssignment",
															"src": "9427:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9450:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9450:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9432:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9432:17:11"
																},
																"nativeSrc": "9432:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9432:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9427:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9427:1:11"
																}
															]
														},
														{
															"nativeSrc": "9461:16:11",
															"nodeType": "YulAssignment",
															"src": "9461:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9472:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9472:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9475:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9475:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9468:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9468:3:11"
																},
																"nativeSrc": "9468:9:11",
																"nodeType": "YulFunctionCall",
																"src": "9468:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9461:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9461:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9501:22:11",
																"nodeType": "YulBlock",
																"src": "9501:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9503:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "9503:16:11"
																			},
																			"nativeSrc": "9503:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9503:18:11"
																		},
																		"nativeSrc": "9503:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9503:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9493:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9493:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9496:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9496:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9490:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "9490:2:11"
																},
																"nativeSrc": "9490:10:11",
																"nodeType": "YulFunctionCall",
																"src": "9490:10:11"
															},
															"nativeSrc": "9487:36:11",
															"nodeType": "YulIf",
															"src": "9487:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9339:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9370:1:11",
														"nodeType": "YulTypedName",
														"src": "9370:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9373:1:11",
														"nodeType": "YulTypedName",
														"src": "9373:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9379:3:11",
														"nodeType": "YulTypedName",
														"src": "9379:3:11",
														"type": ""
													}
												],
												"src": "9339:191:11"
											},
											{
												"body": {
													"nativeSrc": "9662:206:11",
													"nodeType": "YulBlock",
													"src": "9662:206:11",
													"statements": [
														{
															"nativeSrc": "9672:26:11",
															"nodeType": "YulAssignment",
															"src": "9672:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9684:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9684:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9695:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9695:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9680:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9680:3:11"
																},
																"nativeSrc": "9680:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9680:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9672:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9672:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9752:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9752:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9765:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9765:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9776:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9776:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9761:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9761:3:11"
																		},
																		"nativeSrc": "9761:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9761:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9708:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9708:43:11"
																},
																"nativeSrc": "9708:71:11",
																"nodeType": "YulFunctionCall",
																"src": "9708:71:11"
															},
															"nativeSrc": "9708:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "9708:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9833:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9833:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9846:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9846:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9857:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9857:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:11"
																		},
																		"nativeSrc": "9842:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9789:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9789:43:11"
																},
																"nativeSrc": "9789:72:11",
																"nodeType": "YulFunctionCall",
																"src": "9789:72:11"
															},
															"nativeSrc": "9789:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "9789:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "9536:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9626:9:11",
														"nodeType": "YulTypedName",
														"src": "9626:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9638:6:11",
														"nodeType": "YulTypedName",
														"src": "9638:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9646:6:11",
														"nodeType": "YulTypedName",
														"src": "9646:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9657:4:11",
														"nodeType": "YulTypedName",
														"src": "9657:4:11",
														"type": ""
													}
												],
												"src": "9536:332:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610114575f3560e01c806340c10f19116100a0578063a217fddf1161006f578063a217fddf14610304578063a9059cbb14610322578063d539139314610352578063d547741f14610370578063dd62ed3e1461038c57610114565b806340c10f191461026a57806370a082311461028657806391d14854146102b657806395d89b41146102e657610114565b806323b872dd116100e757806323b872dd146101b4578063248a9ca3146101e45780632f2ff15d14610214578063313ce5671461023057806336568abe1461024e57610114565b806301ffc9a71461011857806306fdde0314610148578063095ea7b31461016657806318160ddd14610196575b5f5ffd5b610132600480360381019061012d919061113f565b6103bc565b60405161013f9190611184565b60405180910390f35b610150610435565b60405161015d919061120d565b60405180910390f35b610180600480360381019061017b91906112ba565b6104c5565b60405161018d9190611184565b60405180910390f35b61019e6104e7565b6040516101ab9190611307565b60405180910390f35b6101ce60048036038101906101c99190611320565b6104f0565b6040516101db9190611184565b60405180910390f35b6101fe60048036038101906101f991906113a3565b61051e565b60405161020b91906113dd565b60405180910390f35b61022e600480360381019061022991906113f6565b61053b565b005b61023861055d565b604051610245919061144f565b60405180910390f35b610268600480360381019061026391906113f6565b610564565b005b610284600480360381019061027f91906112ba565b6105df565b005b6102a0600480360381019061029b9190611468565b610618565b6040516102ad9190611307565b60405180910390f35b6102d060048036038101906102cb91906113f6565b61065d565b6040516102dd9190611184565b60405180910390f35b6102ee6106c1565b6040516102fb919061120d565b60405180910390f35b61030c610751565b60405161031991906113dd565b60405180910390f35b61033c600480360381019061033791906112ba565b610757565b6040516103499190611184565b60405180910390f35b61035a610779565b60405161036791906113dd565b60405180910390f35b61038a600480360381019061038591906113f6565b61079d565b005b6103a660048036038101906103a19190611493565b6107bf565b6040516103b39190611307565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042e575061042d82610841565b5b9050919050565b606060038054610444906114fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610470906114fe565b80156104bb5780601f10610492576101008083540402835291602001916104bb565b820191905f5260205f20905b81548152906001019060200180831161049e57829003601f168201915b5050505050905090565b5f5f6104cf6108aa565b90506104dc8185856108b1565b600191505092915050565b5f600254905090565b5f5f6104fa6108aa565b90506105078582856108c3565b610512858585610956565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b6105448261051e565b61054d81610a46565b6105578383610a5a565b50505050565b5f5f905090565b61056c6108aa565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105d0576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105da8282610b44565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661060981610a46565b6106138383610c2e565b505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6060600480546106d0906114fe565b80601f01602080910402602001604051908101604052809291908181526020018280546106fc906114fe565b80156107475780601f1061071e57610100808354040283529160200191610747565b820191905f5260205f20905b81548152906001019060200180831161072a57829003601f168201915b5050505050905090565b5f5f1b81565b5f5f6107616108aa565b905061076e818585610956565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6107a68261051e565b6107af81610a46565b6107b98383610b44565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6108be8383836001610cad565b505050565b5f6108ce84846107bf565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156109505781811015610941578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109389392919061153d565b60405180910390fd5b61094f84848484035f610cad565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109c6575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109bd9190611572565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a36575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a2d9190611572565b60405180910390fd5b610a41838383610e7c565b505050565b610a5781610a526108aa565b611095565b50565b5f610a65838361065d565b610b3a57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ad76108aa565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610b3e565b5f90505b92915050565b5f610b4f838361065d565b15610c24575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bc16108aa565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610c28565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c9e575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c959190611572565b60405180910390fd5b610ca95f8383610e7c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d1d575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d149190611572565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d8d575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d849190611572565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e76578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e6d9190611307565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ecc578060025f828254610ec091906115b8565b92505081905550610f9a565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f55578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f4c9392919061153d565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fe1578060025f828254039250508190555061102b565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110889190611307565b60405180910390a3505050565b61109f828261065d565b6110e25780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016110d99291906115eb565b60405180910390fd5b5050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61111e816110ea565b8114611128575f5ffd5b50565b5f8135905061113981611115565b92915050565b5f60208284031215611154576111536110e6565b5b5f6111618482850161112b565b91505092915050565b5f8115159050919050565b61117e8161116a565b82525050565b5f6020820190506111975f830184611175565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6111df8261119d565b6111e981856111a7565b93506111f98185602086016111b7565b611202816111c5565b840191505092915050565b5f6020820190508181035f83015261122581846111d5565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112568261122d565b9050919050565b6112668161124c565b8114611270575f5ffd5b50565b5f813590506112818161125d565b92915050565b5f819050919050565b61129981611287565b81146112a3575f5ffd5b50565b5f813590506112b481611290565b92915050565b5f5f604083850312156112d0576112cf6110e6565b5b5f6112dd85828601611273565b92505060206112ee858286016112a6565b9150509250929050565b61130181611287565b82525050565b5f60208201905061131a5f8301846112f8565b92915050565b5f5f5f60608486031215611337576113366110e6565b5b5f61134486828701611273565b935050602061135586828701611273565b9250506040611366868287016112a6565b9150509250925092565b5f819050919050565b61138281611370565b811461138c575f5ffd5b50565b5f8135905061139d81611379565b92915050565b5f602082840312156113b8576113b76110e6565b5b5f6113c58482850161138f565b91505092915050565b6113d781611370565b82525050565b5f6020820190506113f05f8301846113ce565b92915050565b5f5f6040838503121561140c5761140b6110e6565b5b5f6114198582860161138f565b925050602061142a85828601611273565b9150509250929050565b5f60ff82169050919050565b61144981611434565b82525050565b5f6020820190506114625f830184611440565b92915050565b5f6020828403121561147d5761147c6110e6565b5b5f61148a84828501611273565b91505092915050565b5f5f604083850312156114a9576114a86110e6565b5b5f6114b685828601611273565b92505060206114c785828601611273565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061151557607f821691505b602082108103611528576115276114d1565b5b50919050565b6115378161124c565b82525050565b5f6060820190506115505f83018661152e565b61155d60208301856112f8565b61156a60408301846112f8565b949350505050565b5f6020820190506115855f83018461152e565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115c282611287565b91506115cd83611287565b92508282019050808211156115e5576115e461158b565b5b92915050565b5f6040820190506115fe5f83018561152e565b61160b60208301846113ce565b939250505056fea26469706673582212200922b4efce6eb9da6292e1e51c6a8cf294931d9c462bc93b3be79dbeb485890f64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E6 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x24E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x113F JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x13A3 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x757 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x79D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x42E JUMPI POP PUSH2 0x42D DUP3 PUSH2 0x841 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x14FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x470 SWAP1 PUSH2 0x14FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x492 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4CF PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP PUSH2 0x4DC DUP2 DUP6 DUP6 PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4FA PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP PUSH2 0x507 DUP6 DUP3 DUP6 PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0x512 DUP6 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x544 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x54D DUP2 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x557 DUP4 DUP4 PUSH2 0xA5A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x56C PUSH2 0x8AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DA DUP3 DUP3 PUSH2 0xB44 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x609 DUP2 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x613 DUP4 DUP4 PUSH2 0xC2E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6D0 SWAP1 PUSH2 0x14FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6FC SWAP1 PUSH2 0x14FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x747 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x747 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x72A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x761 PUSH2 0x8AA JUMP JUMPDEST SWAP1 POP PUSH2 0x76E DUP2 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x7A6 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x7AF DUP2 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x7B9 DUP4 DUP4 PUSH2 0xB44 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCAD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CE DUP5 DUP5 PUSH2 0x7BF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x950 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x941 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCAD JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA41 DUP4 DUP4 DUP4 PUSH2 0xE7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA57 DUP2 PUSH2 0xA52 PUSH2 0x8AA JUMP JUMPDEST PUSH2 0x1095 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xA65 DUP4 DUP4 PUSH2 0x65D JUMP JUMPDEST PUSH2 0xB3A JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xAD7 PUSH2 0x8AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xB3E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB4F DUP4 DUP4 PUSH2 0x65D JUMP JUMPDEST ISZERO PUSH2 0xC24 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBC1 PUSH2 0x8AA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC28 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC95 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA9 PUSH0 DUP4 DUP4 PUSH2 0xE7C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE76 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE6D SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF9A JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF55 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x102B JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1088 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x109F DUP3 DUP3 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x10E2 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP3 SWAP2 SWAP1 PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111E DUP2 PUSH2 0x10EA JUMP JUMPDEST DUP2 EQ PUSH2 0x1128 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1139 DUP2 PUSH2 0x1115 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1154 JUMPI PUSH2 0x1153 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1161 DUP5 DUP3 DUP6 ADD PUSH2 0x112B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117E DUP2 PUSH2 0x116A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1197 PUSH0 DUP4 ADD DUP5 PUSH2 0x1175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11DF DUP3 PUSH2 0x119D JUMP JUMPDEST PUSH2 0x11E9 DUP2 DUP6 PUSH2 0x11A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x11F9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x1202 DUP2 PUSH2 0x11C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1225 DUP2 DUP5 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1256 DUP3 PUSH2 0x122D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1266 DUP2 PUSH2 0x124C JUMP JUMPDEST DUP2 EQ PUSH2 0x1270 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1281 DUP2 PUSH2 0x125D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1299 DUP2 PUSH2 0x1287 JUMP JUMPDEST DUP2 EQ PUSH2 0x12A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B4 DUP2 PUSH2 0x1290 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D0 JUMPI PUSH2 0x12CF PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12DD DUP6 DUP3 DUP7 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12EE DUP6 DUP3 DUP7 ADD PUSH2 0x12A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1301 DUP2 PUSH2 0x1287 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131A PUSH0 DUP4 ADD DUP5 PUSH2 0x12F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1337 JUMPI PUSH2 0x1336 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1344 DUP7 DUP3 DUP8 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1355 DUP7 DUP3 DUP8 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1366 DUP7 DUP3 DUP8 ADD PUSH2 0x12A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1382 DUP2 PUSH2 0x1370 JUMP JUMPDEST DUP2 EQ PUSH2 0x138C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x139D DUP2 PUSH2 0x1379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B8 JUMPI PUSH2 0x13B7 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13C5 DUP5 DUP3 DUP6 ADD PUSH2 0x138F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D7 DUP2 PUSH2 0x1370 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x13CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140C JUMPI PUSH2 0x140B PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1419 DUP6 DUP3 DUP7 ADD PUSH2 0x138F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x142A DUP6 DUP3 DUP7 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1449 DUP2 PUSH2 0x1434 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1462 PUSH0 DUP4 ADD DUP5 PUSH2 0x1440 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147D JUMPI PUSH2 0x147C PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x148A DUP5 DUP3 DUP6 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14A9 JUMPI PUSH2 0x14A8 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B6 DUP6 DUP3 DUP7 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14C7 DUP6 DUP3 DUP7 ADD PUSH2 0x1273 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1515 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1528 JUMPI PUSH2 0x1527 PUSH2 0x14D1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1537 DUP2 PUSH2 0x124C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1550 PUSH0 DUP4 ADD DUP7 PUSH2 0x152E JUMP JUMPDEST PUSH2 0x155D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x156A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12F8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1585 PUSH0 DUP4 ADD DUP5 PUSH2 0x152E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15C2 DUP3 PUSH2 0x1287 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CD DUP4 PUSH2 0x1287 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15E5 JUMPI PUSH2 0x15E4 PUSH2 0x158B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15FE PUSH0 DUP4 ADD DUP6 PUSH2 0x152E JUMP JUMPDEST PUSH2 0x160B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13CE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x22 0xB4 0xEF 0xCE PUSH15 0xB9DA6292E1E51C6A8CF294931D9C46 0x2B 0xC9 EXTCODESIZE EXTCODESIZE SWAPN 0x9D 0xBE 0xB4 DUP6 DUP10 0xF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "306:473:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3786:120:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;706:70:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5304:245:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;589:109:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2933:116:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:136:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2196:49:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;359:62:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3455:140:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2541:202:2;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;1760:89:5:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;3786:120:2:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;4202:136::-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;706:70:1:-;756:5;772:1;765:8;;706:70;:::o;5304:245:2:-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;589:109:1:-;397:24;2473:16:2;2484:4;2473:10;:16::i;:::-;673:17:1::1;679:2;683:6;673:5;:17::i;:::-;589:109:::0;;;:::o;2933:116:5:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2830:136:2:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;1962:93:5:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;2196:49:2:-;2241:4;2196:49;;;:::o;3244:178:5:-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;359:62:1:-;397:24;359:62;:::o;4618:138:2:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;3455:140:5:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;730:146:9:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8630:128:5:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;3175:103:2:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;6708:317::-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;7362:208:5:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;9605:432::-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;3408:197:2:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;88:117:11:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:118::-;4183:24;4201:5;4183:24;:::i;:::-;4178:3;4171:37;4096:118;;:::o;4220:222::-;4313:4;4351:2;4340:9;4336:18;4328:26;;4364:71;4432:1;4421:9;4417:17;4408:6;4364:71;:::i;:::-;4220:222;;;;:::o;4448:619::-;4525:6;4533;4541;4590:2;4578:9;4569:7;4565:23;4561:32;4558:119;;;4596:79;;:::i;:::-;4558:119;4716:1;4741:53;4786:7;4777:6;4766:9;4762:22;4741:53;:::i;:::-;4731:63;;4687:117;4843:2;4869:53;4914:7;4905:6;4894:9;4890:22;4869:53;:::i;:::-;4859:63;;4814:118;4971:2;4997:53;5042:7;5033:6;5022:9;5018:22;4997:53;:::i;:::-;4987:63;;4942:118;4448:619;;;;;:::o;5073:77::-;5110:7;5139:5;5128:16;;5073:77;;;:::o;5156:122::-;5229:24;5247:5;5229:24;:::i;:::-;5222:5;5219:35;5209:63;;5268:1;5265;5258:12;5209:63;5156:122;:::o;5284:139::-;5330:5;5368:6;5355:20;5346:29;;5384:33;5411:5;5384:33;:::i;:::-;5284:139;;;;:::o;5429:329::-;5488:6;5537:2;5525:9;5516:7;5512:23;5508:32;5505:119;;;5543:79;;:::i;:::-;5505:119;5663:1;5688:53;5733:7;5724:6;5713:9;5709:22;5688:53;:::i;:::-;5678:63;;5634:117;5429:329;;;;:::o;5764:118::-;5851:24;5869:5;5851:24;:::i;:::-;5846:3;5839:37;5764:118;;:::o;5888:222::-;5981:4;6019:2;6008:9;6004:18;5996:26;;6032:71;6100:1;6089:9;6085:17;6076:6;6032:71;:::i;:::-;5888:222;;;;:::o;6116:474::-;6184:6;6192;6241:2;6229:9;6220:7;6216:23;6212:32;6209:119;;;6247:79;;:::i;:::-;6209:119;6367:1;6392:53;6437:7;6428:6;6417:9;6413:22;6392:53;:::i;:::-;6382:63;;6338:117;6494:2;6520:53;6565:7;6556:6;6545:9;6541:22;6520:53;:::i;:::-;6510:63;;6465:118;6116:474;;;;;:::o;6596:86::-;6631:7;6671:4;6664:5;6660:16;6649:27;;6596:86;;;:::o;6688:112::-;6771:22;6787:5;6771:22;:::i;:::-;6766:3;6759:35;6688:112;;:::o;6806:214::-;6895:4;6933:2;6922:9;6918:18;6910:26;;6946:67;7010:1;6999:9;6995:17;6986:6;6946:67;:::i;:::-;6806:214;;;;:::o;7026:329::-;7085:6;7134:2;7122:9;7113:7;7109:23;7105:32;7102:119;;;7140:79;;:::i;:::-;7102:119;7260:1;7285:53;7330:7;7321:6;7310:9;7306:22;7285:53;:::i;:::-;7275:63;;7231:117;7026:329;;;;:::o;7361:474::-;7429:6;7437;7486:2;7474:9;7465:7;7461:23;7457:32;7454:119;;;7492:79;;:::i;:::-;7454:119;7612:1;7637:53;7682:7;7673:6;7662:9;7658:22;7637:53;:::i;:::-;7627:63;;7583:117;7739:2;7765:53;7810:7;7801:6;7790:9;7786:22;7765:53;:::i;:::-;7755:63;;7710:118;7361:474;;;;;:::o;7841:180::-;7889:77;7886:1;7879:88;7986:4;7983:1;7976:15;8010:4;8007:1;8000:15;8027:320;8071:6;8108:1;8102:4;8098:12;8088:22;;8155:1;8149:4;8145:12;8176:18;8166:81;;8232:4;8224:6;8220:17;8210:27;;8166:81;8294:2;8286:6;8283:14;8263:18;8260:38;8257:84;;8313:18;;:::i;:::-;8257:84;8078:269;8027:320;;;:::o;8353:118::-;8440:24;8458:5;8440:24;:::i;:::-;8435:3;8428:37;8353:118;;:::o;8477:442::-;8626:4;8664:2;8653:9;8649:18;8641:26;;8677:71;8745:1;8734:9;8730:17;8721:6;8677:71;:::i;:::-;8758:72;8826:2;8815:9;8811:18;8802:6;8758:72;:::i;:::-;8840;8908:2;8897:9;8893:18;8884:6;8840:72;:::i;:::-;8477:442;;;;;;:::o;8925:222::-;9018:4;9056:2;9045:9;9041:18;9033:26;;9069:71;9137:1;9126:9;9122:17;9113:6;9069:71;:::i;:::-;8925:222;;;;:::o;9153:180::-;9201:77;9198:1;9191:88;9298:4;9295:1;9288:15;9322:4;9319:1;9312:15;9339:191;9379:3;9398:20;9416:1;9398:20;:::i;:::-;9393:25;;9432:20;9450:1;9432:20;:::i;:::-;9427:25;;9475:1;9472;9468:9;9461:16;;9496:3;9493:1;9490:10;9487:36;;;9503:18;;:::i;:::-;9487:36;9339:191;;;;:::o;9536:332::-;9657:4;9695:2;9684:9;9680:18;9672:26;;9708:71;9776:1;9765:9;9761:17;9752:6;9708:71;:::i;:::-;9789:72;9857:2;9846:9;9842:18;9833:6;9789:72;:::i;:::-;9536:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1140800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "351",
								"MINTER_ROLE()": "391",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2873",
								"decimals()": "426",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3188",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 306,
									"end": 779,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 306,
									"end": 779,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 430,
									"end": 581,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 430,
									"end": 581,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 430,
									"end": 581,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 430,
									"end": 581,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 430,
									"end": 581,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 430,
									"end": 581,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 430,
									"end": 581,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 430,
									"end": 581,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 430,
									"end": 581,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 430,
									"end": 581,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 430,
									"end": 581,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "D"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "5363686F6C617220506F696E7400000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "5350540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 485,
									"end": 527,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2241,
									"end": 2245,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 514,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 514,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 516,
									"end": 526,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 485,
									"end": 495,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 485,
									"end": 495,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 495,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 485,
									"end": 527,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 527,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 485,
									"end": 527,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 485,
									"end": 527,
									"modifierDepth": 1,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 485,
									"end": 527,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 485,
									"end": 527,
									"modifierDepth": 1,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 538,
									"end": 573,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 397,
									"end": 421,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 562,
									"end": 572,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 538,
									"end": 548,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 538,
									"end": 548,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 538,
									"end": 548,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 538,
									"end": 573,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 538,
									"end": 573,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 538,
									"end": 573,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 538,
									"end": 573,
									"modifierDepth": 1,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 538,
									"end": 573,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 538,
									"end": 573,
									"modifierDepth": 1,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 306,
									"end": 779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 306,
									"end": 779,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 6261,
									"end": 6265,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6267,
									"end": 6274,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 6253,
									"end": 6275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6312,
									"end": 6319,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 6373,
									"end": 6385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 2,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 2
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 2941,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2951,
									"end": 2958,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2830,
									"end": 2966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 306,
									"end": 779,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 306,
									"end": 779,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 306,
									"end": 779,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 306,
									"end": 779,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 779,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 306,
									"end": 779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 779,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200922b4efce6eb9da6292e1e51c6a8cf294931d9c462bc93b3be79dbeb485890f64736f6c634300081e0033",
									".code": [
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "40C10F19"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "A217FDDF"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "A217FDDF"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "D5391393"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "D547741F"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "40C10F19"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "91D14854"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "248A9CA3"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "2F2FF15D"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "36568ABE"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 779,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 706,
											"end": 776,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 706,
											"end": 776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 706,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 706,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 706,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 706,
											"end": 776,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 706,
											"end": 776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 706,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 776,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 706,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 706,
											"end": 776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 706,
											"end": 776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 706,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 706,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 706,
											"end": 776,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 706,
											"end": 776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 706,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 776,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 706,
											"end": 776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 706,
											"end": 776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 706,
											"end": 776,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 706,
											"end": 776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 706,
											"end": 776,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 589,
											"end": 698,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 589,
											"end": 698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 589,
											"end": 698,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 589,
											"end": 698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 589,
											"end": 698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 589,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 589,
											"end": 698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 589,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 589,
											"end": 698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 359,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 359,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 359,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 359,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 359,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 359,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 359,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 359,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 359,
											"end": 421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 359,
											"end": 421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 359,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 359,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 359,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 359,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 359,
											"end": 421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 359,
											"end": 421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 359,
											"end": 421,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 359,
											"end": 421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 359,
											"end": 421,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 2,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 706,
											"end": 776,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 706,
											"end": 776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 756,
											"end": 761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 773,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 765,
											"end": 773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 706,
											"end": 776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 706,
											"end": 776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 2,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 589,
											"end": 698,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 589,
											"end": 698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 397,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 679,
											"end": 681,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 683,
											"end": 689,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 673,
											"end": 678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 673,
											"end": 690,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 589,
											"end": 698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 359,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 359,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 397,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 359,
											"end": 421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 359,
											"end": 421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 5,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 5,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 2,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 2,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7432,
											"end": 7439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7476,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 7528,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7362,
											"end": 7570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 5,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 5,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 4183,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4171,
											"end": 4208,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4417,
											"end": 4434,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4364,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4569,
											"end": 4576,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4565,
											"end": 4588,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4561,
											"end": 4593,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 4596,
											"end": 4675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 4786,
											"end": 4793,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4777,
											"end": 4783,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4762,
											"end": 4784,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 4741,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4687,
											"end": 4804,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 4914,
											"end": 4921,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4894,
											"end": 4903,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 4869,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4932,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4971,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 4997,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 5060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 5067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5110,
											"end": 5117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5144,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5073,
											"end": 5150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 5247,
											"end": 5252,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 5229,
											"end": 5253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5222,
											"end": 5227,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5219,
											"end": 5254,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5270,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5156,
											"end": 5278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 5384,
											"end": 5417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5284,
											"end": 5423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5539,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5516,
											"end": 5523,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5512,
											"end": 5535,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5508,
											"end": 5540,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 5543,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 5733,
											"end": 5740,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5713,
											"end": 5722,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5709,
											"end": 5731,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 5688,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5634,
											"end": 5751,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 5851,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5846,
											"end": 5849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5876,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5981,
											"end": 5985,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6008,
											"end": 6017,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6004,
											"end": 6022,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6098,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6085,
											"end": 6102,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 6032,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 6110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6190,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6192,
											"end": 6198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6241,
											"end": 6243,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6229,
											"end": 6238,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6220,
											"end": 6227,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6216,
											"end": 6239,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6212,
											"end": 6244,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 6247,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 6437,
											"end": 6444,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6428,
											"end": 6434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6417,
											"end": 6426,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6435,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 6392,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 6565,
											"end": 6572,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6556,
											"end": 6562,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6541,
											"end": 6563,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 6520,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6465,
											"end": 6583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6631,
											"end": 6638,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6675,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6664,
											"end": 6669,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6660,
											"end": 6676,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6596,
											"end": 6682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 6787,
											"end": 6792,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 6771,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6766,
											"end": 6769,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6759,
											"end": 6794,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6688,
											"end": 6800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6895,
											"end": 6899,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6922,
											"end": 6931,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 7010,
											"end": 7011,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6999,
											"end": 7008,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6995,
											"end": 7012,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6986,
											"end": 6992,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 6946,
											"end": 7013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 7020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7136,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7122,
											"end": 7131,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7120,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7109,
											"end": 7132,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7105,
											"end": 7137,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 7140,
											"end": 7219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7260,
											"end": 7261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 7330,
											"end": 7337,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7310,
											"end": 7319,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7306,
											"end": 7328,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 7285,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7275,
											"end": 7338,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7275,
											"end": 7338,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7231,
											"end": 7348,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7026,
											"end": 7355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7429,
											"end": 7435,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7488,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7474,
											"end": 7483,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7465,
											"end": 7472,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7461,
											"end": 7484,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7489,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 7492,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7612,
											"end": 7613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 7682,
											"end": 7689,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7671,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7658,
											"end": 7680,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 7637,
											"end": 7690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7583,
											"end": 7700,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7739,
											"end": 7741,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 7810,
											"end": 7817,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7801,
											"end": 7807,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7790,
											"end": 7799,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7786,
											"end": 7808,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 7765,
											"end": 7818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7818,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7818,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7710,
											"end": 7828,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7841,
											"end": 8021,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 7841,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7889,
											"end": 7966,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7886,
											"end": 7887,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7967,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 7990,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 7983,
											"end": 7984,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7976,
											"end": 7991,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8010,
											"end": 8014,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8007,
											"end": 8008,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8000,
											"end": 8015,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8071,
											"end": 8077,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8109,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 8102,
											"end": 8106,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8098,
											"end": 8110,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 8088,
											"end": 8110,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8088,
											"end": 8110,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8155,
											"end": 8156,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8149,
											"end": 8153,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8145,
											"end": 8157,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8236,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 8224,
											"end": 8230,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8220,
											"end": 8237,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8210,
											"end": 8237,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8210,
											"end": 8237,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8294,
											"end": 8296,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8286,
											"end": 8292,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8283,
											"end": 8297,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8298,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 8313,
											"end": 8331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8347,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8027,
											"end": 8347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 8458,
											"end": 8463,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 8440,
											"end": 8464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8435,
											"end": 8438,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8428,
											"end": 8465,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8626,
											"end": 8630,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8666,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8653,
											"end": 8662,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8649,
											"end": 8667,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8641,
											"end": 8667,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8641,
											"end": 8667,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 8745,
											"end": 8746,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8734,
											"end": 8743,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8730,
											"end": 8747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8721,
											"end": 8727,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 8677,
											"end": 8748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 8826,
											"end": 8828,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8815,
											"end": 8824,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8811,
											"end": 8829,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8802,
											"end": 8808,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 8758,
											"end": 8830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 8908,
											"end": 8910,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8897,
											"end": 8906,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8893,
											"end": 8911,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8884,
											"end": 8890,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 8840,
											"end": 8912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 8919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9018,
											"end": 9022,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9058,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9045,
											"end": 9054,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9041,
											"end": 9059,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9033,
											"end": 9059,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9033,
											"end": 9059,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 9137,
											"end": 9138,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9126,
											"end": 9135,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9122,
											"end": 9139,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9113,
											"end": 9119,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 9069,
											"end": 9140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8925,
											"end": 9147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9153,
											"end": 9333,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 9153,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9201,
											"end": 9278,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9198,
											"end": 9199,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9191,
											"end": 9279,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9298,
											"end": 9302,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 9295,
											"end": 9296,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9288,
											"end": 9303,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9322,
											"end": 9326,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9319,
											"end": 9320,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9312,
											"end": 9327,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9379,
											"end": 9382,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9398,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 9416,
											"end": 9417,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 9398,
											"end": 9418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9418,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 9398,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9393,
											"end": 9418,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9393,
											"end": 9418,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9432,
											"end": 9452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 9450,
											"end": 9451,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9432,
											"end": 9452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 9432,
											"end": 9452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9432,
											"end": 9452,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 9432,
											"end": 9452,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9427,
											"end": 9452,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9427,
											"end": 9452,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9475,
											"end": 9476,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9472,
											"end": 9473,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9468,
											"end": 9477,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9461,
											"end": 9477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9461,
											"end": 9477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9496,
											"end": 9499,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9493,
											"end": 9494,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9490,
											"end": 9500,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9487,
											"end": 9523,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9487,
											"end": 9523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 9487,
											"end": 9523,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 9503,
											"end": 9521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9487,
											"end": 9523,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 9487,
											"end": 9523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9339,
											"end": 9530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9657,
											"end": 9661,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9695,
											"end": 9697,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9684,
											"end": 9693,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9680,
											"end": 9698,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9672,
											"end": 9698,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9672,
											"end": 9698,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9708,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 9776,
											"end": 9777,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9774,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9761,
											"end": 9778,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9752,
											"end": 9758,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9708,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 9708,
											"end": 9779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9708,
											"end": 9779,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 9708,
											"end": 9779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9789,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 9857,
											"end": 9859,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9846,
											"end": 9855,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9833,
											"end": 9839,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9789,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 9789,
											"end": 9861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9789,
											"end": 9861,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 9789,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9536,
											"end": 9868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/ScholarClaimer.sol",
								"contracts/ScholarPoint.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/IAccessControl.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/IERC20.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol",
								"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ScholarPoint.sol\":\"ScholarPoint\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ScholarPoint.sol\":{\"keccak256\":\"0xd9050e07c47cad759ba2c74974011a926f1be952541f11ac0f753bc26c29a0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1336480bc7e28c23342fdc1fda50e7617fee980460485f42fc5465029708788\",\"dweb:/ipfs/QmNZpBXtgCzqBjffLtMbpxC14m66vJt4pbJrrTtYYYw1r5\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 631,
								"contract": "contracts/ScholarPoint.sol:ScholarPoint",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 637,
								"contract": "contracts/ScholarPoint.sol:ScholarPoint",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 639,
								"contract": "contracts/ScholarPoint.sol:ScholarPoint",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 641,
								"contract": "contracts/ScholarPoint.sol:ScholarPoint",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 643,
								"contract": "contracts/ScholarPoint.sol:ScholarPoint",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 119,
								"contract": "contracts/ScholarPoint.sol:ScholarPoint",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)114_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)114_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)114_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)114_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 111,
										"contract": "contracts/ScholarPoint.sol:ScholarPoint",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 113,
										"contract": "contracts/ScholarPoint.sol:ScholarPoint",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 119,
								"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)114_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)114_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)114_storage"
							},
							"t_struct(RoleData)114_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 111,
										"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 113,
										"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 631,
								"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 637,
								"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 639,
								"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 641,
								"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 643,
								"contract": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ScholarClaimer.sol": {
				"ast": {
					"absolutePath": "contracts/ScholarClaimer.sol",
					"exportedSymbols": {
						"AccessControl": [
							388
						],
						"Context": [
							1257
						],
						"ERC165": [
							1281
						],
						"ERC20": [
							1123
						],
						"IAccessControl": [
							471
						],
						"IERC165": [
							1293
						],
						"IERC20": [
							1201
						],
						"IERC20Errors": [
							513
						],
						"IERC20Metadata": [
							1227
						],
						"ScholarPoint": [
							91
						],
						"ScholarPointClaimer": [
							32
						]
					},
					"id": 33,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "contracts/ScholarPoint.sol",
							"file": "./ScholarPoint.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 33,
							"sourceUnit": 92,
							"src": "61:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ScholarPointClaimer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 32,
							"linearizedBaseContracts": [
								32
							],
							"name": "ScholarPointClaimer",
							"nameLocation": "102:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 5,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "159:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 32,
									"src": "129:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ScholarPoint_$91",
										"typeString": "contract ScholarPoint"
									},
									"typeName": {
										"id": 4,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3,
											"name": "ScholarPoint",
											"nameLocations": [
												"129:12:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 91,
											"src": "129:12:0"
										},
										"referencedDeclaration": 91,
										"src": "129:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ScholarPoint_$91",
											"typeString": "contract ScholarPoint"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "204:19:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "206:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ScholarPoint_$91",
															"typeString": "contract ScholarPoint"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 12,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "214:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ScholarPoint_$91",
															"typeString": "contract ScholarPoint"
														}
													},
													"src": "206:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ScholarPoint_$91",
														"typeString": "contract ScholarPoint"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "206:14:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "196:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "183:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ScholarPoint_$91",
													"typeString": "contract ScholarPoint"
												},
												"typeName": {
													"id": 7,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 6,
														"name": "ScholarPoint",
														"nameLocations": [
															"183:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 91,
														"src": "183:12:0"
													},
													"referencedDeclaration": 91,
													"src": "183:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ScholarPoint_$91",
														"typeString": "contract ScholarPoint"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "182:21:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "204:0:0"
									},
									"scope": 32,
									"src": "171:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "344:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 25,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "366:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "370:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "366:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 27,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "378:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 22,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "355:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ScholarPoint_$91",
																"typeString": "contract ScholarPoint"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "361:4:0",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 81,
														"src": "355:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "355:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "355:30:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "231:67:0",
										"text": "Gọi kèm amount để mint đúng amount token cho msg.sender"
									},
									"functionSelector": "379607f5",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "313:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "327:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "319:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "318:16:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "344:0:0"
									},
									"scope": 32,
									"src": "304:89:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 33,
							"src": "93:303:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:365:0"
				},
				"id": 0
			},
			"contracts/ScholarPoint.sol": {
				"ast": {
					"absolutePath": "contracts/ScholarPoint.sol",
					"exportedSymbols": {
						"AccessControl": [
							388
						],
						"Context": [
							1257
						],
						"ERC165": [
							1281
						],
						"ERC20": [
							1123
						],
						"IAccessControl": [
							471
						],
						"IERC165": [
							1293
						],
						"IERC20": [
							1201
						],
						"IERC20Errors": [
							513
						],
						"IERC20Metadata": [
							1227
						],
						"ScholarPoint": [
							91
						]
					},
					"id": 92,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 34,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol",
							"file": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol",
							"id": 35,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 92,
							"sourceUnit": 1124,
							"src": "61:118:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol",
							"file": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol",
							"id": 36,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 92,
							"sourceUnit": 389,
							"src": "181:121:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 37,
										"name": "ERC20",
										"nameLocations": [
											"331:5:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1123,
										"src": "331:5:1"
									},
									"id": 38,
									"nodeType": "InheritanceSpecifier",
									"src": "331:5:1"
								},
								{
									"baseName": {
										"id": 39,
										"name": "AccessControl",
										"nameLocations": [
											"338:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 388,
										"src": "338:13:1"
									},
									"id": 40,
									"nodeType": "InheritanceSpecifier",
									"src": "338:13:1"
								}
							],
							"canonicalName": "ScholarPoint",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 91,
							"linearizedBaseContracts": [
								91,
								388,
								1281,
								1293,
								471,
								1123,
								513,
								1227,
								1201,
								1257
							],
							"name": "ScholarPoint",
							"nameLocation": "315:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 45,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "383:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 91,
									"src": "359:62:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 41,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "359:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 43,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "407:13:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 42,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "397:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 44,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "397:24:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "474:107:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 53,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "496:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 54,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "516:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "520:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "516:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "485:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "485:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "485:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 59,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "549:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 60,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "562:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "566:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "562:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 58,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "538:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "538:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "538:35:1"
											}
										]
									},
									"id": 65,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5363686f6c617220506f696e74",
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "450:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_94740631bb78698a16e45220a499861bd8ff6c746e5c82974ddae3710e4f61af",
														"typeString": "literal_string \"Scholar Point\""
													},
													"value": "Scholar Point"
												},
												{
													"hexValue": "535054",
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "467:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2f05a0ffc0c491cdeacb458a2f79632dce5a8d01cb1da4810845afdbd2865821",
														"typeString": "literal_string \"SPT\""
													},
													"value": "SPT"
												}
											],
											"id": 50,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 47,
												"name": "ERC20",
												"nameLocations": [
													"444:5:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1123,
												"src": "444:5:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "444:29:1"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "441:2:1"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:0:1"
									},
									"scope": 91,
									"src": "430:151:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "662:36:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 76,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "679:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 77,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 75,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "673:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "673:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "673:17:1"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 72,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 45,
													"src": "649:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 73,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 71,
												"name": "onlyRole",
												"nameLocations": [
													"640:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 133,
												"src": "640:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "640:21:1"
										}
									],
									"name": "mint",
									"nameLocation": "598:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "611:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "603:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "623:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "615:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:28:1"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:1"
									},
									"scope": 91,
									"src": "589:109:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										687
									],
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "763:13:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "772:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 86,
												"id": 88,
												"nodeType": "Return",
												"src": "765:8:1"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "715:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 83,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "738:8:1"
									},
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "723:2:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 84,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:7:1"
									},
									"scope": 91,
									"src": "706:70:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 92,
							"src": "306:473:1",
							"usedErrors": [
								398,
								401,
								483,
								488,
								493,
								502,
								507,
								512
							],
							"usedEvents": [
								410,
								419,
								428,
								1135,
								1144
							]
						}
					],
					"src": "33:748:1"
				},
				"id": 1
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							388
						],
						"Context": [
							1257
						],
						"ERC165": [
							1281
						],
						"IAccessControl": [
							471
						],
						"IERC165": [
							1293
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:2"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 389,
							"sourceUnit": 472,
							"src": "134:52:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 94,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 471,
										"src": "142:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 97,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 389,
							"sourceUnit": 1258,
							"src": "187:45:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 96,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1257,
										"src": "195:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 100,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 389,
							"sourceUnit": 1282,
							"src": "233:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 98,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1293,
										"src": "241:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 99,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1281,
										"src": "250:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 102,
										"name": "Context",
										"nameLocations": [
											"1997:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1257,
										"src": "1997:7:2"
									},
									"id": 103,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:2"
								},
								{
									"baseName": {
										"id": 104,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 471,
										"src": "2006:14:2"
									},
									"id": 105,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:2"
								},
								{
									"baseName": {
										"id": 106,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1281,
										"src": "2022:6:2"
									},
									"id": 107,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:2"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 101,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:2",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 388,
							"linearizedBaseContracts": [
								388,
								1281,
								1293,
								471,
								1257
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 114,
									"members": [
										{
											"constant": false,
											"id": 111,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 114,
											"src": "2061:40:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 110,
												"keyName": "account",
												"keyNameLocation": "2077:7:2",
												"keyType": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 113,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 114,
											"src": "2111:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 112,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:2",
									"nodeType": "StructDefinition",
									"scope": 388,
									"src": "2035:100:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 119,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 388,
									"src": "2141:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$114_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 118,
										"keyName": "role",
										"keyNameLocation": "2157:4:2",
										"keyType": {
											"id": 115,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$114_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 117,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 116,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 114,
												"src": "2165:8:2"
											},
											"referencedDeclaration": 114,
											"src": "2165:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$114_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 122,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 388,
									"src": "2196:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 120,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 121,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "2463:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 128,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2484:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 127,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															186,
															207
														],
														"referencedDeclaration": 186,
														"src": "2473:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:2"
											},
											{
												"id": 131,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:2"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:2",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 133,
									"name": "onlyRole",
									"nameLocation": "2440:8:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "2449:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 124,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:2"
									},
									"src": "2431:76:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1280
									],
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "2632:111:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 142,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "2649:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 144,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 471,
																		"src": "2669:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$471_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$471_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 143,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$471",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:2",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 150,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "2724:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 148,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$388_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1280,
															"src": "2700:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 141,
												"id": 153,
												"nodeType": "Return",
												"src": "2642:94:2"
											}
										]
									},
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:2",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 138,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:2"
									},
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2568:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 135,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:2"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2626:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:2"
									},
									"scope": 388,
									"src": "2541:202:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										438
									],
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "2913:53:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 165,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "2930:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$114_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 167,
															"indexExpression": {
																"id": 166,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2937:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$114_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:2",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 111,
														"src": "2930:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 170,
													"indexExpression": {
														"id": 169,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2951:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 164,
												"id": 171,
												"nodeType": "Return",
												"src": "2923:36:2"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "2847:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 157,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "2861:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:2"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "2907:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:2"
									},
									"scope": 388,
									"src": "2830:136:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "3231:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "3252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 181,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "3258:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 179,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															186,
															207
														],
														"referencedDeclaration": 207,
														"src": "3241:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:2"
											}
										]
									},
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:2",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3195:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 175,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:2"
									},
									"scope": 388,
									"src": "3175:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "3481:124:2",
										"statements": [
											{
												"condition": {
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:2",
													"subExpression": {
														"arguments": [
															{
																"id": 195,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "3504:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 196,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "3510:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 194,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "3496:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 205,
												"nodeType": "IfStatement",
												"src": "3491:108:2",
												"trueBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "3520:79:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 200,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 191,
																		"src": "3574:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 201,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "3583:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 199,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "3541:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 203,
															"nodeType": "RevertStatement",
															"src": "3534:54:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:2",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "3428:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "3442:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:2"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:2"
									},
									"scope": 388,
									"src": "3408:197:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										446
									],
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "3860:46:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 215,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "3877:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$114_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 217,
														"indexExpression": {
															"id": 216,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "3884:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$114_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:2",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 113,
													"src": "3877:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 214,
												"id": 219,
												"nodeType": "Return",
												"src": "3870:29:2"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "3808:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 209,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:2"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "3851:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 212,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:2"
									},
									"scope": 388,
									"src": "3786:120:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										454
									],
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "4296:42:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 235,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4317:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 236,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "4323:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 234,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "4306:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:2"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 230,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4289:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 229,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "4276:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 232,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 228,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 133,
												"src": "4267:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:2"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "4221:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 223,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "4235:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:2"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:2"
									},
									"scope": 388,
									"src": "4202:136:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										462
									],
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "4713:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 254,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "4735:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 255,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "4741:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 253,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "4723:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:2"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "4706:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "4693:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 251,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 247,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 133,
												"src": "4684:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:2"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "4638:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "4652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:2"
									},
									"scope": 388,
									"src": "4618:138:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										470
									],
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "5383:166:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 267,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "5397:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 268,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "5419:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 275,
												"nodeType": "IfStatement",
												"src": "5393:102:2",
												"trueBody": {
													"id": 274,
													"nodeType": "Block",
													"src": "5433:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 271,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "5454:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 273,
															"nodeType": "RevertStatement",
															"src": "5447:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "5517:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 278,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "5523:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 276,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "5505:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:2"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "5326:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 261,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "5340:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:2"
									},
									"scope": 388,
									"src": "5304:245:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "5747:174:2",
										"statements": [
											{
												"assignments": [
													291
												],
												"declarations": [
													{
														"constant": false,
														"id": 291,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:2",
														"nodeType": "VariableDeclaration",
														"scope": 309,
														"src": "5757:25:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 290,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 295,
												"initialValue": {
													"arguments": [
														{
															"id": 293,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "5798:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 292,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "5785:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:2"
											},
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 296,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "5813:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$114_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 298,
															"indexExpression": {
																"id": 297,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "5820:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$114_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 299,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:2",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 113,
														"src": "5813:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "5838:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 304,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "5879:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 305,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "5885:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 306,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "5904:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 303,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "5862:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "EmitStatement",
												"src": "5857:57:2"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:2",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "5697:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 284,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "5711:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 286,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:2"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:2"
									},
									"scope": 388,
									"src": "5674:247:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6238:233:2",
										"statements": [
											{
												"condition": {
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:2",
													"subExpression": {
														"arguments": [
															{
																"id": 321,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "6261:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 322,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "6267:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 320,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "6253:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 346,
													"nodeType": "Block",
													"src": "6428:37:2",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 319,
															"id": 345,
															"nodeType": "Return",
															"src": "6442:12:2"
														}
													]
												},
												"id": 347,
												"nodeType": "IfStatement",
												"src": "6248:217:2",
												"trueBody": {
													"id": 343,
													"nodeType": "Block",
													"src": "6277:145:2",
													"statements": [
														{
															"expression": {
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 325,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 119,
																				"src": "6291:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$114_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 327,
																			"indexExpression": {
																				"id": 326,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 313,
																				"src": "6298:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$114_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:2",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 111,
																		"src": "6291:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 330,
																	"indexExpression": {
																		"id": 329,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "6312:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 333,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 335,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 313,
																		"src": "6358:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 336,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "6364:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 337,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1239,
																			"src": "6373:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 334,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6346:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 340,
															"nodeType": "EmitStatement",
															"src": "6341:45:2"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 319,
															"id": 342,
															"nodeType": "Return",
															"src": "6400:11:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:2",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6175:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6189:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6232:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:2"
									},
									"scope": 388,
									"src": "6155:316:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "6792:233:2",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 360,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "6814:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 361,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "6820:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 359,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "6806:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 384,
													"nodeType": "Block",
													"src": "6982:37:2",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 358,
															"id": 383,
															"nodeType": "Return",
															"src": "6996:12:2"
														}
													]
												},
												"id": 385,
												"nodeType": "IfStatement",
												"src": "6802:217:2",
												"trueBody": {
													"id": 381,
													"nodeType": "Block",
													"src": "6830:146:2",
													"statements": [
														{
															"expression": {
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 363,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 119,
																				"src": "6844:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$114_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 365,
																			"indexExpression": {
																				"id": 364,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 352,
																				"src": "6851:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$114_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 366,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:2",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 111,
																		"src": "6844:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 368,
																	"indexExpression": {
																		"id": 367,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "6865:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 371,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 373,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 352,
																		"src": "6912:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 374,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "6918:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 375,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1239,
																			"src": "6927:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 372,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "6900:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 378,
															"nodeType": "EmitStatement",
															"src": "6895:45:2"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 358,
															"id": 380,
															"nodeType": "Return",
															"src": "6954:11:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:2",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "6729:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "6743:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:2"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "6786:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:2"
									},
									"scope": 388,
									"src": "6708:317:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 389,
							"src": "1962:5065:2",
							"usedErrors": [
								398,
								401
							],
							"usedEvents": [
								410,
								419,
								428
							]
						}
					],
					"src": "108:6920:2"
				},
				"id": 2
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							471
						]
					},
					"id": 472,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 390,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 391,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:3",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 471,
							"linearizedBaseContracts": [
								471
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:3",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 398,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "357:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "374:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 395,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:3"
									},
									"src": "318:76:3"
								},
								{
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:3",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 401,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:3"
									},
									"src": "553:37:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:3",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 410,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "878:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 403,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "900:33:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 405,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "935:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 407,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:3"
									},
									"src": "855:110:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:3",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 419,
									"name": "RoleGranted",
									"nameLocation": "1277:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "1289:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 412,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "1311:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "1336:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:3"
									},
									"src": "1271:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:3",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 428,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1664:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 421,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1686:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1711:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:3"
									},
									"src": "1646:89:3"
								},
								{
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:3",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1839:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 430,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1853:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:3"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1893:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:3"
									},
									"scope": 471,
									"src": "1822:77:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:3",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2116:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 440,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:3"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2153:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 443,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:3"
									},
									"scope": 471,
									"src": "2094:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:3",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2431:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2445:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:3"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:3"
									},
									"scope": 471,
									"src": "2412:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:3",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2725:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 456,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2739:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:3"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:3"
									},
									"scope": 471,
									"src": "2705:60:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:3",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "3289:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 464,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "3303:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:3"
									},
									"scope": 471,
									"src": "3267:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 472,
							"src": "226:3116:3",
							"usedErrors": [
								398,
								401
							],
							"usedEvents": [
								410,
								419,
								428
							]
						}
					],
					"src": "109:3234:3"
				},
				"id": 3
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							608
						],
						"IERC20Errors": [
							513
						],
						"IERC721Errors": [
							561
						]
					},
					"id": 609,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 473,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 474,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 513,
							"linearizedBaseContracts": [
								513
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 483,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 488,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 493,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 502,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 507,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 512,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 609,
							"src": "280:1764:4",
							"usedErrors": [
								483,
								488,
								493,
								502,
								507,
								512
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 514,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 561,
							"linearizedBaseContracts": [
								561
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 519,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 524,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 533,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 538,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 543,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 550,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 555,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 560,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 609,
							"src": "2190:2092:4",
							"usedErrors": [
								519,
								524,
								533,
								538,
								543,
								550,
								555,
								560
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 562,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 608,
							"linearizedBaseContracts": [
								608
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 573,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 578,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 583,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 590,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 595,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 600,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 607,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 609,
							"src": "4430:2107:4",
							"usedErrors": [
								573,
								578,
								583,
								590,
								595,
								600,
								607
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1257
						],
						"ERC20": [
							1123
						],
						"IERC20": [
							1201
						],
						"IERC20Errors": [
							513
						],
						"IERC20Metadata": [
							1227
						]
					},
					"id": 1124,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 610,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 612,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1124,
							"sourceUnit": 1202,
							"src": "131:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 611,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1201,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 614,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1124,
							"sourceUnit": 1228,
							"src": "168:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 613,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1227,
										"src": "176:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 616,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1124,
							"sourceUnit": 1258,
							"src": "232:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 615,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1257,
										"src": "240:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 618,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1124,
							"sourceUnit": 609,
							"src": "281:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 617,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 513,
										"src": "289:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 620,
										"name": "Context",
										"nameLocations": [
											"1133:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1257,
										"src": "1133:7:5"
									},
									"id": 621,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:5"
								},
								{
									"baseName": {
										"id": 622,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1201,
										"src": "1142:6:5"
									},
									"id": 623,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:5"
								},
								{
									"baseName": {
										"id": 624,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1227,
										"src": "1150:14:5"
									},
									"id": 625,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:5"
								},
								{
									"baseName": {
										"id": 626,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 513,
										"src": "1166:12:5"
									},
									"id": 627,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:5"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 619,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:5",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1123,
							"linearizedBaseContracts": [
								1123,
								513,
								1227,
								1201,
								1257
							],
							"name": "ERC20",
							"nameLocation": "1124:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 631,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1123,
									"src": "1185:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 630,
										"keyName": "account",
										"keyNameLocation": "1201:7:5",
										"keyType": {
											"id": 628,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 629,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 637,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1123,
									"src": "1245:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 636,
										"keyName": "account",
										"keyNameLocation": "1261:7:5",
										"keyType": {
											"id": 632,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 635,
											"keyName": "spender",
											"keyNameLocation": "1288:7:5",
											"keyType": {
												"id": 633,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 634,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 639,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1123,
									"src": "1335:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 638,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 641,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1123,
									"src": "1370:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 640,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 643,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1123,
									"src": "1396:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 642,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "1638:57:5",
										"statements": [
											{
												"expression": {
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 651,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "1648:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 652,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "1656:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:5"
											},
											{
												"expression": {
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 655,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "1671:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 656,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "1681:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:5"
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:5",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 660,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "1594:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 645,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "1615:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:5"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:5"
									},
									"scope": 1123,
									"src": "1582:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1214
									],
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "1820:29:5",
										"statements": [
											{
												"expression": {
													"id": 666,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 641,
													"src": "1837:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 665,
												"id": 667,
												"nodeType": "Return",
												"src": "1830:12:5"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "1805:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 663,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:5"
									},
									"scope": 1123,
									"src": "1760:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1220
									],
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "2024:31:5",
										"statements": [
											{
												"expression": {
													"id": 675,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 643,
													"src": "2041:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 674,
												"id": 676,
												"nodeType": "Return",
												"src": "2034:14:5"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:5",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:5"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "2009:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:5"
									},
									"scope": 1123,
									"src": "1962:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1226
									],
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "2744:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 683,
												"id": 685,
												"nodeType": "Return",
												"src": "2754:9:5"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:5",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:5"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "2737:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 681,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:5"
									},
									"scope": 1123,
									"src": "2688:82:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1150
									],
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "2864:36:5",
										"statements": [
											{
												"expression": {
													"id": 693,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 639,
													"src": "2881:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 692,
												"id": 694,
												"nodeType": "Return",
												"src": "2874:19:5"
											}
										]
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:5",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:5"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "2855:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:5"
									},
									"scope": 1123,
									"src": "2803:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1158
									],
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "3007:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 704,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "3024:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 706,
													"indexExpression": {
														"id": 705,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "3034:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 703,
												"id": 707,
												"nodeType": "Return",
												"src": "3017:25:5"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:5",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "2952:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:5"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "2998:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:5"
									},
									"scope": 1123,
									"src": "2933:116:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1168
									],
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "3319:103:5",
										"statements": [
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 732,
														"src": "3329:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 719,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 721,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "3345:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 725,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "3377:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "3384:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "3388:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "3367:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 718,
												"id": 731,
												"nodeType": "Return",
												"src": "3404:11:5"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:5",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3262:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3274:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:5"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3313:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:5"
									},
									"scope": 1123,
									"src": "3244:178:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1178
									],
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "3544:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 743,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "3561:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 745,
														"indexExpression": {
															"id": 744,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "3573:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 747,
													"indexExpression": {
														"id": 746,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "3580:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 742,
												"id": 748,
												"nodeType": "Return",
												"src": "3554:34:5"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:5",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "3474:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "3489:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:5"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "3535:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:5"
									},
									"scope": 1123,
									"src": "3455:140:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1188
									],
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "3981:107:5",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 773,
														"src": "3991:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 760,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 762,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "4007:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 766,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "4038:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "4045:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "4054:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 765,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1014,
															1074
														],
														"referencedDeclaration": 1014,
														"src": "4029:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 759,
												"id": 772,
												"nodeType": "Return",
												"src": "4070:11:5"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:5",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "3919:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "3936:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:5"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "3975:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 757,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:5"
									},
									"scope": 1123,
									"src": "3902:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1200
									],
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "4773:151:5",
										"statements": [
											{
												"assignments": [
													787
												],
												"declarations": [
													{
														"constant": false,
														"id": 787,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 805,
														"src": "4783:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 786,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 790,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 788,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "4801:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 792,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "4839:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "4845:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "4854:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 791,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "4823:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 798,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "4880:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 799,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "4886:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 800,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "4890:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 797,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "4870:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 785,
												"id": 804,
												"nodeType": "Return",
												"src": "4906:11:5"
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:5",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "4702:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "4716:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "4728:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:5"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "4767:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 783,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:5"
									},
									"scope": 1123,
									"src": "4680:244:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "5366:231:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 816,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "5380:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 817,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 830,
												"nodeType": "IfStatement",
												"src": "5376:86:5",
												"trueBody": {
													"id": 829,
													"nodeType": "Block",
													"src": "5400:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 825,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 823,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 822,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "5421:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 828,
															"nodeType": "RevertStatement",
															"src": "5414:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 831,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "5475:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 832,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "5471:86:5",
												"trueBody": {
													"id": 844,
													"nodeType": "Block",
													"src": "5493:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 838,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 837,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "5514:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 843,
															"nodeType": "RevertStatement",
															"src": "5507:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 847,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "5574:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "5580:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "5584:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 846,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "5566:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:5"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "5316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "5330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "5342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:5"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:5"
									},
									"scope": 1123,
									"src": "5297:300:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "5987:1032:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 863,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "6001:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 864,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "6175:362:5",
													"statements": [
														{
															"assignments": [
																875
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 875,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 900,
																	"src": "6189:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 874,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 879,
															"initialValue": {
																"baseExpression": {
																	"id": 876,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "6211:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 878,
																"indexExpression": {
																	"id": 877,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "6221:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 880,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "6244:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 881,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "6258:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 890,
															"nodeType": "IfStatement",
															"src": "6240:115:5",
															"trueBody": {
																"id": 889,
																"nodeType": "Block",
																"src": "6265:90:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 884,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 856,
																					"src": "6315:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 885,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 875,
																					"src": "6321:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 886,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 860,
																					"src": "6334:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 883,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 483,
																				"src": "6290:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 888,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:5"
																	}
																]
															}
														},
														{
															"id": 899,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:5",
															"statements": [
																{
																	"expression": {
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 891,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 631,
																				"src": "6475:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 893,
																			"indexExpression": {
																				"id": 892,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 856,
																				"src": "6485:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 894,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "6493:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 895,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 860,
																				"src": "6507:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 898,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:5"
																}
															]
														}
													]
												},
												"id": 901,
												"nodeType": "IfStatement",
												"src": "5997:540:5",
												"trueBody": {
													"id": 873,
													"nodeType": "Block",
													"src": "6021:148:5",
													"statements": [
														{
															"expression": {
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 869,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "6137:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 870,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "6153:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 872,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 902,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "6551:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 903,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 921,
													"nodeType": "Block",
													"src": "6766:206:5",
													"statements": [
														{
															"id": 920,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:5",
															"statements": [
																{
																	"expression": {
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 914,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 631,
																				"src": "6925:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 916,
																			"indexExpression": {
																				"id": 915,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 858,
																				"src": "6935:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 917,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 860,
																			"src": "6942:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 919,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:5"
																}
															]
														}
													]
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "6547:425:5",
												"trueBody": {
													"id": 913,
													"nodeType": "Block",
													"src": "6569:191:5",
													"statements": [
														{
															"id": 912,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:5",
															"statements": [
																{
																	"expression": {
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 908,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 639,
																			"src": "6714:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 909,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 860,
																			"src": "6730:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 911,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:5"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 924,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "6996:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "7002:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 926,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "7006:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 923,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "6987:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "EmitStatement",
												"src": "6982:30:5"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:5",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "5929:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "5943:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "5955:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:5"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:5"
									},
									"scope": 1123,
									"src": "5912:1107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "7418:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 938,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "7432:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 939,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 952,
												"nodeType": "IfStatement",
												"src": "7428:91:5",
												"trueBody": {
													"id": 951,
													"nodeType": "Block",
													"src": "7455:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 947,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 945,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 944,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "7476:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 950,
															"nodeType": "RevertStatement",
															"src": "7469:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 954,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 958,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "7548:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "7557:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 953,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "7528:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:5"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:5",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "7377:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "7394:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:5"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:5"
									},
									"scope": 1123,
									"src": "7362:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "7944:150:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 971,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "7958:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 972,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 985,
												"nodeType": "IfStatement",
												"src": "7954:89:5",
												"trueBody": {
													"id": 984,
													"nodeType": "Block",
													"src": "7981:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 980,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 978,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 977,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "8002:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 983,
															"nodeType": "RevertStatement",
															"src": "7995:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 987,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "8060:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 988,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 992,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "8081:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 986,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "8052:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:5"
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "7903:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "7920:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:5"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:5"
									},
									"scope": 1123,
									"src": "7888:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "8704:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1007,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "8723:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1008,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "8730:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1009,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "8739:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1006,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1014,
															1074
														],
														"referencedDeclaration": 1074,
														"src": "8714:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:5"
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:5",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "8648:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "8663:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "8680:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:5"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:5"
									},
									"scope": 1123,
									"src": "8630:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "9703:334:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1026,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "9717:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1027,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "9713:89:5",
												"trueBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "9738:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1033,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1032,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "9759:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1038,
															"nodeType": "RevertStatement",
															"src": "9752:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1041,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "9815:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1042,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1055,
												"nodeType": "IfStatement",
												"src": "9811:90:5",
												"trueBody": {
													"id": 1054,
													"nodeType": "Block",
													"src": "9838:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1050,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1048,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1047,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "9859:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1053,
															"nodeType": "RevertStatement",
															"src": "9852:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1056,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "9910:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1059,
															"indexExpression": {
																"id": 1057,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "9922:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1060,
														"indexExpression": {
															"id": 1058,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "9929:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1061,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "9940:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:5"
											},
											{
												"condition": {
													"id": 1064,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1023,
													"src": "9959:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1072,
												"nodeType": "IfStatement",
												"src": "9955:76:5",
												"trueBody": {
													"id": 1071,
													"nodeType": "Block",
													"src": "9970:61:5",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1066,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "9998:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1067,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "10005:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1068,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "10014:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1065,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "9989:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1070,
															"nodeType": "EmitStatement",
															"src": "9984:36:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:5",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "9623:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "9638:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "9655:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "9670:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1022,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:5"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:5"
									},
									"scope": 1123,
									"src": "9605:432:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "10408:387:5",
										"statements": [
											{
												"assignments": [
													1085
												],
												"declarations": [
													{
														"constant": false,
														"id": 1085,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1121,
														"src": "10418:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1084,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1090,
												"initialValue": {
													"arguments": [
														{
															"id": 1087,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "10455:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1088,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "10462:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1086,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "10445:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1091,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "10484:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1093,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1092,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1120,
												"nodeType": "IfStatement",
												"src": "10480:309:5",
												"trueBody": {
													"id": 1119,
													"nodeType": "Block",
													"src": "10522:267:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1098,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "10540:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1099,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "10559:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1108,
															"nodeType": "IfStatement",
															"src": "10536:130:5",
															"trueBody": {
																"id": 1107,
																"nodeType": "Block",
																"src": "10566:100:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1102,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "10618:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1103,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "10627:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1104,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1081,
																					"src": "10645:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1101,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "10591:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1106,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:5"
																	}
																]
															}
														},
														{
															"id": 1118,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1110,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1077,
																				"src": "10716:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1111,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "10723:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1112,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "10732:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1113,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1081,
																					"src": "10751:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1109,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1014,
																				1074
																			],
																			"referencedDeclaration": 1074,
																			"src": "10707:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1117,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:5",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "10344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "10359:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "10376:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:5"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:5"
									},
									"scope": 1123,
									"src": "10319:476:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1124,
							"src": "1106:9691:5",
							"usedErrors": [
								483,
								488,
								493,
								502,
								507,
								512
							],
							"usedEvents": [
								1135,
								1144
							]
						}
					],
					"src": "105:10693:5"
				},
				"id": 5
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1201
						]
					},
					"id": 1202,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1125,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1126,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1201,
							"linearizedBaseContracts": [
								1201
							],
							"name": "IERC20",
							"nameLocation": "215:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1135,
									"name": "Transfer",
									"nameLocation": "397:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "406:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "428:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "448:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:6"
									},
									"src": "391:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1144,
									"name": "Approval",
									"nameLocation": "628:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "637:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "660:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "685:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:6"
									},
									"src": "622:78:6"
								},
								{
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:6"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "822:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:6"
									},
									"scope": 1201,
									"src": "776:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "932:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:6"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "972:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:6"
									},
									"scope": 1201,
									"src": "913:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "1223:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "1235:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:6"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "1268:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:6"
									},
									"scope": 1201,
									"src": "1205:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "1568:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "1583:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:6"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "1623:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:6"
									},
									"scope": 1201,
									"src": "1549:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2327:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2344:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:6"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2377:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:6"
									},
									"scope": 1201,
									"src": "2310:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "2713:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "2727:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "2739:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:6"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "2772:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1197,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:6"
									},
									"scope": 1201,
									"src": "2691:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1202,
							"src": "205:2575:6",
							"usedErrors": [],
							"usedEvents": [
								1135,
								1144
							]
						}
					],
					"src": "106:2675:6"
				},
				"id": 6
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1201
						],
						"IERC20Metadata": [
							1227
						]
					},
					"id": 1228,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1203,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1205,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1228,
							"sourceUnit": 1202,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1204,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1201,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1207,
										"name": "IERC20",
										"nameLocations": [
											"306:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1201,
										"src": "306:6:7"
									},
									"id": 1208,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1206,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:7",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1227,
							"linearizedBaseContracts": [
								1227,
								1201
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:7"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "417:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1211,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:7"
									},
									"scope": 1227,
									"src": "378:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:7"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1217,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 1227,
									"src": "499:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:7"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "674:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1223,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:7"
									},
									"scope": 1227,
									"src": "631:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1228,
							"src": "278:405:7",
							"usedErrors": [],
							"usedEvents": [
								1135,
								1144
							]
						}
					],
					"src": "125:559:7"
				},
				"id": 7
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1257
						]
					},
					"id": 1258,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1229,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1230,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1257,
							"linearizedBaseContracts": [
								1257
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1235,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1234,
												"id": 1237,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1257,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1244,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1243,
												"id": 1246,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1257,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1252,
												"id": 1254,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1257,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1258,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1281
						],
						"IERC165": [
							1293
						]
					},
					"id": 1282,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1259,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1261,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1282,
							"sourceUnit": 1294,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1260,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1293,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1263,
										"name": "IERC165",
										"nameLocations": [
											"688:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "688:7:9"
									},
									"id": 1264,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1262,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1281,
							"linearizedBaseContracts": [
								1281,
								1293
							],
							"name": "ERC165",
							"nameLocation": "678:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1292
									],
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "812:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1272,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "829:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1274,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1293_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1293_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1273,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1293",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1271,
												"id": 1278,
												"nodeType": "Return",
												"src": "822:47:9"
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:9",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "757:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1266,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:9"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "806:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:9"
									},
									"scope": 1281,
									"src": "730:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1282,
							"src": "660:218:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:9"
				},
				"id": 9
			},
			"https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v5.4.0/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1293
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1283,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1284,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1293,
							"linearizedBaseContracts": [
								1293
							],
							"name": "IERC165",
							"nameLocation": "433:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "819:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1286,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:10"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "862:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:10"
									},
									"scope": 1293,
									"src": "792:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1294,
							"src": "423:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:10"
				},
				"id": 10
			}
		}
	}
}